--- BLOCK #0 1-28, warpins: 1 ---
local role = import(".role")
local mon = class("mon", role)

table.merge(mon, {})

mon.ctor = function (self, params)
	--- BLOCK #0 1-13, warpins: 1 ---
	mon.super.ctor(self, params)
	self.initEnd(self)
	--- END OF BLOCK #0 ---

	if SM_DEATH ~= params.form then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 14-19, warpins: 1 ---
	sound.play("born", self.sounds.born)

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 20-20, warpins: 2 ---
	return 
	--- END OF BLOCK #2 ---



end
mon.onEnter = function (self)
	--- BLOCK #0 1-9, warpins: 1 ---
	self.super.onEnter(self)
	--- END OF BLOCK #0 ---

	slot1 = if self.isGuard(self)

	 then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 10-25, warpins: 1 ---
	self.guardData = {
		x = self.x,
		y = self.y,
		dir = self.dir
	}
	self.guardData.handler = self.node:schedule(function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if self.x == self.guardData.x then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-14, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if self.y ~= self.guardData.y then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #2 15-20, warpins: 2 ---
		--- END OF BLOCK #2 ---

		if #self.acts <= 0 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #3 21-27, warpins: 1 ---
		--- END OF BLOCK #3 ---

		if self.dir ~= self.guardData.dir then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 28-42, warpins: 1 ---
		self:processMsg(SM_TURN, self.guardData.x, self.guardData.y, self.guardData.dir)

		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #5 43-63, warpins: 1 ---
		self.x = self.guardData.x
		self.y = self.guardData.y

		self.map:uptRoleXY(self, true, self.x, self.y)

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 64-64, warpins: 4 ---
		return 
		--- END OF BLOCK #6 ---



	end, 0.5)

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 26-27, warpins: 2 ---
	return 
	--- END OF BLOCK #2 ---



end
mon.isGuard = function (self)
	--- BLOCK #0 1-8, warpins: 1 ---
	local race = self.getRace(self)
	local appr = self.getAppr(self)

	--- END OF BLOCK #0 ---

	if race == 12 then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 9-10, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if appr ~= 0 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #2 11-12, warpins: 2 ---
	--- END OF BLOCK #2 ---

	if race == 12 then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 13-14, warpins: 1 ---
	--- END OF BLOCK #3 ---

	if appr ~= 102 then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #4 15-16, warpins: 2 ---
	--- END OF BLOCK #4 ---

	if race == 24 then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #5 17-18, warpins: 1 ---
	--- END OF BLOCK #5 ---

	if appr == 2 then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 19-21, warpins: 3 ---
	return true
	--- END OF BLOCK #6 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #7 22-23, warpins: 2 ---
	return false
	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 24-24, warpins: 2 ---
	return 
	--- END OF BLOCK #8 ---



end
mon.getParts = function (self, feature)
	--- BLOCK #0 1-25, warpins: 1 ---
	local parts = {}
	local race = feature.get(feature, "race")
	local appr = feature.get(feature, "dress")
	self.appr = appr
	self.race = race
	local monsterId = def.role.getRoleId(race, appr)
	local imgid = def.role.getMonImg(monsterId)
	--- END OF BLOCK #0 ---

	slot6 = if imgid then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #1 26-41, warpins: 1 ---
	local dressFrame = def.role.getDressFrame(monsterId)
	slot8 = {
		id = appr,
		imgid = imgid,
		offset = def.role.getOffset(monsterId)
	}
	--- END OF BLOCK #1 ---

	slot9 = if not dressFrame then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 42-42, warpins: 1 ---
	slot9 = {}
	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 43-60, warpins: 2 ---
	slot8.frame = slot9
	slot8.cannotMove = not def.role.getMonster(monsterId).canMove
	parts.dress = slot8
	local hairFrame = def.role.getHairFrame(monsterId)
	--- END OF BLOCK #3 ---

	slot9 = if special then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #4 61-87, warpins: 1 ---
	parts.hair = {
		id = appr,
		imgid = imgid,
		offset = def.role.getOffset(monsterId),
		frame = hairFrame,
		cannotMove = not def.role.getMonster(monsterId).canMove,
		blend = def.role.getMonster(monsterId).blend
	}
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #6


	--- BLOCK #5 88-111, warpins: 1 ---
	appr = 27
	race = 18
	local monsterId = def.role.getRoleId(race, appr)
	parts.dress = {
		imgid = "mon3",
		id = appr,
		offset = def.role.getOffset(monsterId),
		frame = def.role.getFrame(monsterId)
	}

	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 112-113, warpins: 3 ---
	--- END OF BLOCK #6 ---

	if race == 153 then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 114-116, warpins: 1 ---
	dump(parts)

	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 117-118, warpins: 2 ---
	--- END OF BLOCK #8 ---

	if race ~= 50 then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #9 119-123, warpins: 1 ---
	self.sounds = sound.monSounds(appr)

	--- END OF BLOCK #9 ---

	FLOW; TARGET BLOCK #10


	--- BLOCK #10 124-124, warpins: 2 ---
	return parts
	--- END OF BLOCK #10 ---



end
mon.isPolice = function (self)
	--- BLOCK #0 1-9, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if checkExist(self.getRace(self), 50, 12)

	 then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 10-11, warpins: 1 ---
	return true

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 12-17, warpins: 2 ---
	local name = self.info:getName()

	--- END OF BLOCK #2 ---

	slot1 = if name then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 18-19, warpins: 1 ---
	--- END OF BLOCK #3 ---

	if name ~= "¹­¼ý»¤ÎÀ" then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 20-21, warpins: 2 ---
	--- END OF BLOCK #4 ---

	if name == "¹­¼ýÊØÎÀ" then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 22-23, warpins: 2 ---
	return true
	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 24-24, warpins: 2 ---
	return 
	--- END OF BLOCK #6 ---



end
mon.addAct = function (self, params)
	--- BLOCK #0 1-21, warpins: 1 ---
	local monsterId = def.role.getRoleId(self.getRace(self), self.feature:get("dress"))
	local frame = def.role.getFrame(monsterId)
	--- END OF BLOCK #0 ---

	slot4 = if frame[params.type] then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #1 22-26, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot4 = if frame[params.type].otherEffect then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 27-30, warpins: 1 ---
	params.otherEffect = frame[params.type].otherEffect

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 31-41, warpins: 3 ---
	self.addActSign(self, params)
	mon.super.addAct(self, params)

	return 
	--- END OF BLOCK #3 ---



end
mon.addActSign = function (self, params)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	if self.race == 99 then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #1 4-8, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot2 = if self.info.hp.cur then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #2 9-14, warpins: 1 ---
	--- END OF BLOCK #2 ---

	if self.info.hp.cur < 8500 then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #3 15-20, warpins: 1 ---
	--- END OF BLOCK #3 ---

	if 5000 < self.info.hp.cur then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 21-23, warpins: 1 ---
	params.sign = "SabukDoor-1"
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #5 24-28, warpins: 3 ---
	--- END OF BLOCK #5 ---

	slot2 = if self.info.hp.cur then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #6 29-34, warpins: 1 ---
	--- END OF BLOCK #6 ---

	if self.info.hp.cur < 5000 then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 35-36, warpins: 1 ---
	params.sign = "SabukDoor-2"

	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 37-37, warpins: 5 ---
	return 
	--- END OF BLOCK #8 ---



end

return mon
--- END OF BLOCK #0 ---



