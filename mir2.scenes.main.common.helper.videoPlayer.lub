--- BLOCK #0 1-14, warpins: 1 ---
local video = class("videoPlayer")
video.setRunner = function (self, runner)
	--- BLOCK #0 1-3, warpins: 1 ---
	video.runner = runner

	return 
	--- END OF BLOCK #0 ---



end
video.setEvtCallback = function (self, func)
	--- BLOCK #0 1-2, warpins: 1 ---
	self.evtCallback = func

	return 
	--- END OF BLOCK #0 ---



end
local VideoPlayerEvent = {
	PLAYING = 0,
	STOPPED = 2,
	PAUSED = 1,
	COMPLETED = 3
}
video.play = function (self, fileName, params)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if not params then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-3, warpins: 1 ---
	params = {}
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 4-8, warpins: 2 ---
	local affix = nil
	--- END OF BLOCK #2 ---

	if device.platform == "windows" then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 9-12, warpins: 1 ---
	fileName = fileName .. ".avi"
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #5


	--- BLOCK #4 13-15, warpins: 1 ---
	fileName = fileName .. ".mp4"
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 16-24, warpins: 2 ---
	local fileutils = cc.FileUtils:getInstance()
	--- END OF BLOCK #5 ---

	if device.platform ~= "android" then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 25-29, warpins: 1 ---
	fileName = fileutils.fullPathForFilename(fileutils, fileName)

	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 30-39, warpins: 2 ---
	print("playVideo:", fileName)
	--- END OF BLOCK #7 ---

	slot5 = if not fileutils.isFileExist(fileutils, fileName)
	 then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #8 40-44, warpins: 1 ---
	print("Err file not exist", fileName)

	return 

	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 45-63, warpins: 1 ---
	local video = nil
	local evtCallback = self.evtCallback

	local function videoEventListener(sender, tag)
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if tag == VideoPlayerEvent.PAUSED then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 5-11, warpins: 1 ---
		video:performWithDelay(function ()
			--- BLOCK #0 1-9, warpins: 1 ---
			video:resume()
			video:play()

			return 
			--- END OF BLOCK #0 ---



		end, 0)
		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #8


		--- BLOCK #2 12-15, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if tag ~= VideoPlayerEvent.COMPLETED then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #3 16-19, warpins: 1 ---
		--- END OF BLOCK #3 ---

		if device.platform ~= "mac" then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 20-23, warpins: 1 ---
		--- END OF BLOCK #4 ---

		if device.platform == "windows" then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #5 24-26, warpins: 3 ---
		--- END OF BLOCK #5 ---

		slot2 = if evtCallback then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #6 27-29, warpins: 1 ---
		evtCallback("VideoComplete")
		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 30-40, warpins: 2 ---
		video:stop()
		video:run(cca.removeSelf())

		--- END OF BLOCK #7 ---

		FLOW; TARGET BLOCK #8


		--- BLOCK #8 41-41, warpins: 3 ---
		return 
		--- END OF BLOCK #8 ---



	end

	local scene = cc.Director:getInstance():getRunningScene().s

	scheduler.performWithDelayGlobal(function ()
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if device.platform ~= "mac" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 5-8, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if device.platform == "windows" then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 9-46, warpins: 2 ---
		video = display.newNode():add2(scene):center()

		video:performWithDelay(handler(video, videoEventListener), 5)
		an.newLabel(string.format("假装这里在播视频。。。\n%s\n(MAC模拟器下暂无播放视频接口)", fileName)):add2(video):anchor(0.5, 0.5)

		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #3 47-81, warpins: 1 ---
		video = ccexp.VideoPlayer:create():add2(scene)

		video:addEventListener(videoEventListener)
		video:size(display.width, display.height):center()
		video:setFullScreenEnabled(true)
		--- END OF BLOCK #3 ---

		slot0 = if params.keepAspectRatio then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 82-86, warpins: 1 ---
		video:setKeepAspectRatioEnabled(true)
		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 87-95, warpins: 2 ---
		video:setFileName(fileName)
		video:play()

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 96-96, warpins: 2 ---
		return 
		--- END OF BLOCK #6 ---



	end, 0)

	return 
	--- END OF BLOCK #9 ---

	FLOW; TARGET BLOCK #10


	--- BLOCK #10 64-64, warpins: 2 ---
	--- END OF BLOCK #10 ---



end
video.test = function (self)
	--- BLOCK #0 1-1, warpins: 1 ---
	return 
	--- END OF BLOCK #0 ---



end

return video
--- END OF BLOCK #0 ---



