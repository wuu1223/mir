--- BLOCK #0 1-48, warpins: 1 ---
local item = import("..common.item")
local box = class("box", function ()
	--- BLOCK #0 1-3, warpins: 1 ---
	return display.newNode()
	--- END OF BLOCK #0 ---



end)
box.ctor = function (self, boxType, buf, buflen)
	--- BLOCK #0 1-13, warpins: 1 ---
	self._supportMove = true
	self.curIndex = 1
	self.rotating = false
	self.boxType = boxType

	self.center(self)

	--- END OF BLOCK #0 ---

	if boxType <= 2 then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 14-52, warpins: 1 ---
	self.spr = m2spr.playAnimation("prguse3", (boxType + 1)*20 + 520, 5, 0.1, false, false, true, handler(self, self.onAnimOk)):addTo(self)
	self.sprBlend = m2spr.playAnimation("prguse3", (boxType + 1)*20 + 527, 5, 0.1, true, false, true):addTo(self)
	--- END OF BLOCK #1 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #3


	--- BLOCK #2 53-86, warpins: 1 ---
	self.spr = m2spr.playAnimation("prguse2", 130, 6, 0.1, false, false, true, handler(self, self.onAnimOk)):addTo(self)
	self.sprBlend = m2spr.playAnimation("prguse2", 137, 6, 0.1, true, false, true):addTo(self)

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 87-200, warpins: 2 ---
	self.spr:anchor(0.5, 0.5)
	self.sprBlend:anchor(0.5, 0.5)

	local bg = display.newSprite(res.gettex("prguse2", 210)):addTo(self):anchor(0, 0):hide()
	self.bg = bg

	self.size(self, bg.getContentSize(bg))
	an.newBtn(res.gettex2("pic/common/close10.png"), function ()
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if self.rotating then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 5-5, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 6-20, warpins: 2 ---
		sound.playSound("103")
		self:hidePanel()
		net.send({
			CM_BOX2_CLOSE
		})

		return 
		--- END OF BLOCK #2 ---



	end, {
		pressImage = res.gettex2("pic/common/close11.png"),
		size = cc.size(64, 64)
	}):anchor(1, 1):pos(bg.getw(bg) - 3, bg.geth(bg) - 3):addto(bg)
	an.newBtn(res.gettex("prguse2", 225), function ()
		--- BLOCK #0 1-8, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if self.rotating then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 9-9, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 10-14, warpins: 2 ---
		--- END OF BLOCK #2 ---

		for k, v in pairs(self.cellItems)

		LOOP BLOCK #3
		GO OUT TO BLOCK #6


		--- BLOCK #3 15-17, warpins: 1 ---
		--- END OF BLOCK #3 ---

		slot5 = if v.clicker then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 18-23, warpins: 1 ---
		v.clicker:removeFromParent()

		v.clicker = nil
		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 24-25, warpins: 3 ---
		--- END OF BLOCK #5 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #2


		--- BLOCK #6 26-32, warpins: 1 ---
		local data = {}
		data[1] = CM_BOX2_ROTATE

		--- END OF BLOCK #6 ---

		if self.openTimes ~= 0 then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #11
		end


		--- BLOCK #7 33-38, warpins: 1 ---
		--- END OF BLOCK #7 ---

		for k, v in pairs(g_data.bag.items)

		LOOP BLOCK #8
		GO OUT TO BLOCK #11


		--- BLOCK #8 39-45, warpins: 1 ---
		--- END OF BLOCK #8 ---

		if v.getVar("name")

		 == g_data.usingTreasureKeyName then
		JUMP TO BLOCK #9
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #9 46-58, warpins: 1 ---
		local keyIndex = v.get(v, "makeIndex")
		data.param = Loword(keyIndex)
		data.tag = Hiword(keyIndex)
		--- END OF BLOCK #9 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #11


		--- BLOCK #10 59-60, warpins: 2 ---
		--- END OF BLOCK #10 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #7


		--- BLOCK #11 61-70, warpins: 3 ---
		self.openTimes = self.openTimes + 1

		net.send(data)

		return 
		--- END OF BLOCK #11 ---



	end, {
		pressImage = res.gettex("prguse2", 226)
	}):anchor(0.5, 0):pos(bg.getw(bg)/2, 30):addto(bg)

	--- END OF BLOCK #3 ---

	slot3 = if not buflen then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 201-202, warpins: 1 ---
	return 

	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 203-204, warpins: 2 ---
	self.box2PrizeItems = {}
	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 205-207, warpins: 2 ---
	--- END OF BLOCK #6 ---

	if 0 < buflen then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #7 208-208, warpins: 1 ---
	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 209-226, warpins: 1 ---
	local item = getRecord("TBox2PrizeItem")
	_, buf, buflen = net.record(item, buf, buflen)

	table.insert(self.box2PrizeItems, item)

	--- END OF BLOCK #8 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #6


	--- BLOCK #9 227-230, warpins: 1 ---
	self.openTimes = 0

	return 
	--- END OF BLOCK #9 ---



end
box.onAnimOk = function (self)
	--- BLOCK #0 1-4, warpins: 1 ---
	--- END OF BLOCK #0 ---

	if self.boxType <= 2 then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 5-45, warpins: 1 ---
	self.spr1 = m2spr.playAnimation("prguse3", (self.boxType + 1)*20 + 525, 2, 0.2, false, false, true, handler(self, self.onOpened)):addTo(self)
	self.sprBlend1 = m2spr.playAnimation("prguse3", (self.boxType + 1)*20 + 532, 2, 0.2, true, false, true):addTo(self)
	--- END OF BLOCK #1 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #3


	--- BLOCK #2 46-79, warpins: 1 ---
	self.spr1 = m2spr.playAnimation("prguse2", 135, 2, 0.1, false, false, true, handler(self, self.onOpened)):addTo(self)
	self.sprBlend1 = m2spr.playAnimation("prguse2", 142, 2, 0.1, true, false, true):addTo(self)

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 80-92, warpins: 2 ---
	self.spr1:anchor(0.5, 0.5)
	self.sprBlend1:anchor(0.5, 0.5)

	return 
	--- END OF BLOCK #3 ---



end
local itemPos = {}
itemPos[1] = {
	x = 52,
	y = 129
}
itemPos[2] = {
	x = 52,
	y = 81
}
itemPos[3] = {
	x = 104,
	y = 81
}
itemPos[4] = {
	x = 155,
	y = 81
}
itemPos[5] = {
	x = 155,
	y = 129
}
itemPos[6] = {
	x = 155,
	y = 177
}
itemPos[7] = {
	x = 104,
	y = 177
}
itemPos[8] = {
	x = 52,
	y = 177
}
itemPos[9] = {
	x = 104,
	y = 129
}
itemPos[10] = {
	x = 52,
	y = 237
}
itemPos[11] = {
	x = 155,
	y = 237
}
itemPos[12] = {
	x = 104,
	y = 237
}
box.updateItems = function (self)
	--- BLOCK #0 1-4, warpins: 1 ---
	slot1 = pairs
	--- END OF BLOCK #0 ---

	slot2 = if not self.cellItems then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 5-5, warpins: 1 ---
	slot2 = {}

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 6-7, warpins: 2 ---
	--- END OF BLOCK #2 ---

	for k, v in slot1(slot2)

	LOOP BLOCK #3
	GO OUT TO BLOCK #5


	--- BLOCK #3 8-14, warpins: 1 ---
	v.clr:removeFromParent()
	v.removeFromParent(v)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 15-16, warpins: 2 ---
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #2


	--- BLOCK #5 17-22, warpins: 1 ---
	self.cellItems = {}

	--- END OF BLOCK #5 ---

	for k, v in pairs(self.box2PrizeItems)


	LOOP BLOCK #6
	GO OUT TO BLOCK #12


	--- BLOCK #6 23-42, warpins: 1 ---
	local spr = res.get("items", v.get(v, "looks")):addTo(self)

	spr.setPosition(spr, itemPos[k])

	--- END OF BLOCK #6 ---

	if k <= 9 then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 43-74, warpins: 1 ---
	local clr = display.newColorLayer(cc.c4b(0, 0, 0, 196)):size(35, 35):addTo(self)
	spr.clr = clr
	local pos = itemPos[k]

	clr.setPosition(clr, cc.p(pos.x - 18, pos.y - 18))

	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 75-76, warpins: 2 ---
	--- END OF BLOCK #8 ---

	if k == 9 then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #9 77-86, warpins: 1 ---
	self.preCell = spr

	spr.clr:setVisible(false)
	self.enableReceiveGift(self, spr)

	--- END OF BLOCK #9 ---

	FLOW; TARGET BLOCK #10


	--- BLOCK #10 87-88, warpins: 2 ---
	self.cellItems[k] = spr

	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 89-90, warpins: 2 ---
	--- END OF BLOCK #11 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #5


	--- BLOCK #12 91-91, warpins: 1 ---
	return 
	--- END OF BLOCK #12 ---



end
box.onOpened = function (self)
	--- BLOCK #0 1-35, warpins: 1 ---
	self.spr:removeFromParent()
	self.sprBlend:removeFromParent()
	self.spr1:removeFromParent()
	self.sprBlend1:removeFromParent()
	self.setPosition(self, self.getPositionX(self) + 100, self.getPositionY(self) - 120)
	self.bg:show()
	self.updateItems(self)

	return 
	--- END OF BLOCK #0 ---



end
box.enableReceiveGift = function (self, spr, removeOnClose)
	--- BLOCK #0 1-48, warpins: 1 ---
	spr.t = 0
	local sz = spr.getContentSize(spr)
	local x = sz.width/2
	local y = sz.height/2
	spr.clicker = display.newNode():addto(spr):anchor(0.5, 0.5):pos(x, y)

	spr.clicker:setContentSize(cc.size(35, 35))
	spr.clicker:setTouchEnabled(true)
	spr.clicker:enableClick(function ()
		--- BLOCK #0 1-9, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if os.time()
		 - spr.t < 0.6 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #1 10-22, warpins: 1 ---
		net.send({
			CM_BOX2_GETPRIZE
		})
		--- END OF BLOCK #1 ---

		slot0 = if not tolua.isnull(self.lightEffect)
		 then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 23-27, warpins: 1 ---
		self.lightEffect:removeFromParent()
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 28-31, warpins: 2 ---
		--- END OF BLOCK #3 ---

		slot0 = if spr.clicker then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 32-37, warpins: 1 ---
		spr.clicker:setTouchEnabled(false)

		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 38-38, warpins: 2 ---
		return 

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 39-44, warpins: 2 ---
		spr.t = os.time()

		return 
		--- END OF BLOCK #6 ---



	end)

	return 
	--- END OF BLOCK #0 ---



end
box.onRotate = function (self, index)
	--- BLOCK #0 1-19, warpins: 1 ---
	self.rotating = true
	local flashType = math.random(9) - 1
	local co = nil
	co = coroutine.create(function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		local preFlash = nil

		--- END OF BLOCK #0 ---

		for k=self.curIndex, index + 16, 1
		LOOP BLOCK #1
		GO OUT TO BLOCK #15

		--- BLOCK #1 8-11, warpins: 2 ---
		--- END OF BLOCK #1 ---

		slot5 = if self.preCell then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 12-18, warpins: 1 ---
		self.preCell.clr:setVisible(true)

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 19-34, warpins: 2 ---
		local cell = self.cellItems[k%8 + 1]
		self.preCell = cell

		print(k, cell, k%8 + 1, index)
		--- END OF BLOCK #3 ---

		slot5 = if cell then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #14
		end


		--- BLOCK #4 35-46, warpins: 1 ---
		cell.clr:setVisible(false)

		local off = k - self.curIndex
		local speed = 0
		--- END OF BLOCK #4 ---

		if off < 4 then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 47-48, warpins: 1 ---
		speed = 90
		--- END OF BLOCK #5 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #13


		--- BLOCK #6 49-51, warpins: 1 ---
		--- END OF BLOCK #6 ---

		if off < 8 then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 52-53, warpins: 1 ---
		speed = 150
		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #13


		--- BLOCK #8 54-56, warpins: 1 ---
		--- END OF BLOCK #8 ---

		if off < 12 then
		JUMP TO BLOCK #9
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #9 57-58, warpins: 1 ---
		speed = 270
		--- END OF BLOCK #9 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #13


		--- BLOCK #10 59-62, warpins: 1 ---
		--- END OF BLOCK #10 ---

		if off == index + 16 then
		JUMP TO BLOCK #11
		else
		JUMP TO BLOCK #12
		end


		--- BLOCK #11 63-64, warpins: 1 ---
		speed = 0.01
		--- END OF BLOCK #11 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #13


		--- BLOCK #12 65-65, warpins: 1 ---
		speed = 390
		--- END OF BLOCK #12 ---

		FLOW; TARGET BLOCK #13


		--- BLOCK #13 66-100, warpins: 5 ---
		preFlash = m2spr.playAnimation("prguse3", flashType*2 + 600, 2, speed/3000, true, false, true, function ()
			--- BLOCK #0 1-3, warpins: 1 ---
			--- END OF BLOCK #0 ---

			slot0 = if preFlash then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 4-7, warpins: 1 ---
			preFlash:removeFromParent()
			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 8-12, warpins: 2 ---
			coroutine.resume(co)

			return 
			--- END OF BLOCK #2 ---



		end):addTo(self):anchor(0.5, 0.5)
		local pos = itemPos[k%8 + 1]

		preFlash.setPosition(preFlash, cc.p(pos.x, pos.y))
		--- END OF BLOCK #13 ---

		FLOW; TARGET BLOCK #14


		--- BLOCK #14 101-104, warpins: 2 ---
		coroutine.yield()

		--- END OF BLOCK #14 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #15 105-151, warpins: 1 ---
		self.curIndex = index
		self.rotating = false

		self:enableReceiveGift(self.preCell)

		local light = m2spr.playAnimation("prguse2", 260, 5, 0.15, true, false, false):addTo(self):anchor(0.5, 0.5)
		local pos = itemPos[index + 1]

		light.setPosition(light, cc.p(pos.x, pos.y))

		self.lightEffect = light

		return 
		--- END OF BLOCK #15 ---



	end)

	coroutine.resume(co)

	return 
	--- END OF BLOCK #0 ---



end
box.onGetPrize = function (self)
	--- BLOCK #0 1-4, warpins: 1 ---
	--- END OF BLOCK #0 ---

	if 3 >= self.openTimes then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 5-7, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if self.openTimes == 0 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 8-17, warpins: 2 ---
	net.send({
		CM_BOX2_CLOSE
	})
	self.hidePanel(self)

	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #3 18-52, warpins: 1 ---
	local curItem = self.cellItems[self.curIndex + 1]

	curItem.runs(curItem, {
		cca.fadeOut(0.5),
		cca.callFunc(function ()
			--- BLOCK #0 1-26, warpins: 1 ---
			local tex = res.gettex("items", self.box2PrizeItems[self.openTimes + 9]:get("looks"))

			curItem:setTex(tex)
			curItem:setContentSize(35, 35)

			return 
			--- END OF BLOCK #0 ---



		end),
		cca.fadeIn(0.5)
	})
	self.cellItems[self.openTimes + 9]:run(cca.fadeOut(0.5))

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 53-54, warpins: 2 ---
	return 
	--- END OF BLOCK #4 ---



end

return box
--- END OF BLOCK #0 ---



