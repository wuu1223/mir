--- BLOCK #0 1-13, warpins: 1 ---
local wordfilter = {}
local configs = {}

scheduler.performWithDelayGlobal(function ()
	--- BLOCK #0 1-13, warpins: 1 ---
	local file = res.getfile("config/wordfilter.txt")
	local datas = string.split(file, "\n")

	--- END OF BLOCK #0 ---

	for i, v in ipairs(datas)


	LOOP BLOCK #1
	GO OUT TO BLOCK #4


	--- BLOCK #1 14-15, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if v ~= "" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 16-27, warpins: 1 ---
	local function fill(group, words, idx)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if #words < idx then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-6, warpins: 1 ---
		group[1] = true

		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 7-10, warpins: 2 ---
		local word = words[idx]
		local subGroup = group[word]
		--- END OF BLOCK #2 ---

		slot4 = if not subGroup then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 11-12, warpins: 1 ---
		subGroup = {}
		group[word] = subGroup

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 13-18, warpins: 2 ---
		fill(subGroup, words, idx + 1)

		return 
		--- END OF BLOCK #4 ---



	end

	fill(configs, utf8strs(string.trim(v)), 1)

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 28-29, warpins: 3 ---
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #4 30-30, warpins: 1 ---
	return 
	--- END OF BLOCK #4 ---



end, 0)

wordfilter.run = function (text, replaceWrod)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot0 = if text then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-4, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if text == "" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 5-5, warpins: 2 ---
	return text

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 6-11, warpins: 1 ---
	text = utf8strs(text)

	local function check(group, i, plies, cnt)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot4 = if group[1] then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-4, warpins: 1 ---
		cnt = plies

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 5-8, warpins: 2 ---
		--- END OF BLOCK #2 ---

		if #text < i then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 9-9, warpins: 1 ---
		return cnt

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 10-14, warpins: 2 ---
		local subGroup = group[text[i]]

		--- END OF BLOCK #4 ---

		slot4 = if not subGroup then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 15-15, warpins: 1 ---
		return cnt
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 16-21, warpins: 2 ---
		return check(subGroup, i + 1, plies + 1, cnt)
		--- END OF BLOCK #6 ---



	end

	local i = 1
	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 12-12, warpins: 3 ---
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 13-21, warpins: 1 ---
	local cnt = check(configs, i, 0, 0)
	--- END OF BLOCK #5 ---

	if 0 < cnt then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #6 22-26, warpins: 1 ---
	--- END OF BLOCK #6 ---

	for j=i, (i + cnt) - 1, 1
	LOOP BLOCK #7
	GO OUT TO BLOCK #10

	--- BLOCK #7 27-28, warpins: 2 ---
	--- END OF BLOCK #7 ---

	slot9 = if not replaceWrod then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #8 29-29, warpins: 1 ---
	slot9 = "*"
	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 30-31, warpins: 2 ---
	text[j] = slot9
	--- END OF BLOCK #9 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #6


	--- BLOCK #10 32-33, warpins: 1 ---
	i = i + cnt
	--- END OF BLOCK #10 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #12


	--- BLOCK #11 34-34, warpins: 1 ---
	i = i + 1

	--- END OF BLOCK #11 ---

	FLOW; TARGET BLOCK #12


	--- BLOCK #12 35-37, warpins: 2 ---
	--- END OF BLOCK #12 ---

	if #text < i then
	JUMP TO BLOCK #13
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #13 38-38, warpins: 1 ---
	--- END OF BLOCK #13 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #15


	--- BLOCK #14 39-39, warpins: 0 ---
	--- END OF BLOCK #14 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #15 40-44, warpins: 1 ---
	return table.concat(text)
	--- END OF BLOCK #15 ---

	FLOW; TARGET BLOCK #16


	--- BLOCK #16 45-45, warpins: 2 ---
	--- END OF BLOCK #16 ---



end
wordfilter.check = function (text)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot0 = if text then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-4, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if text == "" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 5-6, warpins: 2 ---
	return true

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 7-12, warpins: 1 ---
	text = utf8strs(text)

	local function check(group, i, plies, cnt)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot4 = if group[1] then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-4, warpins: 1 ---
		cnt = plies

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 5-8, warpins: 2 ---
		--- END OF BLOCK #2 ---

		if #text < i then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 9-9, warpins: 1 ---
		return cnt

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 10-14, warpins: 2 ---
		local subGroup = group[text[i]]

		--- END OF BLOCK #4 ---

		slot4 = if not subGroup then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 15-15, warpins: 1 ---
		return cnt
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 16-21, warpins: 2 ---
		return check(subGroup, i + 1, plies + 1, cnt)
		--- END OF BLOCK #6 ---



	end

	local i = 1

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 13-13, warpins: 3 ---
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 14-22, warpins: 1 ---
	--- END OF BLOCK #5 ---

	if 0 < check(configs, i, 0, 0)

	 then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 23-24, warpins: 1 ---
	return 

	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 25-28, warpins: 2 ---
	i = i + 1

	--- END OF BLOCK #7 ---

	if #text < i then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #8 29-29, warpins: 1 ---
	--- END OF BLOCK #8 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #9 30-30, warpins: 0 ---
	--- END OF BLOCK #9 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #10 31-33, warpins: 1 ---
	return true
	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 34-34, warpins: 2 ---
	--- END OF BLOCK #11 ---



end

return wordfilter
--- END OF BLOCK #0 ---



