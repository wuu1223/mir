--- BLOCK #0 1-7, warpins: 1 ---
local security = {}
security.setLoginBit = function (self, msg, buf, buflen)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if not msg then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-5, warpins: 1 ---
	self.loginBit = nil
	--- END OF BLOCK #1 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #3


	--- BLOCK #2 6-12, warpins: 1 ---
	self.loginBit = net.strSplitWithLen(buf, 1, 4)

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 13-13, warpins: 2 ---
	return 
	--- END OF BLOCK #3 ---



end
security.setEquipBit = function (self, bit)
	--- BLOCK #0 1-2, warpins: 1 ---
	self.equipBit = bit

	return 
	--- END OF BLOCK #0 ---



end

return security
--- END OF BLOCK #0 ---



