--- BLOCK #0 1-33, warpins: 1 ---
local chatPic = class("chatPic", function ()
	--- BLOCK #0 1-3, warpins: 1 ---
	return display.newNode()
	--- END OF BLOCK #0 ---



end)

table.merge(chatPic, {
	w,
	h,
	loading,
	err,
	bg
})

chatPic.ctor = function (self, h, labelM, picData, user, channel, noTouch)
	--- BLOCK #0 1-31, warpins: 1 ---
	local h = labelM.wordSize.height*2 - 2
	local w = h*1.5
	self.h = h
	self.w = w
	local bg = nil
	local filename = pic.filename(user, picData.msgID)
	local diskpath = cache.getPicPathFull() .. filename .. ".jpg"

	--- END OF BLOCK #0 ---

	slot12 = if not cc.FileUtils:getInstance():isFileExist(diskpath)

	 then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 32-34, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if picData.state == "loadOk" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 35-40, warpins: 2 ---
	bg = display.newSprite(diskpath)
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #3 41-45, warpins: 1 ---
	bg = res.get2("pic/common/chat_pic.png")

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 46-70, warpins: 2 ---
	bg.anchor(bg, 0, 0):add2(self)
	bg.scaleX(bg, w/bg.getw(bg))
	bg.scaleY(bg, h/bg.geth(bg))
	--- END OF BLOCK #4 ---

	slot6 = if not noTouch then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 71-74, warpins: 1 ---
	bg.enableClick(bg, function ()
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if not picData.state then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 5-14, warpins: 1 ---
		pic.download(user, picData.msgID, picData.url, channel)

		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #2 15-18, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if picData.state == "loadOk" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 19-46, warpins: 1 ---
		local filename = pic.filename(user, picData.msgID)
		local diskpath = cache.getPicPathFull() .. filename .. ".jpg"

		main_scene.ui:hidePanel("screenshotLook")
		main_scene.ui:showPanel("screenshotLook", {
			user = user,
			diskpath = diskpath
		})

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 47-47, warpins: 3 ---
		return 
		--- END OF BLOCK #4 ---



	end)
	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 75-171, warpins: 2 ---
	display.newScale9Sprite(res.getframe2("pic/scale/scale2.png"), 0, 0, cc.size(w, h)):anchor(0, 0):add2(self)

	local fontSize = math.min(labelM.fontSize, 18)
	local title = an.newLabel("[½ØÆÁ]", fontSize, 1, {
		color = cc.c3b(0, 255, 255)
	}):pos(w + 2, h/2):add2(self)
	local pos = an.newLabel(picData.size .. "KB", fontSize, 1, {
		color = cc.c3b(0, 255, 255)
	}):pos(w + 2, 0):add2(self)
	self.bg = bg

	self.size(self, w + math.max(title.getw(title), pos.getw(pos)), h)
	self.setState(self, picData.state)

	return 
	--- END OF BLOCK #6 ---



end
chatPic.setState = function (self, state, path)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	if state == "loading" then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-6, warpins: 1 ---
	self.showLoading(self)
	--- END OF BLOCK #1 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #7


	--- BLOCK #2 7-8, warpins: 1 ---
	--- END OF BLOCK #2 ---

	if state == "loadOk" then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #3 9-13, warpins: 1 ---
	self.hideLoading(self)
	--- END OF BLOCK #3 ---

	slot2 = if path then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #4 14-39, warpins: 1 ---
	self.bg:setTex(path)
	self.bg:scaleX(self.w/self.bg:getw())
	self.bg:scaleY(self.h/self.bg:geth())
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #7


	--- BLOCK #5 40-41, warpins: 1 ---
	--- END OF BLOCK #5 ---

	if state == "loadErr" then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 42-44, warpins: 1 ---
	self.showErr(self)

	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 45-45, warpins: 5 ---
	return 
	--- END OF BLOCK #7 ---



end
chatPic.showLoading = function (self)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if not self.loading then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-63, warpins: 1 ---
	local loadingAni = res.getani2("pic/effect/loading/%d.png", 1, 12, 0.06)
	self.loading = display.newSprite(loadingAni.getFrames(loadingAni)[1]:getSpriteFrame()):scale(self.h/2/loadingAni.getFrames(loadingAni)[1]:getSpriteFrame():getRect().height):pos(self.w/2, self.h/2):add2(self):run(cc.RepeatForever:create(cc.Animate:create(loadingAni)))

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 64-67, warpins: 2 ---
	self.hideErr(self)

	return 
	--- END OF BLOCK #2 ---



end
chatPic.hideLoading = function (self)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if self.loading then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-9, warpins: 1 ---
	self.loading:removeSelf()

	self.loading = nil

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 10-10, warpins: 2 ---
	return 
	--- END OF BLOCK #2 ---



end
chatPic.showErr = function (self)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if not self.err then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-33, warpins: 1 ---
	local errTex = res.gettex2("pic/voice/err.png")
	self.err = res.get2("pic/voice/err.png"):scale(self.h/2/errTex.getContentSize(errTex).height):pos(self.w/2, self.h/2):add2(self)

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 34-37, warpins: 2 ---
	self.hideLoading(self)

	return 
	--- END OF BLOCK #2 ---



end
chatPic.hideErr = function (self)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if self.err then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-9, warpins: 1 ---
	self.err:removeSelf()

	self.err = nil

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 10-10, warpins: 2 ---
	return 
	--- END OF BLOCK #2 ---



end

return chatPic
--- END OF BLOCK #0 ---



