--- BLOCK #0 1-19, warpins: 1 ---
local tip = class("centerTopTip", function ()
	--- BLOCK #0 1-3, warpins: 1 ---
	return display.newNode()
	--- END OF BLOCK #0 ---



end)

table.merge(tip, {
	configs,
	curNode
})

tip.ctor = function (self)
	--- BLOCK #0 1-19, warpins: 1 ---
	self.configs = {
		resumePos = {
			"是不是卡位了？",
			"恢复原位",
			def.cmds.custom.卡位恢复
		},
		relive = {
			"是否立即复活？",
			"回城复活",
			def.cmds.custom.回城复活
		}
	}
	self.curNode = nil

	return 
	--- END OF BLOCK #0 ---



end
tip.show = function (self, type)
	--- BLOCK #0 1-4, warpins: 1 ---
	local config = self.configs[type]

	--- END OF BLOCK #0 ---

	slot2 = if not config then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 5-5, warpins: 1 ---
	return 

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 6-8, warpins: 1 ---
	--- END OF BLOCK #2 ---

	slot3 = if self.curNode then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 9-14, warpins: 1 ---
	self.curNode:removeSelf()

	self.curNode = nil
	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 15-145, warpins: 2 ---
	local reliveBtn = an.newBtn(res.gettex2("pic/common/relive0.png"), function ()
		--- BLOCK #0 1-23, warpins: 1 ---
		sound.playSound("103")
		net.send({
			CM_SAY
		}, {
			config[3]
		})
		self.curNode:removeSelf()

		self.curNode = nil

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/relive1.png")
	}):anchor(0, 0)
	self.curNode = display.newNode():size(reliveBtn.getw(reliveBtn), reliveBtn.geth(reliveBtn)):anchor(0.5, 0.5):opacity(0):add2(self)
	local ntime = 180
	local timeLabel = nil
	timeLabel = an.newLabel("180秒后与服务器断开连接", 20, 1, {
		color = cc.c3b(0, 255, 0)
	}):anchor(0.5, 0.5):pos(self.curNode:getw()*0.5, -10):opacity(0):add2(self.curNode):run(cc.RepeatForever:create(transition.sequence({
		cc.DelayTime:create(5),
		cc.CallFunc:create(function ()
			--- BLOCK #0 1-7, warpins: 1 ---
			ntime = ntime - 5

			--- END OF BLOCK #0 ---

			if ntime <= 0 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 8-16, warpins: 1 ---
			self.curNode:removeSelf()

			self.curNode = nil

			--- END OF BLOCK #1 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #3


			--- BLOCK #2 17-23, warpins: 1 ---
			timeLabel:setString(ntime .. "秒后与服务器断开连接")

			--- END OF BLOCK #2 ---

			FLOW; TARGET BLOCK #3


			--- BLOCK #3 24-24, warpins: 2 ---
			return 
			--- END OF BLOCK #3 ---



		end)
	})))

	self.curNode:pos(display.cx, display.height - 120)
	self.curNode:moveTo(0.3, display.cx, display.height - 80)

	return 
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 146-146, warpins: 2 ---
	--- END OF BLOCK #5 ---



end

return tip
--- END OF BLOCK #0 ---



