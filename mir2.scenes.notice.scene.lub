--- BLOCK #0 1-32, warpins: 1 ---
local common = import("..main.common.common")
local scene = class("notice", function ()
	--- BLOCK #0 1-4, warpins: 1 ---
	return display.newScene("notice")
	--- END OF BLOCK #0 ---



end)

table.merge(scene, {
	submitting
})

scene.ctor = function (self)
	--- BLOCK #0 1-4, warpins: 1 ---
	--- END OF BLOCK #0 ---

	if device.platform == "android" then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 5-14, warpins: 1 ---
	self.setKeypadEnabled(self, true)
	self.addNodeEventListener(self, cc.KEYPAD_EVENT, function (event)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if event.key == "back" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-9, warpins: 1 ---
		an.newMsgbox("是否退出游戏?", function (idx)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if idx == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-6, warpins: 1 ---
			os.exit(1)

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 7-7, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 10-10, warpins: 2 ---
		return 
		--- END OF BLOCK #2 ---



	end)
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 15-19, warpins: 2 ---
	net.add(self)

	return 
	--- END OF BLOCK #2 ---



end
scene.showNotice = function (self, text)
	--- BLOCK #0 1-19, warpins: 1 ---
	res.get2("pic/notice/bg.png"):center():addto(self)

	local newText = {}
	local finded = false

	--- END OF BLOCK #0 ---

	for i, v in ipairs(utf8strs(text))

	LOOP BLOCK #1
	GO OUT TO BLOCK #8


	--- BLOCK #1 20-21, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot3 = if not finded then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #2 22-27, warpins: 1 ---
	--- END OF BLOCK #2 ---

	if string.byte(v)
	 ~= 32 then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #3 28-33, warpins: 1 ---
	--- END OF BLOCK #3 ---

	if string.byte(v)

	 ~= 27 then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 34-34, warpins: 1 ---
	finded = true
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 35-36, warpins: 4 ---
	--- END OF BLOCK #5 ---

	slot3 = if finded then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 37-39, warpins: 1 ---
	newText[#newText + 1] = v
	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 40-41, warpins: 3 ---
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #8 42-92, warpins: 1 ---
	text = table.concat(newText)
	text = string.gsub(text, "\\", "")
	local scroll = an.newScroll(0, 0, 250, 270, {
		labelM = {
			15,
			1
		}
	}):anchor(0.5, 0.5):pos(display.cx, display.cy + 20):addTo(self)
	local strs = string.split(text, string.char(27))

	--- END OF BLOCK #8 ---

	for i, v in ipairs(strs)


	LOOP BLOCK #9
	GO OUT TO BLOCK #15


	--- BLOCK #9 93-94, warpins: 1 ---
	--- END OF BLOCK #9 ---

	if v ~= "" then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #10 95-96, warpins: 1 ---
	--- END OF BLOCK #10 ---

	if i ~= 2 then
	JUMP TO BLOCK #11
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #11 97-105, warpins: 1 ---
	slot12 = scroll.labelM
	slot11 = scroll.labelM.addLabel

	--- END OF BLOCK #11 ---

	slot13 = if not string.trim(v)

	 then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #13
	end


	--- BLOCK #12 106-106, warpins: 1 ---
	slot13 = ""

	--- END OF BLOCK #12 ---

	FLOW; TARGET BLOCK #13


	--- BLOCK #13 107-111, warpins: 2 ---
	slot11(slot12, slot13)
	scroll.labelM:nextLine()
	--- END OF BLOCK #13 ---

	FLOW; TARGET BLOCK #14


	--- BLOCK #14 112-113, warpins: 4 ---
	--- END OF BLOCK #14 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #15 114-146, warpins: 1 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if self.submitting then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 5-5, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 6-26, warpins: 2 ---
		self.submitting = true

		sound.playSound("104")
		net.remove(self)
		game.gotoscene("main", nil, "fade", 0.5, display.COLOR_BLACK)

		return 
		--- END OF BLOCK #2 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/common/confirm.png")
	}):pos(display.cx, display.cy - 140):addto(self)

	return 
	--- END OF BLOCK #15 ---



end
scene.onEnter = function (self)
	--- BLOCK #0 1-4, warpins: 1 ---
	res.purgeCachedData()

	return 
	--- END OF BLOCK #0 ---



end
scene.onExit = function (self)
	--- BLOCK #0 1-5, warpins: 1 ---
	net.remove(self)

	return 
	--- END OF BLOCK #0 ---



end
scene.reconectFuc = function (self, info)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if self.reconnectBox then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-9, warpins: 1 ---
	self.reconnectBox:removeSelf()

	self.reconnectBox = nil
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 10-12, warpins: 2 ---
	--- END OF BLOCK #2 ---

	slot2 = if not self.reconnectBox then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 13-21, warpins: 1 ---
	self.reconnectBox = an.newMsgbox(info .. "\n确定重连?", function (idx)
		--- BLOCK #0 1-2, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if idx == 0 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 3-7, warpins: 1 ---
		common.gotoLogin({
			logout = true
		})

		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #2 8-9, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if idx == 1 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 10-21, warpins: 1 ---
		self.reconnect = true
		g_data.login.reconnectState = true

		scheduler.performWithDelayGlobal(function ()
			--- BLOCK #0 1-14, warpins: 1 ---
			net.connect(g_data.login.recIP, g_data.login.recPort, self, g_data.login.recSession)

			return 
			--- END OF BLOCK #0 ---



		end, 0)

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 22-25, warpins: 3 ---
		self.reconnectBox = nil

		return 
		--- END OF BLOCK #4 ---



	end, {
		center = true,
		hasCancel = true
	})

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 22-23, warpins: 2 ---
	return 
	--- END OF BLOCK #4 ---



end
scene.onLoseConnect = function (self)
	--- BLOCK #0 1-6, warpins: 1 ---
	print("scene:onLoseConnect")
	--- END OF BLOCK #0 ---

	slot1 = if self.reconnectBox then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 7-12, warpins: 1 ---
	self.reconnectBox:removeSelf()

	self.reconnectBox = nil
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 13-18, warpins: 2 ---
	self.reconnectBox = self.reconectFuc(self, "网络连接已断开!")

	return 
	--- END OF BLOCK #2 ---



end
scene.onNetworkStateChange = function (self, currentState)
	--- BLOCK #0 1-10, warpins: 1 ---
	local connectable = network.isHostNameReachable("www.baidu.com")

	--- END OF BLOCK #0 ---

	slot3 = if not tolua.isnull(self.reconnectBox)
	 then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #1 11-12, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot2 = if connectable then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 13-19, warpins: 1 ---
	self.reconnectBox:removeSelf()

	self.reconnectBox = nil

	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #3 20-20, warpins: 1 ---
	return 

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 21-22, warpins: 3 ---
	--- END OF BLOCK #4 ---

	slot2 = if connectable then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #5 23-29, warpins: 1 ---
	slot4 = self
	slot3 = self.reconectFuc
	slot5 = "切换到 "
	--- END OF BLOCK #5 ---

	if currentState == cc.kCCNetworkStatusReachableViaWiFi then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 30-31, warpins: 1 ---
	slot6 = "WIFI网络"
	--- END OF BLOCK #6 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #7 32-32, warpins: 1 ---
	slot6 = "蜂窝网络"

	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 33-34, warpins: 2 ---
	slot3(slot4, slot5 .. slot6)

	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 35-35, warpins: 2 ---
	return 
	--- END OF BLOCK #9 ---



end
scene.processMsg = function (self, msg, buf, bufLen)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if not msg then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-3, warpins: 1 ---
	return 

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 4-8, warpins: 1 ---
	local function tip(str, func)
		--- BLOCK #0 1-6, warpins: 1 ---
		an.newMsgbox(str, func)

		return 
		--- END OF BLOCK #0 ---



	end

	local ident = msg.ident

	--- END OF BLOCK #2 ---

	if SM_SENDNOTICE == ident then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 9-16, warpins: 1 ---
	self.showNotice(self, net.str(buf))
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #27


	--- BLOCK #4 17-19, warpins: 1 ---
	--- END OF BLOCK #4 ---

	if SM_LOGIN == ident then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 20-30, warpins: 1 ---
	net.send({
		CM_RECONNECT
	}, {
		g_data.reconnctID
	})

	--- END OF BLOCK #5 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #27


	--- BLOCK #6 31-33, warpins: 1 ---
	--- END OF BLOCK #6 ---

	if SM_LOGIN_AUTH == ident then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #7 34-36, warpins: 1 ---
	--- END OF BLOCK #7 ---

	if msg.param == 2 then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #8 37-37, warpins: 1 ---
	--- END OF BLOCK #8 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #27


	--- BLOCK #9 38-40, warpins: 1 ---
	--- END OF BLOCK #9 ---

	if msg.param == 1 then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #27
	end


	--- BLOCK #10 41-51, warpins: 1 ---
	local ret1 = getRecord("TLoginIdResult")
	local ret2 = getRecord("TLoginIdResult2")

	--- END OF BLOCK #10 ---

	if ret1.size(ret1)
	 < bufLen then
	JUMP TO BLOCK #11
	else
	JUMP TO BLOCK #12
	end


	--- BLOCK #11 52-67, warpins: 1 ---
	net.record(ret2, buf, bufLen)

	g_data.reconnctID = ret2.get(ret2, "reconnectID")
	g_data.login.loginRet2 = ret2

	--- END OF BLOCK #11 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #27


	--- BLOCK #12 68-77, warpins: 1 ---
	net.record(ret1, buf, bufLen)

	g_data.login.loginRet1 = ret1

	--- END OF BLOCK #12 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #27


	--- BLOCK #13 78-78, warpins: 0 ---
	--- END OF BLOCK #13 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #27


	--- BLOCK #14 79-81, warpins: 1 ---
	--- END OF BLOCK #14 ---

	if SM_CLIENT_CONF == ident then
	JUMP TO BLOCK #15
	else
	JUMP TO BLOCK #16
	end


	--- BLOCK #15 82-88, warpins: 1 ---
	g_data.chat:setShieldMask(msg.recog)

	--- END OF BLOCK #15 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #27


	--- BLOCK #16 89-91, warpins: 1 ---
	--- END OF BLOCK #16 ---

	if SM_CHR_LIST == ident then
	JUMP TO BLOCK #17
	else
	JUMP TO BLOCK #18
	end


	--- BLOCK #17 92-99, warpins: 1 ---
	g_data.login.roleInfo = {
		msg = msg,
		buf = buf,
		bufLen = bufLen
	}

	--- END OF BLOCK #17 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #27


	--- BLOCK #18 100-102, warpins: 1 ---
	--- END OF BLOCK #18 ---

	if SM_OUTOFCONNECTION_KICKOUT == ident then
	JUMP TO BLOCK #19
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #19 103-107, warpins: 1 ---
	self.reconectFuc(self, "已经被其他用户踢下线")

	--- END OF BLOCK #19 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #27


	--- BLOCK #20 108-110, warpins: 1 ---
	--- END OF BLOCK #20 ---

	if SM_LOGIN_ALREADY_ONLINE == ident then
	JUMP TO BLOCK #21
	else
	JUMP TO BLOCK #24
	end


	--- BLOCK #21 111-113, warpins: 1 ---
	--- END OF BLOCK #21 ---

	if msg.recog == 1 then
	JUMP TO BLOCK #22
	else
	JUMP TO BLOCK #23
	end


	--- BLOCK #22 114-121, warpins: 1 ---
	self.kickoutBox = an.newMsgbox("此账号目前在线，是否强行登录?", function (idx)
		--- BLOCK #0 1-2, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if idx == 1 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 3-12, warpins: 1 ---
		game.gotoscene("reconnect", nil, "fade", 0.5, display.COLOR_BLACK)
		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #3


		--- BLOCK #2 13-16, warpins: 1 ---
		common.gotoLogin({
			logout = true
		})

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 17-26, warpins: 2 ---
		self.kickoutBox = nil
		slot1 = net.send
		slot2 = {
			CM_LOGIN_ALREADY_ONLINE
		}
		--- END OF BLOCK #3 ---

		if idx == 1 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 27-28, warpins: 1 ---
		slot3 = 1
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #5 29-29, warpins: 1 ---
		slot3 = 0
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 30-32, warpins: 2 ---
		slot2.param = slot3

		slot1(slot2)

		return 
		--- END OF BLOCK #6 ---



	end, {
		center = true,
		hasCancel = true
	})

	--- END OF BLOCK #22 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #27


	--- BLOCK #23 122-131, warpins: 1 ---
	game.gotoscene("reconnect", nil, "fade", 0.5, display.COLOR_BLACK)
	--- END OF BLOCK #23 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #27


	--- BLOCK #24 132-134, warpins: 1 ---
	--- END OF BLOCK #24 ---

	if SM_SELCHR_ERR == ident then
	JUMP TO BLOCK #25
	else
	JUMP TO BLOCK #26
	end


	--- BLOCK #25 135-140, warpins: 1 ---
	scheduler.performWithDelayGlobal(function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		an.newMsgbox("服务器维护中，请稍后再试", function ()
			--- BLOCK #0 1-5, warpins: 1 ---
			common.gotoLogin({
				logout = true
			})

			return 
			--- END OF BLOCK #0 ---



		end, {
			center = true
		})

		return 
		--- END OF BLOCK #0 ---



	end, 1)

	--- END OF BLOCK #25 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #27


	--- BLOCK #26 141-143, warpins: 1 ---
	return false
	--- END OF BLOCK #26 ---

	FLOW; TARGET BLOCK #27


	--- BLOCK #27 144-146, warpins: 14 ---
	return true
	--- END OF BLOCK #27 ---

	FLOW; TARGET BLOCK #28


	--- BLOCK #28 147-147, warpins: 2 ---
	--- END OF BLOCK #28 ---



end

return scene
--- END OF BLOCK #0 ---



