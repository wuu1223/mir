--- BLOCK #0 1-206, warpins: 1 ---
local ByteArray = require("framework.cc.utils.ByteArray")
local itemInfo = import(".itemInfo")
local chatPic = import(".chatPic")
local chatPos = import(".chatPos")
local chatItem = import(".chatItem")
local common = {}
common.buf = {
	msg = newList()
}
common.getPlayerName = function ()
	--- BLOCK #0 1-5, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot0 = if main_scene.ground.player then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 6-14, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot0 = if not main_scene.ground.player.info:getName()
	 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #2 15-21, warpins: 2 ---
	--- END OF BLOCK #2 ---

	slot0 = if not g_data.select:getCurName()

	 then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 22-22, warpins: 1 ---
	slot0 = ""

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 23-23, warpins: 3 ---
	return slot0
	--- END OF BLOCK #4 ---



end
common.goldChanged = function (gold)
	--- BLOCK #0 1-5, warpins: 1 ---
	--- END OF BLOCK #0 ---

	if g_data.player.gold < gold then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 6-16, warpins: 1 ---
	main_scene.ui:tip(gold - g_data.player.gold .. " 金币增加.")
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 17-36, warpins: 2 ---
	g_data.player:setGold(gold)
	main_scene.ui.console:call("infoBar", "uptGold")
	--- END OF BLOCK #2 ---

	slot1 = if main_scene.ui.panels.bag then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 37-43, warpins: 1 ---
	main_scene.ui.panels.bag:uptGold()
	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 44-49, warpins: 2 ---
	sound.playSound(sound.s_money)

	return 
	--- END OF BLOCK #4 ---



end
common.ingotChanged = function (gold)
	--- BLOCK #0 1-15, warpins: 1 ---
	g_data.player:setIngot(gold)
	main_scene.ui.console:call("infoBar", "uptYb")

	return 
	--- END OF BLOCK #0 ---



end
common.encodeEmoji = function (str)
	--- BLOCK #0 1-9, warpins: 1 ---
	local ret = {}
	str = utf8strs(str)

	--- END OF BLOCK #0 ---

	for i, v in ipairs(str)

	LOOP BLOCK #1
	GO OUT TO BLOCK #5


	--- BLOCK #1 10-16, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if 4 <= string.len(v)

	 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 17-44, warpins: 1 ---
	local t = crypto.encodeBase64(v)
	t = string.sub(t, 1, string.len(t) - 1)
	t = string.gsub(t, "/", "!")
	ret[i] = "{@ej" .. t .. "}"
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #3 45-45, warpins: 1 ---
	ret[i] = v

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 46-47, warpins: 3 ---
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #5 48-51, warpins: 1 ---
	return table.concat(ret)
	--- END OF BLOCK #5 ---



end
common.encodeRich = function (params)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	if params.type == "voice" then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-20, warpins: 1 ---
	local str = string.format("{@vi%s|%d|%s}%s", params.url, params.dur, params.expand, params.text)
	str = string.gsub(str, "/", "!")

	return str

	--- END OF BLOCK #1 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #2 21-23, warpins: 1 ---
	--- END OF BLOCK #2 ---

	if params.type == "pic" then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 24-39, warpins: 1 ---
	local str = string.format("{@pi%s|%d|%s}", params.url, params.size, params.msgID)
	str = string.gsub(str, "/", "!")

	return str
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #4 40-42, warpins: 1 ---
	--- END OF BLOCK #4 ---

	if params.type == "pos" then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 43-51, warpins: 1 ---
	return string.format("{@ps%s|%s|%s|%s}", params.mapID, params.mapTitle, params.x, params.y)
	--- END OF BLOCK #5 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #6 52-54, warpins: 1 ---
	--- END OF BLOCK #6 ---

	if params.type == "item" then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 55-63, warpins: 1 ---
	return string.format("{@it%s|%s|%s|%s}", params.makeIndex, params.lookID, params.name, params.weight)
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #8 64-66, warpins: 1 ---
	--- END OF BLOCK #8 ---

	if params.type == "emoji" then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #9 67-71, warpins: 1 ---
	return string.format("{@em%03d}", params.id)
	--- END OF BLOCK #9 ---

	FLOW; TARGET BLOCK #10


	--- BLOCK #10 72-72, warpins: 6 ---
	return 
	--- END OF BLOCK #10 ---



end
common.decodeMsg = function (str, msg)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if msg then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #1 3-6, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if msg.ident == SM_WHISPER then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #2 7-13, warpins: 1 ---
	local pos = string.find(str, "=>")
	--- END OF BLOCK #2 ---

	slot2 = if pos then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #3 14-17, warpins: 1 ---
	local addstr = ""
	--- END OF BLOCK #3 ---

	if msg.series == 0 then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 18-24, warpins: 1 ---
	addstr = string.format("[%d级]", msg.tag)
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #6


	--- BLOCK #5 25-31, warpins: 1 ---
	addstr = string.format("[%d级%d+]", msg.tag, msg.series)
	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 32-45, warpins: 2 ---
	str = string.sub(str, 1, pos - 1) .. addstr .. string.sub(str, pos, #str)
	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 46-46, warpins: 4 ---
	local ret = {}
	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 47-47, warpins: 3 ---
	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 48-59, warpins: 1 ---
	local startMark = string.find(str, "{")
	local endMark = string.find(str, "}")
	--- END OF BLOCK #9 ---

	slot3 = if startMark then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #21
	end


	--- BLOCK #10 60-61, warpins: 1 ---
	--- END OF BLOCK #10 ---

	slot4 = if endMark then
	JUMP TO BLOCK #11
	else
	JUMP TO BLOCK #21
	end


	--- BLOCK #11 62-63, warpins: 1 ---
	--- END OF BLOCK #11 ---

	if startMark < endMark then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #21
	end


	--- BLOCK #12 64-70, warpins: 1 ---
	local frontStr = string.sub(str, 1, endMark)
	local lastStartMark = startMark
	--- END OF BLOCK #12 ---

	FLOW; TARGET BLOCK #13


	--- BLOCK #13 71-71, warpins: 3 ---
	--- END OF BLOCK #13 ---

	FLOW; TARGET BLOCK #14


	--- BLOCK #14 72-80, warpins: 1 ---
	lastStartMark = string.find(frontStr, "{", lastStartMark + 1)
	--- END OF BLOCK #14 ---

	slot6 = if lastStartMark then
	JUMP TO BLOCK #15
	else
	JUMP TO BLOCK #18
	end


	--- BLOCK #15 81-82, warpins: 1 ---
	startMark = lastStartMark
	--- END OF BLOCK #15 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #13


	--- BLOCK #16 83-83, warpins: 0 ---
	--- END OF BLOCK #16 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #18


	--- BLOCK #17 84-84, warpins: 0 ---
	--- END OF BLOCK #17 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #13


	--- BLOCK #18 85-87, warpins: 2 ---
	--- END OF BLOCK #18 ---

	if 1 < startMark then
	JUMP TO BLOCK #19
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #19 88-96, warpins: 1 ---
	ret[#ret + 1] = string.sub(frontStr, 1, startMark - 1)
	--- END OF BLOCK #19 ---

	FLOW; TARGET BLOCK #20


	--- BLOCK #20 97-115, warpins: 2 ---
	ret[#ret + 1] = {
		string.sub(frontStr, startMark, endMark)
	}
	str = string.sub(str, endMark + 1, #str)
	--- END OF BLOCK #20 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #21 116-119, warpins: 3 ---
	ret[#ret + 1] = str

	--- END OF BLOCK #21 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #23


	--- BLOCK #22 120-120, warpins: 0 ---
	--- END OF BLOCK #22 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #23 121-125, warpins: 1 ---
	local function parseRichMsg(str)
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if #str < 6 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 5-5, warpins: 1 ---
		return str

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 6-20, warpins: 2 ---
		local msgType = string.sub(str, 2, 4)
		local msgData = string.sub(str, 5, #str - 1)
		--- END OF BLOCK #2 ---

		if msgType == "@ej" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #3 21-23, warpins: 1 ---
		--- END OF BLOCK #3 ---

		if #msgData == 8 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 24-38, warpins: 1 ---
		msgData = string.gsub(msgData, "!", "/")

		return {
			type = "emojiConvert",
			emoji = crypto.decodeBase64(msgData)
		}

		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #34


		--- BLOCK #5 39-40, warpins: 2 ---
		--- END OF BLOCK #5 ---

		if msgType == "@em" then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #6 41-43, warpins: 1 ---
		--- END OF BLOCK #6 ---

		if #msgData == 3 then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #7 44-49, warpins: 1 ---
		slot3 = {
			type = "emoji"
		}

		--- END OF BLOCK #7 ---

		slot4 = if not tonumber(msgData)

		 then
		JUMP TO BLOCK #8
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #8 50-50, warpins: 1 ---
		slot4 = 0
		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 51-53, warpins: 2 ---
		slot3.emoji = slot4

		return slot3

		--- END OF BLOCK #9 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #34


		--- BLOCK #10 54-55, warpins: 2 ---
		--- END OF BLOCK #10 ---

		if msgType == "@vi" then
		JUMP TO BLOCK #11
		else
		JUMP TO BLOCK #13
		end


		--- BLOCK #11 56-71, warpins: 1 ---
		msgData = string.gsub(msgData, "!", "/")
		local array = string.split(msgData, "|")

		--- END OF BLOCK #11 ---

		if 3 <= #array then
		JUMP TO BLOCK #12
		else
		JUMP TO BLOCK #34
		end


		--- BLOCK #12 72-80, warpins: 1 ---
		return {
			type = "voice",
			url = array[1],
			dur = array[2],
			msgID = array[3]
		}

		--- END OF BLOCK #12 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #34


		--- BLOCK #13 81-82, warpins: 1 ---
		--- END OF BLOCK #13 ---

		if msgType == "@pi" then
		JUMP TO BLOCK #14
		else
		JUMP TO BLOCK #16
		end


		--- BLOCK #14 83-98, warpins: 1 ---
		msgData = string.gsub(msgData, "!", "/")
		local array = string.split(msgData, "|")

		--- END OF BLOCK #14 ---

		if 3 <= #array then
		JUMP TO BLOCK #15
		else
		JUMP TO BLOCK #34
		end


		--- BLOCK #15 99-107, warpins: 1 ---
		return {
			type = "pic",
			url = array[1],
			size = array[2],
			msgID = array[3]
		}

		--- END OF BLOCK #15 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #34


		--- BLOCK #16 108-109, warpins: 1 ---
		--- END OF BLOCK #16 ---

		if msgType == "@ps" then
		JUMP TO BLOCK #17
		else
		JUMP TO BLOCK #23
		end


		--- BLOCK #17 110-118, warpins: 1 ---
		local array = string.split(msgData, "|")
		--- END OF BLOCK #17 ---

		if 4 <= #array then
		JUMP TO BLOCK #18
		else
		JUMP TO BLOCK #34
		end


		--- BLOCK #18 119-128, warpins: 1 ---
		slot4 = {
			type = "pos",
			mapID = array[1],
			mapTitle = array[2]
		}

		--- END OF BLOCK #18 ---

		slot5 = if not tonumber(array[3])

		 then
		JUMP TO BLOCK #19
		else
		JUMP TO BLOCK #20
		end


		--- BLOCK #19 129-129, warpins: 1 ---
		slot5 = 0
		--- END OF BLOCK #19 ---

		FLOW; TARGET BLOCK #20


		--- BLOCK #20 130-135, warpins: 2 ---
		slot4.x = slot5

		--- END OF BLOCK #20 ---

		slot5 = if not tonumber(array[4])

		 then
		JUMP TO BLOCK #21
		else
		JUMP TO BLOCK #22
		end


		--- BLOCK #21 136-136, warpins: 1 ---
		slot5 = 0
		--- END OF BLOCK #21 ---

		FLOW; TARGET BLOCK #22


		--- BLOCK #22 137-139, warpins: 2 ---
		slot4.y = slot5

		return slot4

		--- END OF BLOCK #22 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #34


		--- BLOCK #23 140-141, warpins: 1 ---
		--- END OF BLOCK #23 ---

		if msgType == "@it" then
		JUMP TO BLOCK #24
		else
		JUMP TO BLOCK #34
		end


		--- BLOCK #24 142-150, warpins: 1 ---
		local array = string.split(msgData, "|")
		--- END OF BLOCK #24 ---

		if 4 <= #array then
		JUMP TO BLOCK #25
		else
		JUMP TO BLOCK #34
		end


		--- BLOCK #25 151-156, warpins: 1 ---
		slot4 = {
			type = "item"
		}

		--- END OF BLOCK #25 ---

		slot5 = if not tonumber(array[1])

		 then
		JUMP TO BLOCK #26
		else
		JUMP TO BLOCK #27
		end


		--- BLOCK #26 157-157, warpins: 1 ---
		slot5 = 0
		--- END OF BLOCK #26 ---

		FLOW; TARGET BLOCK #27


		--- BLOCK #27 158-161, warpins: 2 ---
		slot4.makeIndex = slot5
		--- END OF BLOCK #27 ---

		slot5 = if not array[2] then
		JUMP TO BLOCK #28
		else
		JUMP TO BLOCK #29
		end


		--- BLOCK #28 162-162, warpins: 1 ---
		slot5 = ""
		--- END OF BLOCK #28 ---

		FLOW; TARGET BLOCK #29


		--- BLOCK #29 163-166, warpins: 2 ---
		slot4.lookID = slot5
		--- END OF BLOCK #29 ---

		slot5 = if not array[3] then
		JUMP TO BLOCK #30
		else
		JUMP TO BLOCK #31
		end


		--- BLOCK #30 167-167, warpins: 1 ---
		slot5 = ""
		--- END OF BLOCK #30 ---

		FLOW; TARGET BLOCK #31


		--- BLOCK #31 168-173, warpins: 2 ---
		slot4.name = slot5

		--- END OF BLOCK #31 ---

		slot5 = if not tonumber(array[4])

		 then
		JUMP TO BLOCK #32
		else
		JUMP TO BLOCK #33
		end


		--- BLOCK #32 174-174, warpins: 1 ---
		slot5 = 0
		--- END OF BLOCK #32 ---

		FLOW; TARGET BLOCK #33


		--- BLOCK #33 175-176, warpins: 2 ---
		slot4.weight = slot5

		return slot4
		--- END OF BLOCK #33 ---

		FLOW; TARGET BLOCK #34


		--- BLOCK #34 177-177, warpins: 11 ---
		return str
		--- END OF BLOCK #34 ---



	end

	--- END OF BLOCK #23 ---

	for i, v in ipairs(ret)

	LOOP BLOCK #24
	GO OUT TO BLOCK #27


	--- BLOCK #24 126-130, warpins: 1 ---
	--- END OF BLOCK #24 ---

	if type(v)

	 == "table" then
	JUMP TO BLOCK #25
	else
	JUMP TO BLOCK #26
	end


	--- BLOCK #25 131-134, warpins: 1 ---
	ret[i] = parseRichMsg(v[1])

	--- END OF BLOCK #25 ---

	FLOW; TARGET BLOCK #26


	--- BLOCK #26 135-136, warpins: 3 ---
	--- END OF BLOCK #26 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #23


	--- BLOCK #27 137-138, warpins: 1 ---
	return ret
	--- END OF BLOCK #27 ---



end
common.createChatLabel = function (msg, touch)
	--- BLOCK #0 1-5, warpins: 1 ---
	slot2 = an.newLabelM
	--- END OF BLOCK #0 ---

	slot3 = if not msg.strWidth then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 6-6, warpins: 1 ---
	slot3 = 150
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 7-9, warpins: 2 ---
	--- END OF BLOCK #2 ---

	slot4 = if not msg.fontSize then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 10-10, warpins: 1 ---
	slot4 = 14
	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 11-16, warpins: 2 ---
	local label = slot2(slot3, slot4, 1, {
		bufferChannel = 2
	})
	--- END OF BLOCK #4 ---

	slot3 = if not msg.user then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 17-19, warpins: 1 ---
	local user = common.getPlayerName()

	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 20-23, warpins: 2 ---
	--- END OF BLOCK #6 ---

	for i, v in ipairs(msg.data)

	LOOP BLOCK #7
	GO OUT TO BLOCK #31


	--- BLOCK #7 24-26, warpins: 1 ---
	--- END OF BLOCK #7 ---

	if v.type == "emoji" then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #8 27-37, warpins: 1 ---
	label.addEmoji(label, res.gettex2("pic/emoji/" .. v.emoji .. ".png"))
	--- END OF BLOCK #8 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #29


	--- BLOCK #9 38-40, warpins: 1 ---
	--- END OF BLOCK #9 ---

	if v.type == "emojiConvert" then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #10 41-45, warpins: 1 ---
	label.addEmojiForConvert(label, v.emoji)

	--- END OF BLOCK #10 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #29


	--- BLOCK #11 46-48, warpins: 1 ---
	--- END OF BLOCK #11 ---

	if v.type == "voice" then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #12 49-51, warpins: 1 ---
	--- END OF BLOCK #12 ---

	if msg.channel == "私聊" then
	JUMP TO BLOCK #13
	else
	JUMP TO BLOCK #16
	end


	--- BLOCK #13 52-54, warpins: 1 ---
	--- END OF BLOCK #13 ---

	slot9 = if msg.fromClient then
	JUMP TO BLOCK #14
	else
	JUMP TO BLOCK #15
	end


	--- BLOCK #14 55-56, warpins: 1 ---
	slot9 = "私聊self"
	--- END OF BLOCK #14 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #17


	--- BLOCK #15 57-58, warpins: 1 ---
	slot9 = "私聊"
	--- END OF BLOCK #15 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #17


	--- BLOCK #16 59-59, warpins: 1 ---
	local bgkey = msg.channel
	--- END OF BLOCK #16 ---

	FLOW; TARGET BLOCK #17


	--- BLOCK #17 60-68, warpins: 3 ---
	slot11 = label
	slot10 = label.addVoice
	slot12 = bgkey
	slot13 = v.dur
	slot14 = v.msgID
	slot15 = v.state
	slot16 = v.readed

	--- END OF BLOCK #17 ---

	slot17 = if touch then
	JUMP TO BLOCK #18
	else
	JUMP TO BLOCK #19
	end


	--- BLOCK #18 69-69, warpins: 1 ---
	function slot17()
		--- BLOCK #0 1-16, warpins: 1 ---
		voice.play(user, v.msgID, msg.channel, v.url, v.dur)

		v.readed = true

		return 
		--- END OF BLOCK #0 ---



	end

	--- END OF BLOCK #18 ---

	FLOW; TARGET BLOCK #19


	--- BLOCK #19 70-71, warpins: 2 ---
	slot10(slot11, slot12, slot13, slot14, slot15, slot16, slot17)
	--- END OF BLOCK #19 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #29


	--- BLOCK #20 72-74, warpins: 1 ---
	--- END OF BLOCK #20 ---

	if v.type == "pic" then
	JUMP TO BLOCK #21
	else
	JUMP TO BLOCK #22
	end


	--- BLOCK #21 75-89, warpins: 1 ---
	label.addNode(label, chatPic.new(2, label, v, user, msg.channel, not touch), 2, v.msgID)
	--- END OF BLOCK #21 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #29


	--- BLOCK #22 90-92, warpins: 1 ---
	--- END OF BLOCK #22 ---

	if v.type == "pos" then
	JUMP TO BLOCK #23
	else
	JUMP TO BLOCK #24
	end


	--- BLOCK #23 93-105, warpins: 1 ---
	label.addNode(label, chatPos.new(2, label, v, user, not touch), 2)
	--- END OF BLOCK #23 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #29


	--- BLOCK #24 106-108, warpins: 1 ---
	--- END OF BLOCK #24 ---

	if v.type == "item" then
	JUMP TO BLOCK #25
	else
	JUMP TO BLOCK #26
	end


	--- BLOCK #25 109-120, warpins: 1 ---
	label.addNode(label, chatItem.new(2, label, v, not touch), 2)
	--- END OF BLOCK #25 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #29


	--- BLOCK #26 121-125, warpins: 1 ---
	--- END OF BLOCK #26 ---

	if type(v)
	 == "table" then
	JUMP TO BLOCK #27
	else
	JUMP TO BLOCK #28
	end


	--- BLOCK #27 126-135, warpins: 1 ---
	label.addLabel(label, v.str, v.fontColor, v.bgColor, v.strokeColor, v.clickCallback, v.params)
	--- END OF BLOCK #27 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #29


	--- BLOCK #28 136-139, warpins: 1 ---
	label.addLabel(label, v)

	--- END OF BLOCK #28 ---

	FLOW; TARGET BLOCK #29


	--- BLOCK #29 140-140, warpins: 8 ---
	--- END OF BLOCK #29 ---

	FLOW; TARGET BLOCK #30


	--- BLOCK #30 141-142, warpins: 2 ---
	--- END OF BLOCK #30 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #6


	--- BLOCK #31 143-147, warpins: 1 ---
	local itemWidth = msg.strWidth
	--- END OF BLOCK #31 ---

	if #label.lines == 1 then
	JUMP TO BLOCK #32
	else
	JUMP TO BLOCK #37
	end


	--- BLOCK #32 148-156, warpins: 1 ---
	local l = label.lines[1]
	local max = 0

	--- END OF BLOCK #32 ---

	for k, v in ipairs(l.getChildren(l))


	LOOP BLOCK #33
	GO OUT TO BLOCK #36


	--- BLOCK #33 157-165, warpins: 1 ---
	local w = v.getPosition(v) + v.getw(v)
	--- END OF BLOCK #33 ---

	if max < w then
	JUMP TO BLOCK #34
	else
	JUMP TO BLOCK #35
	end


	--- BLOCK #34 166-166, warpins: 1 ---
	max = w
	--- END OF BLOCK #34 ---

	FLOW; TARGET BLOCK #35


	--- BLOCK #35 167-168, warpins: 3 ---
	--- END OF BLOCK #35 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #32


	--- BLOCK #36 169-176, warpins: 1 ---
	itemWidth = max

	label.setContentSize(label, itemWidth, label.geth(label))

	--- END OF BLOCK #36 ---

	FLOW; TARGET BLOCK #37


	--- BLOCK #37 177-178, warpins: 2 ---
	return label
	--- END OF BLOCK #37 ---



end
common.addMsg = function (text, color, bgColor, fromClient, user, netMsg, buf, bufLen)
	--- BLOCK #0 1-15, warpins: 1 ---
	common.buf.msg.pushBack({
		text,
		color,
		bgColor,
		fromClient,
		user,
		netMsg,
		buf,
		bufLen
	})

	return 
	--- END OF BLOCK #0 ---



end
common.updateAddMsg = function (text, color, bgColor, fromClient, user, netMsg, buf, bufLen)
	--- BLOCK #0 1-6, warpins: 1 ---
	local roleid = nil

	--- END OF BLOCK #0 ---

	if type(user)

	 == "number" then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 7-8, warpins: 1 ---
	roleid = user
	user = nil
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 9-15, warpins: 2 ---
	local data = common.decodeMsg(text, netMsg)

	--- END OF BLOCK #2 ---

	slot9 = if not data then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 16-16, warpins: 1 ---
	return 

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 17-27, warpins: 2 ---
	slot11 = g_data.chat
	slot10 = g_data.chat.addMsg
	slot12 = data
	slot13 = color
	slot14 = bgColor
	slot15 = fromClient
	slot16 = user
	--- END OF BLOCK #4 ---

	slot17 = if netMsg then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 28-28, warpins: 1 ---
	slot17 = netMsg.ident
	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 29-35, warpins: 2 ---
	local msg = slot10(slot11, slot12, slot13, slot14, slot15, slot16, slot17)

	--- END OF BLOCK #6 ---

	if common.getPlayerName()
	 == msg.user then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 36-48, warpins: 1 ---
	g_data.chat:setVoiceReaded(msg)
	g_data.chat:setPicLoaded(msg)
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #18


	--- BLOCK #8 49-55, warpins: 1 ---
	--- END OF BLOCK #8 ---

	slot11 = if g_data.setting.chat.autoLoadVoice.enable then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #13
	end


	--- BLOCK #9 56-59, warpins: 1 ---
	--- END OF BLOCK #9 ---

	for i, v in ipairs(data)

	LOOP BLOCK #10
	GO OUT TO BLOCK #13


	--- BLOCK #10 60-62, warpins: 1 ---
	--- END OF BLOCK #10 ---

	if v.type == "voice" then
	JUMP TO BLOCK #11
	else
	JUMP TO BLOCK #12
	end


	--- BLOCK #11 63-73, warpins: 1 ---
	voice.download(v.msgID, msg.channel, voice.filename(msg.user, v.msgID), v.url)
	--- END OF BLOCK #11 ---

	FLOW; TARGET BLOCK #12


	--- BLOCK #12 74-75, warpins: 3 ---
	--- END OF BLOCK #12 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #9


	--- BLOCK #13 76-83, warpins: 2 ---
	--- END OF BLOCK #13 ---

	slot11 = if g_data.setting.chat.autoPlayVoice[msg.channel] then
	JUMP TO BLOCK #14
	else
	JUMP TO BLOCK #18
	end


	--- BLOCK #14 84-87, warpins: 1 ---
	--- END OF BLOCK #14 ---

	for i, v in ipairs(data)

	LOOP BLOCK #15
	GO OUT TO BLOCK #18


	--- BLOCK #15 88-90, warpins: 1 ---
	--- END OF BLOCK #15 ---

	if v.type == "voice" then
	JUMP TO BLOCK #16
	else
	JUMP TO BLOCK #17
	end


	--- BLOCK #16 91-98, warpins: 1 ---
	voice.autoPlay(msg.user, v.msgID, msg.channel, v.url, v.dur)
	--- END OF BLOCK #16 ---

	FLOW; TARGET BLOCK #17


	--- BLOCK #17 99-100, warpins: 3 ---
	--- END OF BLOCK #17 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #14


	--- BLOCK #18 101-115, warpins: 3 ---
	main_scene.ui.console:call("chat", "addMsg", msg)
	--- END OF BLOCK #18 ---

	slot11 = if main_scene.ui.panels.chat then
	JUMP TO BLOCK #19
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #19 116-123, warpins: 1 ---
	main_scene.ui.panels.chat:addMsg(msg)

	--- END OF BLOCK #19 ---

	FLOW; TARGET BLOCK #20


	--- BLOCK #20 124-126, warpins: 2 ---
	--- END OF BLOCK #20 ---

	if msg.channel == "行会" then
	JUMP TO BLOCK #21
	else
	JUMP TO BLOCK #21
	end


	--- BLOCK #21 127-129, warpins: 2 ---
	--- END OF BLOCK #21 ---

	if msg.channel == "附近" then
	JUMP TO BLOCK #22
	else
	JUMP TO BLOCK #27
	end


	--- BLOCK #22 130-132, warpins: 1 ---
	local role = nil
	--- END OF BLOCK #22 ---

	slot8 = if roleid then
	JUMP TO BLOCK #23
	else
	JUMP TO BLOCK #24
	end


	--- BLOCK #23 133-141, warpins: 1 ---
	role = main_scene.ground.map:findRole(roleid)
	--- END OF BLOCK #23 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #25


	--- BLOCK #24 142-149, warpins: 1 ---
	role = main_scene.ground.map:findHeroWithName(msg.user)

	--- END OF BLOCK #24 ---

	FLOW; TARGET BLOCK #25


	--- BLOCK #25 150-151, warpins: 2 ---
	--- END OF BLOCK #25 ---

	slot11 = if role then
	JUMP TO BLOCK #26
	else
	JUMP TO BLOCK #27
	end


	--- BLOCK #26 152-156, warpins: 1 ---
	role.info:say(msg)

	--- END OF BLOCK #26 ---

	FLOW; TARGET BLOCK #27


	--- BLOCK #27 157-157, warpins: 3 ---
	return 
	--- END OF BLOCK #27 ---



end
common.getAllChatLabelM = function (channel, noNear)
	--- BLOCK #0 1-10, warpins: 1 ---
	local ret = {}

	--- END OF BLOCK #0 ---

	slot3 = if main_scene.ui.console:get("chat")

	 then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 11-22, warpins: 1 ---
	ret[#ret + 1] = main_scene.ui.console:get("chat").scroll.labelM
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 23-28, warpins: 2 ---
	--- END OF BLOCK #2 ---

	slot3 = if main_scene.ui.panels.chat then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 29-37, warpins: 1 ---
	ret[#ret + 1] = main_scene.ui.panels.chat.scroll.labelM

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 38-39, warpins: 2 ---
	--- END OF BLOCK #4 ---

	if channel == "行会" then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #5 40-41, warpins: 1 ---
	--- END OF BLOCK #5 ---

	slot1 = if not noNear then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #6 42-47, warpins: 1 ---
	--- END OF BLOCK #6 ---

	slot3 = if main_scene.ui.panels.guild then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #7 48-56, warpins: 1 ---
	--- END OF BLOCK #7 ---

	slot3 = if main_scene.ui.panels.guild:isChatInterface()

	 then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #8 57-65, warpins: 1 ---
	ret[#ret + 1] = main_scene.ui.panels.guild.content.labelM

	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 66-67, warpins: 5 ---
	--- END OF BLOCK #9 ---

	if channel == "附近" then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #15
	end


	--- BLOCK #10 68-69, warpins: 1 ---
	--- END OF BLOCK #10 ---

	slot1 = if not noNear then
	JUMP TO BLOCK #11
	else
	JUMP TO BLOCK #15
	end


	--- BLOCK #11 70-76, warpins: 1 ---
	--- END OF BLOCK #11 ---

	for k, v in pairs(main_scene.ground.map.heros)


	LOOP BLOCK #12
	GO OUT TO BLOCK #15


	--- BLOCK #12 77-80, warpins: 1 ---
	--- END OF BLOCK #12 ---

	slot8 = if v.info.sayLabel then
	JUMP TO BLOCK #13
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #13 81-85, warpins: 1 ---
	ret[#ret + 1] = v.info.sayLabel
	--- END OF BLOCK #13 ---

	FLOW; TARGET BLOCK #14


	--- BLOCK #14 86-87, warpins: 3 ---
	--- END OF BLOCK #14 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #11


	--- BLOCK #15 88-89, warpins: 3 ---
	--- END OF BLOCK #15 ---

	if channel == "私聊" then
	JUMP TO BLOCK #16
	else
	JUMP TO BLOCK #21
	end


	--- BLOCK #16 90-95, warpins: 1 ---
	local relationPnl = main_scene.ui.panels.relation
	--- END OF BLOCK #16 ---

	slot3 = if relationPnl then
	JUMP TO BLOCK #17
	else
	JUMP TO BLOCK #21
	end


	--- BLOCK #17 96-98, warpins: 1 ---
	--- END OF BLOCK #17 ---

	if relationPnl.page == "friend" then
	JUMP TO BLOCK #18
	else
	JUMP TO BLOCK #21
	end


	--- BLOCK #18 99-105, warpins: 1 ---
	local clms = relationPnl.getChatLabelMs(relationPnl)

	--- END OF BLOCK #18 ---

	for k, v in ipairs(clms)

	LOOP BLOCK #19
	GO OUT TO BLOCK #21


	--- BLOCK #19 106-110, warpins: 1 ---
	table.insert(ret, v)

	--- END OF BLOCK #19 ---

	FLOW; TARGET BLOCK #20


	--- BLOCK #20 111-112, warpins: 2 ---
	--- END OF BLOCK #20 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #18


	--- BLOCK #21 113-113, warpins: 4 ---
	return ret
	--- END OF BLOCK #21 ---



end
common.uptVoiceMsgState = function (msgID, channel, state)
	--- BLOCK #0 1-8, warpins: 1 ---
	slot4 = g_data.chat
	slot3 = g_data.chat.uptVoiceMsgState
	slot5 = msgID
	slot6 = state
	--- END OF BLOCK #0 ---

	if state ~= "start" then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 9-10, warpins: 1 ---
	slot7 = false
	--- END OF BLOCK #1 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #3


	--- BLOCK #2 11-11, warpins: 1 ---
	slot7 = true

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 12-20, warpins: 2 ---
	slot3(slot4, slot5, slot6, slot7)

	local checks = common.getAllChatLabelM(channel)

	--- END OF BLOCK #3 ---

	for i, v in ipairs(checks)


	LOOP BLOCK #4
	GO OUT TO BLOCK #8


	--- BLOCK #4 21-26, warpins: 1 ---
	local voiceBubble = v.findVoiceBubbleForMsgID(v, msgID)

	--- END OF BLOCK #4 ---

	slot9 = if voiceBubble then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #5 27-32, warpins: 1 ---
	voiceBubble.setState(voiceBubble, state)
	--- END OF BLOCK #5 ---

	if state == "start" then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 33-35, warpins: 1 ---
	voiceBubble.hideUnread(voiceBubble)

	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 36-37, warpins: 4 ---
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #3


	--- BLOCK #8 38-38, warpins: 1 ---
	return 
	--- END OF BLOCK #8 ---



end
common.uptPicMsgState = function (msgID, channel, state, path, user)
	--- BLOCK #0 1-15, warpins: 1 ---
	g_data.chat:uptPicMsgState(msgID, state)

	local checks = common.getAllChatLabelM(channel)

	--- END OF BLOCK #0 ---

	for i, v in ipairs(checks)


	LOOP BLOCK #1
	GO OUT TO BLOCK #4


	--- BLOCK #1 16-22, warpins: 1 ---
	local node = v.findNodeForClassNameAndTag(v, "chatPic", msgID)

	--- END OF BLOCK #1 ---

	slot11 = if node then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 23-27, warpins: 1 ---
	node.setState(node, state, path)
	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 28-29, warpins: 3 ---
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #4 30-31, warpins: 1 ---
	--- END OF BLOCK #4 ---

	if state == "loadOk" then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 32-46, warpins: 1 ---
	main_scene.ui:hidePanel("screenshotLook")
	main_scene.ui:showPanel("screenshotLook", {
		user = user,
		diskpath = path
	})

	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 47-47, warpins: 2 ---
	return 
	--- END OF BLOCK #6 ---



end
common.uptItemMsgData = function (data)
	--- BLOCK #0 1-11, warpins: 1 ---
	g_data.chat:uptItemMsgData(data)
	--- END OF BLOCK #0 ---

	slot1 = if g_data.client.lastQueryChatItem then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #1 12-21, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if g_data.client.lastQueryChatItem.makeIndex == data.get(data, "makeIndex")
	 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 22-36, warpins: 1 ---
	itemInfo.show(data, cc.p(g_data.client.lastQueryChatItem.x, g_data.client.lastQueryChatItem.y))
	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 37-41, warpins: 2 ---
	g_data.client:setLastQueryChatItem()

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 42-42, warpins: 2 ---
	return 
	--- END OF BLOCK #4 ---



end
common.changeChatStyle = function (array)
	--- BLOCK #0 1-4, warpins: 1 ---
	--- END OF BLOCK #0 ---

	for i, v in ipairs(array)

	LOOP BLOCK #1
	GO OUT TO BLOCK #3


	--- BLOCK #1 5-11, warpins: 1 ---
	g_data.chat:setStyle(v[1], v[2])
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 12-13, warpins: 2 ---
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #3 14-27, warpins: 1 ---
	main_scene.ui.console:call("chat", "loadInput")
	--- END OF BLOCK #3 ---

	slot1 = if main_scene.ui.panels.chat then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 28-34, warpins: 1 ---
	main_scene.ui.panels.chat:loadInput()

	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 35-35, warpins: 2 ---
	return 
	--- END OF BLOCK #5 ---



end
common.getItemDatasFromInputContent = function (content)
	--- BLOCK #0 1-6, warpins: 1 ---
	local ret = nil
	local tmpstr = ""

	--- END OF BLOCK #0 ---

	for i, v in ipairs(content)

	LOOP BLOCK #1
	GO OUT TO BLOCK #11


	--- BLOCK #1 7-11, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if type(v)

	 == "table" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #2 12-14, warpins: 1 ---
	--- END OF BLOCK #2 ---

	if v.type == "label" then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #3 15-16, warpins: 1 ---
	--- END OF BLOCK #3 ---

	slot1 = if not ret then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 17-17, warpins: 1 ---
	ret = {}

	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 18-40, warpins: 2 ---
	v.params:set("pos", ycFunction:getStringLenWithAscii(tmpstr))

	ret[#ret + 1] = v
	tmpstr = tmpstr .. "[" .. v.params:get("name") .. "]"
	--- END OF BLOCK #5 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #6 41-43, warpins: 1 ---
	--- END OF BLOCK #6 ---

	if v.type == "emoji" then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #7 44-51, warpins: 1 ---
	tmpstr = tmpstr .. string.format("{@em%03d}", v.id)

	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #8 52-56, warpins: 1 ---
	--- END OF BLOCK #8 ---

	if type(v)

	 == "string" then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #9 57-59, warpins: 1 ---
	tmpstr = tmpstr .. v

	--- END OF BLOCK #9 ---

	FLOW; TARGET BLOCK #10


	--- BLOCK #10 60-61, warpins: 6 ---
	--- END OF BLOCK #10 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #11 62-62, warpins: 1 ---
	return ret
	--- END OF BLOCK #11 ---



end
common.say = function (data)
	--- BLOCK #0 1-6, warpins: 1 ---
	--- END OF BLOCK #0 ---

	if g_data.chat.style.channel == "私聊" then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #1 7-12, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if g_data.chat.style.target == "" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 13-17, warpins: 1 ---
	an.newMsgbox("未设置私聊对象.")

	return 

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 18-24, warpins: 2 ---
	local function filterText(str, first)
		--- BLOCK #0 1-2, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot1 = if first then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #1 3-9, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if string.find(str, "@")

		 == 1 then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #2 10-15, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if g_data.chat.style.channel == "附近" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 16-16, warpins: 1 ---
		return str
		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 17-21, warpins: 4 ---
		return def.wordfilter.run(str)
		--- END OF BLOCK #4 ---



	end

	local hasRich, str = nil

	--- END OF BLOCK #3 ---

	if type(data)

	 == "string" then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 25-30, warpins: 1 ---
	str = filterText(data, true)
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #13


	--- BLOCK #5 31-35, warpins: 1 ---
	str = ""

	--- END OF BLOCK #5 ---

	for i, v in ipairs(data)

	LOOP BLOCK #6
	GO OUT TO BLOCK #13


	--- BLOCK #6 36-40, warpins: 1 ---
	--- END OF BLOCK #6 ---

	if type(v)

	 == "string" then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #7 41-45, warpins: 1 ---
	slot9 = str
	slot10 = filterText
	slot11 = v
	--- END OF BLOCK #7 ---

	if i ~= 1 then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #8 46-47, warpins: 1 ---
	slot12 = false
	--- END OF BLOCK #8 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #9 48-48, warpins: 1 ---
	slot12 = true
	--- END OF BLOCK #9 ---

	FLOW; TARGET BLOCK #10


	--- BLOCK #10 49-51, warpins: 2 ---
	str = slot9 .. slot10(slot11, slot12)
	--- END OF BLOCK #10 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #12


	--- BLOCK #11 52-55, warpins: 1 ---
	str = str .. v[1]
	hasRich = true

	--- END OF BLOCK #11 ---

	FLOW; TARGET BLOCK #12


	--- BLOCK #12 56-57, warpins: 3 ---
	--- END OF BLOCK #12 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #5


	--- BLOCK #13 58-59, warpins: 2 ---
	--- END OF BLOCK #13 ---

	if str == "" then
	JUMP TO BLOCK #14
	else
	JUMP TO BLOCK #15
	end


	--- BLOCK #14 60-61, warpins: 1 ---
	return 

	--- END OF BLOCK #14 ---

	FLOW; TARGET BLOCK #15


	--- BLOCK #15 62-75, warpins: 2 ---
	str = g_data.chat:getSayText(str)
	slot4 = net.send
	slot5 = {
		CM_SAY
	}
	--- END OF BLOCK #15 ---

	slot6 = if hasRich then
	JUMP TO BLOCK #16
	else
	JUMP TO BLOCK #17
	end


	--- BLOCK #16 76-76, warpins: 1 ---
	slot6 = 1
	--- END OF BLOCK #16 ---

	FLOW; TARGET BLOCK #17


	--- BLOCK #17 77-90, warpins: 2 ---
	slot5.param = slot6

	slot4(slot5, {
		common.encodeEmoji(str)
	})

	--- END OF BLOCK #17 ---

	if g_data.chat.style.channel == "私聊" then
	JUMP TO BLOCK #18
	else
	JUMP TO BLOCK #19
	end


	--- BLOCK #18 91-121, warpins: 1 ---
	local playerName = common.getPlayerName()

	common.addMsg(str, 180, 255, true, playerName)
	g_data.relation:recordChat(g_data.chat.style.target, string.sub(str, string.find(str, " ") + 1), playerName)

	--- END OF BLOCK #18 ---

	FLOW; TARGET BLOCK #19


	--- BLOCK #19 122-124, warpins: 2 ---
	return true
	--- END OF BLOCK #19 ---

	FLOW; TARGET BLOCK #20


	--- BLOCK #20 125-125, warpins: 2 ---
	--- END OF BLOCK #20 ---



end
common.update = function (dt)
	--- BLOCK #0 1-2, warpins: 1 ---
	local cnt = 0
	local loopMaxLoad = 5

	--- END OF BLOCK #0 ---

	FLOW; TARGET BLOCK #1


	--- BLOCK #1 3-4, warpins: 2 ---
	--- END OF BLOCK #1 ---

	if cnt < loopMaxLoad then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #2 5-11, warpins: 1 ---
	--- END OF BLOCK #2 ---

	slot3 = if not common.buf.msg.isEmpty()
	 then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #3 12-12, warpins: 1 ---
	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 13-24, warpins: 1 ---
	common.updateAddMsg(unpack(common.buf.msg.popFront()))

	cnt = cnt + 1

	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #1


	--- BLOCK #5 25-25, warpins: 2 ---
	return 
	--- END OF BLOCK #5 ---



end
common.msgbox = function (text, params)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if not params then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-3, warpins: 1 ---
	params = {}
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 4-8, warpins: 2 ---
	local msgbox = nil
	slot3 = an.newMsgbox
	--- END OF BLOCK #2 ---

	slot4 = if not text then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 9-9, warpins: 1 ---
	slot4 = ""
	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 10-68, warpins: 2 ---
	msgbox = slot3(slot4, function (idx)
		--- BLOCK #0 1-2, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if idx == 0 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #1 3-6, warpins: 1 ---
		--- END OF BLOCK #1 ---

		slot1 = if params.cancelFunc then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 7-9, warpins: 1 ---
		params.cancelFunc()
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 10-14, warpins: 2 ---
		msgbox:removeSelf()
		--- END OF BLOCK #3 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #9


		--- BLOCK #4 15-16, warpins: 1 ---
		--- END OF BLOCK #4 ---

		if idx == 1 then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #5 17-20, warpins: 1 ---
		--- END OF BLOCK #5 ---

		slot1 = if params.okFunc then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #6 21-24, warpins: 1 ---
		--- END OF BLOCK #6 ---

		slot1 = if params.okFunc then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #7 25-29, warpins: 1 ---
		--- END OF BLOCK #7 ---

		slot1 = if not params.okFunc()
		 then
		JUMP TO BLOCK #8
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #8 30-33, warpins: 2 ---
		msgbox:removeSelf()

		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 34-34, warpins: 5 ---
		return 
		--- END OF BLOCK #9 ---



	end, {
		hasCancel = true,
		manualRemove = true,
		disableScroll = not params.scroll,
		input = params.input,
		title = params.title,
		center = params.center
	})

	an.newBtn(res.gettex2("pic/common/close10.png"), function ()
		--- BLOCK #0 1-8, warpins: 1 ---
		sound.playSound("103")
		--- END OF BLOCK #0 ---

		slot0 = if params.closeFunc then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 9-11, warpins: 1 ---
		params.closeFunc()
		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 12-16, warpins: 2 ---
		msgbox:removeSelf()

		return 
		--- END OF BLOCK #2 ---



	end, {
		pressImage = res.gettex2("pic/common/close11.png"),
		size = cc.size(64, 64)
	}):addTo(msgbox.bg):pos(msgbox.bg:getw() - 5, msgbox.bg:geth() - 5):anchor(1, 1)

	return msgbox, msgbox.bg
	--- END OF BLOCK #4 ---



end
local defConfig = {}
defConfig[1] = {
	size = 20,
	file = {
		n = "pic/common/btn110.png",
		s = "pic/common/btn111.png"
	},
	lc = {
		n = def.colors.btn110,
		s = def.colors.btn111
	},
	sc = {
		n = def.colors.btn110s,
		s = def.colors.btn111s
	}
}
defConfig[2] = {
	size = 18,
	file = {
		n = "pic/common/btn60.png",
		s = "pic/common/btn61.png"
	},
	lc = {
		n = def.colors.btn30,
		s = def.colors.btn31
	},
	sc = {
		n = def.colors.btn30s,
		s = def.colors.btn31s
	}
}
defConfig[3] = {
	size = 20,
	file = {
		n = "pic/common/btn120.png",
		s = "pic/common/btn121.png"
	},
	lc = {
		n = def.colors.btn110,
		s = def.colors.btn111
	},
	sc = {
		n = def.colors.btn110s,
		s = def.colors.btn111s
	}
}
defConfig[10] = {
	size = 18,
	file = {
		n = "pic/common/btn20.png",
		s = "pic/common/btn21.png"
	},
	lc = {
		n = def.colors.btn20,
		s = def.colors.btn20
	},
	sc = {
		n = def.colors.btn20s,
		s = def.colors.btn20
	}
}
common.tabs = function (parent, labels, callback, params)
	--- BLOCK #0 1-4, warpins: 1 ---
	local hasTest = false
	local isSpr = false
	--- END OF BLOCK #0 ---

	slot1 = if labels then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #1 5-7, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot6 = if labels.strs then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #2 8-11, warpins: 1 ---
	--- END OF BLOCK #2 ---

	if #labels.strs ~= 0 then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 12-13, warpins: 1 ---
	hasTest = true
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #7


	--- BLOCK #4 14-16, warpins: 2 ---
	--- END OF BLOCK #4 ---

	slot6 = if labels.sprs then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #5 17-20, warpins: 1 ---
	--- END OF BLOCK #5 ---

	if #labels.sprs ~= 0 then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 21-22, warpins: 1 ---
	hasTest = true
	isSpr = true

	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 23-24, warpins: 5 ---
	--- END OF BLOCK #7 ---

	slot4 = if not hasTest then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #8 25-29, warpins: 1 ---
	p2("other", "[Create tabs error]: tab has no text!")

	return 

	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 30-31, warpins: 1 ---
	--- END OF BLOCK #9 ---

	slot2 = if not callback then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #10 32-35, warpins: 1 ---
	p2("other", "Tabs create without callback")

	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 36-37, warpins: 2 ---
	--- END OF BLOCK #11 ---

	slot3 = if not params then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #13
	end


	--- BLOCK #12 38-38, warpins: 1 ---
	params = {}
	--- END OF BLOCK #12 ---

	FLOW; TARGET BLOCK #13


	--- BLOCK #13 39-41, warpins: 2 ---
	--- END OF BLOCK #13 ---

	slot6 = if params.tabTp then
	JUMP TO BLOCK #14
	else
	JUMP TO BLOCK #15
	end


	--- BLOCK #14 42-46, warpins: 1 ---
	--- END OF BLOCK #14 ---

	slot6 = if not defConfig[params.tabTp] then
	JUMP TO BLOCK #15
	else
	JUMP TO BLOCK #16
	end


	--- BLOCK #15 47-48, warpins: 2 ---
	local config = defConfig[1]
	--- END OF BLOCK #15 ---

	FLOW; TARGET BLOCK #16


	--- BLOCK #16 49-52, warpins: 2 ---
	local normalImg, selectImg, normalLabelColor, selectLabelColor, normalStrokeColor, selectStrokeColor, labelSize, tabPosx, tabPosy, tabOffset, tabDir, tabAnchor, tabDefaultSelect, tabManualClick = nil
	--- END OF BLOCK #16 ---

	slot21 = if params.file then
	JUMP TO BLOCK #17
	else
	JUMP TO BLOCK #18
	end


	--- BLOCK #17 53-56, warpins: 1 ---
	--- END OF BLOCK #17 ---

	slot7 = if not params.file.normal then
	JUMP TO BLOCK #18
	else
	JUMP TO BLOCK #19
	end


	--- BLOCK #18 57-58, warpins: 2 ---
	normalImg = config.file.n
	--- END OF BLOCK #18 ---

	FLOW; TARGET BLOCK #19


	--- BLOCK #19 59-61, warpins: 2 ---
	--- END OF BLOCK #19 ---

	slot21 = if params.file then
	JUMP TO BLOCK #20
	else
	JUMP TO BLOCK #21
	end


	--- BLOCK #20 62-65, warpins: 1 ---
	--- END OF BLOCK #20 ---

	slot8 = if not params.file.select then
	JUMP TO BLOCK #21
	else
	JUMP TO BLOCK #22
	end


	--- BLOCK #21 66-67, warpins: 2 ---
	selectImg = config.file.s
	--- END OF BLOCK #21 ---

	FLOW; TARGET BLOCK #22


	--- BLOCK #22 68-70, warpins: 2 ---
	--- END OF BLOCK #22 ---

	slot21 = if labels.lc then
	JUMP TO BLOCK #23
	else
	JUMP TO BLOCK #24
	end


	--- BLOCK #23 71-74, warpins: 1 ---
	--- END OF BLOCK #23 ---

	slot9 = if not labels.lc.normal then
	JUMP TO BLOCK #24
	else
	JUMP TO BLOCK #25
	end


	--- BLOCK #24 75-76, warpins: 2 ---
	normalLabelColor = config.lc.n
	--- END OF BLOCK #24 ---

	FLOW; TARGET BLOCK #25


	--- BLOCK #25 77-79, warpins: 2 ---
	--- END OF BLOCK #25 ---

	slot21 = if labels.lc then
	JUMP TO BLOCK #26
	else
	JUMP TO BLOCK #27
	end


	--- BLOCK #26 80-83, warpins: 1 ---
	--- END OF BLOCK #26 ---

	slot10 = if not labels.lc.select then
	JUMP TO BLOCK #27
	else
	JUMP TO BLOCK #28
	end


	--- BLOCK #27 84-85, warpins: 2 ---
	selectLabelColor = config.lc.s
	--- END OF BLOCK #27 ---

	FLOW; TARGET BLOCK #28


	--- BLOCK #28 86-88, warpins: 2 ---
	--- END OF BLOCK #28 ---

	slot21 = if labels.sc then
	JUMP TO BLOCK #29
	else
	JUMP TO BLOCK #30
	end


	--- BLOCK #29 89-92, warpins: 1 ---
	--- END OF BLOCK #29 ---

	slot11 = if not labels.sc.normal then
	JUMP TO BLOCK #30
	else
	JUMP TO BLOCK #31
	end


	--- BLOCK #30 93-94, warpins: 2 ---
	normalStrokeColor = config.sc.n
	--- END OF BLOCK #30 ---

	FLOW; TARGET BLOCK #31


	--- BLOCK #31 95-97, warpins: 2 ---
	--- END OF BLOCK #31 ---

	slot21 = if labels.sc then
	JUMP TO BLOCK #32
	else
	JUMP TO BLOCK #33
	end


	--- BLOCK #32 98-101, warpins: 1 ---
	--- END OF BLOCK #32 ---

	slot12 = if not labels.sc.select then
	JUMP TO BLOCK #33
	else
	JUMP TO BLOCK #34
	end


	--- BLOCK #33 102-103, warpins: 2 ---
	selectStrokeColor = config.sc.s
	--- END OF BLOCK #33 ---

	FLOW; TARGET BLOCK #34


	--- BLOCK #34 104-106, warpins: 2 ---
	--- END OF BLOCK #34 ---

	slot13 = if not labels.size then
	JUMP TO BLOCK #35
	else
	JUMP TO BLOCK #36
	end


	--- BLOCK #35 107-107, warpins: 1 ---
	labelSize = config.size
	--- END OF BLOCK #35 ---

	FLOW; TARGET BLOCK #36


	--- BLOCK #36 108-110, warpins: 2 ---
	--- END OF BLOCK #36 ---

	slot21 = if params.pos then
	JUMP TO BLOCK #37
	else
	JUMP TO BLOCK #38
	end


	--- BLOCK #37 111-114, warpins: 1 ---
	--- END OF BLOCK #37 ---

	slot14 = if not params.pos.x then
	JUMP TO BLOCK #38
	else
	JUMP TO BLOCK #39
	end


	--- BLOCK #38 115-115, warpins: 2 ---
	tabPosx = 0
	--- END OF BLOCK #38 ---

	FLOW; TARGET BLOCK #39


	--- BLOCK #39 116-118, warpins: 2 ---
	--- END OF BLOCK #39 ---

	slot21 = if params.pos then
	JUMP TO BLOCK #40
	else
	JUMP TO BLOCK #41
	end


	--- BLOCK #40 119-122, warpins: 1 ---
	--- END OF BLOCK #40 ---

	slot15 = if not params.pos.y then
	JUMP TO BLOCK #41
	else
	JUMP TO BLOCK #42
	end


	--- BLOCK #41 123-123, warpins: 2 ---
	tabPosy = 0
	--- END OF BLOCK #41 ---

	FLOW; TARGET BLOCK #42


	--- BLOCK #42 124-126, warpins: 2 ---
	--- END OF BLOCK #42 ---

	slot21 = if params.pos then
	JUMP TO BLOCK #43
	else
	JUMP TO BLOCK #44
	end


	--- BLOCK #43 127-130, warpins: 1 ---
	--- END OF BLOCK #43 ---

	slot16 = if not params.pos.offset then
	JUMP TO BLOCK #44
	else
	JUMP TO BLOCK #45
	end


	--- BLOCK #44 131-131, warpins: 2 ---
	tabOffset = 90
	--- END OF BLOCK #44 ---

	FLOW; TARGET BLOCK #45


	--- BLOCK #45 132-134, warpins: 2 ---
	--- END OF BLOCK #45 ---

	slot21 = if params.pos then
	JUMP TO BLOCK #46
	else
	JUMP TO BLOCK #47
	end


	--- BLOCK #46 135-138, warpins: 1 ---
	--- END OF BLOCK #46 ---

	slot17 = if not params.pos.dir then
	JUMP TO BLOCK #47
	else
	JUMP TO BLOCK #48
	end


	--- BLOCK #47 139-139, warpins: 2 ---
	tabDir = 0
	--- END OF BLOCK #47 ---

	FLOW; TARGET BLOCK #48


	--- BLOCK #48 140-142, warpins: 2 ---
	--- END OF BLOCK #48 ---

	slot21 = if params.pos then
	JUMP TO BLOCK #49
	else
	JUMP TO BLOCK #50
	end


	--- BLOCK #49 143-146, warpins: 1 ---
	--- END OF BLOCK #49 ---

	slot18 = if not params.pos.anchor then
	JUMP TO BLOCK #50
	else
	JUMP TO BLOCK #51
	end


	--- BLOCK #50 147-152, warpins: 2 ---
	tabAnchor = cc.p(0, 1)
	--- END OF BLOCK #50 ---

	FLOW; TARGET BLOCK #51


	--- BLOCK #51 153-155, warpins: 2 ---
	--- END OF BLOCK #51 ---

	slot21 = if params.default then
	JUMP TO BLOCK #52
	else
	JUMP TO BLOCK #53
	end


	--- BLOCK #52 156-159, warpins: 1 ---
	--- END OF BLOCK #52 ---

	slot19 = if not params.default.var then
	JUMP TO BLOCK #53
	else
	JUMP TO BLOCK #54
	end


	--- BLOCK #53 160-160, warpins: 2 ---
	tabDefaultSelect = 1
	--- END OF BLOCK #53 ---

	FLOW; TARGET BLOCK #54


	--- BLOCK #54 161-163, warpins: 2 ---
	--- END OF BLOCK #54 ---

	slot21 = if params.default then
	JUMP TO BLOCK #55
	else
	JUMP TO BLOCK #56
	end


	--- BLOCK #55 164-167, warpins: 1 ---
	--- END OF BLOCK #55 ---

	slot20 = if not params.default.manual then
	JUMP TO BLOCK #56
	else
	JUMP TO BLOCK #57
	end


	--- BLOCK #56 168-168, warpins: 2 ---
	tabManualClick = false
	--- END OF BLOCK #56 ---

	FLOW; TARGET BLOCK #57


	--- BLOCK #57 169-176, warpins: 2 ---
	local tabs = {}
	tabs.click = function (var, manualClk)
		--- BLOCK #0 1-5, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if type(var)

		 == "number" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 6-10, warpins: 1 ---
		--- END OF BLOCK #1 ---

		slot2 = if not tabs.btns[var] then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 11-11, warpins: 2 ---
		local btn = var
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 12-15, warpins: 2 ---
		--- END OF BLOCK #3 ---

		slot3 = if params.time then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #16
		end


		--- BLOCK #4 16-23, warpins: 1 ---
		local nowtime = socket.gettime()

		--- END OF BLOCK #4 ---

		for i, v in ipairs(tabs.btns)


		LOOP BLOCK #5
		GO OUT TO BLOCK #16


		--- BLOCK #5 24-25, warpins: 1 ---
		--- END OF BLOCK #5 ---

		if v == btn then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #15
		end


		--- BLOCK #6 26-28, warpins: 1 ---
		--- END OF BLOCK #6 ---

		slot9 = if v.time then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 29-34, warpins: 1 ---
		--- END OF BLOCK #7 ---

		if params.time <= nowtime - v.time then
		JUMP TO BLOCK #8
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #8 35-36, warpins: 2 ---
		v.time = nowtime

		--- END OF BLOCK #8 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #16


		--- BLOCK #9 37-52, warpins: 1 ---
		common.addMsg(string.format("操作频繁,请间隔%d秒再试.", params.time), display.COLOR_WHITE, display.COLOR_RED)
		--- END OF BLOCK #9 ---

		slot9 = if btn.state then
		JUMP TO BLOCK #10
		else
		JUMP TO BLOCK #12
		end


		--- BLOCK #10 53-62, warpins: 1 ---
		btn.select(btn)
		btn.zorder(btn, 1)
		--- END OF BLOCK #10 ---

		slot9 = if not isSpr then
		JUMP TO BLOCK #11
		else
		JUMP TO BLOCK #14
		end


		--- BLOCK #11 63-73, warpins: 1 ---
		btn.label:setColor(selectLabelColor)
		btn.label:setStrokeColor(selectStrokeColor)
		--- END OF BLOCK #11 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #14


		--- BLOCK #12 74-83, warpins: 1 ---
		btn.unselect(btn)
		btn.zorder(btn, 0)
		--- END OF BLOCK #12 ---

		slot9 = if not isSpr then
		JUMP TO BLOCK #13
		else
		JUMP TO BLOCK #14
		end


		--- BLOCK #13 84-93, warpins: 1 ---
		btn.label:setColor(normalLabelColor)
		btn.label:setStrokeColor(normalStrokeColor)

		--- END OF BLOCK #13 ---

		FLOW; TARGET BLOCK #14


		--- BLOCK #14 94-95, warpins: 4 ---
		return 

		--- END OF BLOCK #14 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #16


		--- BLOCK #15 96-97, warpins: 2 ---
		--- END OF BLOCK #15 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #16 98-102, warpins: 4 ---
		--- END OF BLOCK #16 ---

		for k, v in ipairs(tabs.btns)

		LOOP BLOCK #17
		GO OUT TO BLOCK #30


		--- BLOCK #17 103-104, warpins: 1 ---
		--- END OF BLOCK #17 ---

		if v == btn then
		JUMP TO BLOCK #18
		else
		JUMP TO BLOCK #26
		end


		--- BLOCK #18 105-114, warpins: 1 ---
		v.select(v)
		v.zorder(v, 1)
		--- END OF BLOCK #18 ---

		slot8 = if not isSpr then
		JUMP TO BLOCK #19
		else
		JUMP TO BLOCK #20
		end


		--- BLOCK #19 115-124, warpins: 1 ---
		v.label:setColor(selectLabelColor)
		v.label:setStrokeColor(selectStrokeColor)
		--- END OF BLOCK #19 ---

		FLOW; TARGET BLOCK #20


		--- BLOCK #20 125-128, warpins: 2 ---
		--- END OF BLOCK #20 ---

		slot8 = if not params.repeatClk then
		JUMP TO BLOCK #21
		else
		JUMP TO BLOCK #22
		end


		--- BLOCK #21 129-131, warpins: 1 ---
		--- END OF BLOCK #21 ---

		slot8 = if not v.state then
		JUMP TO BLOCK #22
		else
		JUMP TO BLOCK #25
		end


		--- BLOCK #22 132-133, warpins: 2 ---
		--- END OF BLOCK #22 ---

		slot1 = if not manualClk then
		JUMP TO BLOCK #23
		else
		JUMP TO BLOCK #25
		end


		--- BLOCK #23 134-136, warpins: 1 ---
		--- END OF BLOCK #23 ---

		slot8 = if callback then
		JUMP TO BLOCK #24
		else
		JUMP TO BLOCK #25
		end


		--- BLOCK #24 137-140, warpins: 1 ---
		callback(k, v)

		--- END OF BLOCK #24 ---

		FLOW; TARGET BLOCK #25


		--- BLOCK #25 141-143, warpins: 4 ---
		v.state = true

		--- END OF BLOCK #25 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #29


		--- BLOCK #26 144-153, warpins: 1 ---
		v.unselect(v)
		v.zorder(v, 0)
		--- END OF BLOCK #26 ---

		slot8 = if not isSpr then
		JUMP TO BLOCK #27
		else
		JUMP TO BLOCK #28
		end


		--- BLOCK #27 154-163, warpins: 1 ---
		v.label:setColor(normalLabelColor)
		v.label:setStrokeColor(normalStrokeColor)

		--- END OF BLOCK #27 ---

		FLOW; TARGET BLOCK #28


		--- BLOCK #28 164-165, warpins: 2 ---
		v.state = false

		--- END OF BLOCK #28 ---

		FLOW; TARGET BLOCK #29


		--- BLOCK #29 166-167, warpins: 3 ---
		--- END OF BLOCK #29 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #16


		--- BLOCK #30 168-168, warpins: 1 ---
		return 
		--- END OF BLOCK #30 ---



	end
	tabs.btns = {}
	slot22 = 1
	--- END OF BLOCK #57 ---

	slot5 = if isSpr then
	JUMP TO BLOCK #58
	else
	JUMP TO BLOCK #59
	end


	--- BLOCK #58 177-180, warpins: 1 ---
	--- END OF BLOCK #58 ---

	slot23 = if not #labels.sprs then
	JUMP TO BLOCK #59
	else
	JUMP TO BLOCK #60
	end


	--- BLOCK #59 181-182, warpins: 2 ---
	slot23 = #labels.strs
	--- END OF BLOCK #59 ---

	FLOW; TARGET BLOCK #60


	--- BLOCK #60 183-184, warpins: 2 ---
	--- END OF BLOCK #60 ---

	for i=slot22, slot23, 1
	LOOP BLOCK #61
	GO OUT TO BLOCK #90

	--- BLOCK #61 185-187, warpins: 2 ---
	local textLabel, textSpr = nil
	--- END OF BLOCK #61 ---

	slot5 = if isSpr then
	JUMP TO BLOCK #62
	else
	JUMP TO BLOCK #63
	end


	--- BLOCK #62 188-194, warpins: 1 ---
	textSpr = res.gettex2(labels.sprs[i])
	--- END OF BLOCK #62 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #66


	--- BLOCK #63 195-199, warpins: 1 ---
	slot28 = {
		nil,
		nil,
		1
	}
	--- END OF BLOCK #63 ---

	slot29 = if not labels.strs[i] then
	JUMP TO BLOCK #64
	else
	JUMP TO BLOCK #65
	end


	--- BLOCK #64 200-200, warpins: 1 ---
	slot29 = ""
	--- END OF BLOCK #64 ---

	FLOW; TARGET BLOCK #65


	--- BLOCK #65 201-206, warpins: 2 ---
	slot28[1] = slot29
	slot28[2] = labelSize
	slot28[4] = {
		color = normalLabelColor
	}
	textLabel = slot28
	--- END OF BLOCK #65 ---

	FLOW; TARGET BLOCK #66


	--- BLOCK #66 207-208, warpins: 2 ---
	--- END OF BLOCK #66 ---

	if tabDir == 0 then
	JUMP TO BLOCK #67
	else
	JUMP TO BLOCK #68
	end


	--- BLOCK #67 209-210, warpins: 1 ---
	--- END OF BLOCK #67 ---

	slot28 = if not tabPosx then
	JUMP TO BLOCK #68
	else
	JUMP TO BLOCK #69
	end


	--- BLOCK #68 211-213, warpins: 2 ---
	local x = tabPosx + (i - 1)*tabOffset
	--- END OF BLOCK #68 ---

	FLOW; TARGET BLOCK #69


	--- BLOCK #69 214-215, warpins: 2 ---
	--- END OF BLOCK #69 ---

	if tabDir == 0 then
	JUMP TO BLOCK #70
	else
	JUMP TO BLOCK #71
	end


	--- BLOCK #70 216-220, warpins: 1 ---
	--- END OF BLOCK #70 ---

	slot29 = if not (tabPosy - (i - 1)*tabOffset) then
	JUMP TO BLOCK #71
	else
	JUMP TO BLOCK #72
	end


	--- BLOCK #71 221-221, warpins: 2 ---
	local y = tabPosy
	--- END OF BLOCK #71 ---

	FLOW; TARGET BLOCK #72


	--- BLOCK #72 222-243, warpins: 2 ---
	slot30 = tabs.btns
	slot31 = an.newBtn
	slot32 = res.gettex2(normalImg)

	function slot33(btn)
		--- BLOCK #0 1-9, warpins: 1 ---
		sound.playSound("103")
		tabs.click(btn)

		return 
		--- END OF BLOCK #0 ---



	end

	slot34 = {
		manual = true,
		select = {
			res.gettex2(selectImg)
		},
		label = textLabel,
		sprite = textSpr
	}
	slot35 = {}
	--- END OF BLOCK #72 ---

	slot36 = if not labels.ox then
	JUMP TO BLOCK #73
	else
	JUMP TO BLOCK #74
	end


	--- BLOCK #73 244-244, warpins: 1 ---
	slot36 = 0
	--- END OF BLOCK #73 ---

	FLOW; TARGET BLOCK #74


	--- BLOCK #74 245-248, warpins: 2 ---
	slot35.x = slot36
	--- END OF BLOCK #74 ---

	slot36 = if not labels.oy then
	JUMP TO BLOCK #75
	else
	JUMP TO BLOCK #76
	end


	--- BLOCK #75 249-249, warpins: 1 ---
	slot36 = 0
	--- END OF BLOCK #75 ---

	FLOW; TARGET BLOCK #76


	--- BLOCK #76 250-255, warpins: 2 ---
	slot35.y = slot36
	slot34.labelOffset = slot35
	slot35 = {}
	--- END OF BLOCK #76 ---

	slot36 = if not labels.ox then
	JUMP TO BLOCK #77
	else
	JUMP TO BLOCK #78
	end


	--- BLOCK #77 256-256, warpins: 1 ---
	slot36 = 0
	--- END OF BLOCK #77 ---

	FLOW; TARGET BLOCK #78


	--- BLOCK #78 257-260, warpins: 2 ---
	slot35.x = slot36
	--- END OF BLOCK #78 ---

	slot36 = if not labels.oy then
	JUMP TO BLOCK #79
	else
	JUMP TO BLOCK #80
	end


	--- BLOCK #79 261-261, warpins: 1 ---
	slot36 = 0
	--- END OF BLOCK #79 ---

	FLOW; TARGET BLOCK #80


	--- BLOCK #80 262-266, warpins: 2 ---
	slot35.y = slot36
	slot34.spriteOffset = slot35
	--- END OF BLOCK #80 ---

	slot35 = if not params.scale then
	JUMP TO BLOCK #81
	else
	JUMP TO BLOCK #82
	end


	--- BLOCK #81 267-267, warpins: 1 ---
	slot35 = 1
	--- END OF BLOCK #81 ---

	FLOW; TARGET BLOCK #82


	--- BLOCK #82 268-273, warpins: 2 ---
	slot34.scale = slot35
	slot32 = slot31(slot32, slot33, slot34)
	slot31 = slot31(slot32, slot33, slot34).addTo
	--- END OF BLOCK #82 ---

	slot33 = if not parent then
	JUMP TO BLOCK #83
	else
	JUMP TO BLOCK #84
	end


	--- BLOCK #83 274-276, warpins: 1 ---
	slot33 = display.getRunningScene()
	--- END OF BLOCK #83 ---

	FLOW; TARGET BLOCK #84


	--- BLOCK #84 277-291, warpins: 2 ---
	slot30[i] = slot31(slot32, slot33):pos(x, y):anchor(tabAnchor.x, tabAnchor.y)
	--- END OF BLOCK #84 ---

	slot30 = if params.datas then
	JUMP TO BLOCK #85
	else
	JUMP TO BLOCK #87
	end


	--- BLOCK #85 292-295, warpins: 1 ---
	--- END OF BLOCK #85 ---

	slot30 = if params.datas[i] then
	JUMP TO BLOCK #86
	else
	JUMP TO BLOCK #87
	end


	--- BLOCK #86 296-300, warpins: 1 ---
	tabs.btns[i].data = params.datas[i]

	--- END OF BLOCK #86 ---

	FLOW; TARGET BLOCK #87


	--- BLOCK #87 301-302, warpins: 3 ---
	--- END OF BLOCK #87 ---

	if i == tabDefaultSelect then
	JUMP TO BLOCK #88
	else
	JUMP TO BLOCK #89
	end


	--- BLOCK #88 303-307, warpins: 1 ---
	tabs.click(tabs.btns[i], tabManualClick)

	--- END OF BLOCK #88 ---

	FLOW; TARGET BLOCK #89


	--- BLOCK #89 308-308, warpins: 2 ---
	--- END OF BLOCK #89 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #60


	--- BLOCK #90 309-310, warpins: 1 ---
	return tabs
	--- END OF BLOCK #90 ---

	FLOW; TARGET BLOCK #91


	--- BLOCK #91 311-311, warpins: 2 ---
	--- END OF BLOCK #91 ---



end
common.showBosonResult = function (msg, buf, bufLen)
	--- BLOCK #0 1-5, warpins: 1 ---
	--- END OF BLOCK #0 ---

	if getRecordSize("TMessageBodyWL")

	 < bufLen then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #1 6-39, warpins: 1 ---
	local wl, buf, bufLen = net.record("TMessageBodyWL", buf, bufLen)
	local npcSay = net.str(buf)
	local diceCount = msg.param
	local result = {}
	result[#result + 1] = Lobyte(Loword(wl.get(wl, "param1")))
	local tmpValue = Hibyte(Loword(wl.get(wl, "param1")))
	--- END OF BLOCK #1 ---

	if 0 < tmpValue then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 40-42, warpins: 1 ---
	result[#result + 1] = tmpValue
	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 43-54, warpins: 2 ---
	tmpValue = Lobyte(Hiword(wl.get(wl, "param1")))
	--- END OF BLOCK #3 ---

	if 0 < tmpValue then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 55-57, warpins: 1 ---
	result[#result + 1] = tmpValue
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 58-69, warpins: 2 ---
	tmpValue = Hibyte(Hiword(wl.get(wl, "param1")))
	--- END OF BLOCK #5 ---

	if 0 < tmpValue then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 70-72, warpins: 1 ---
	result[#result + 1] = tmpValue
	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 73-142, warpins: 2 ---
	local node = display.newNode()

	node.anchor(node, 0.5, 0.5):pos(display.cx, display.cy):addto(display.getRunningScene(), an.z.msgbox)
	node.setTouchEnabled(node, true)
	node.addNodeEventListener(node, cc.NODE_TOUCH_EVENT, function ()
		--- BLOCK #0 1-1, warpins: 1 ---
		return 
		--- END OF BLOCK #0 ---



	end)

	local bg = res.get2("pic/notice/bg2.png"):anchor(0, 0):addto(node)

	node.size(node, bg.getw(bg), bg.geth(bg))

	local disWidth = 50
	local beginX = bg.getw(bg)*0.5
	beginX = beginX - ((#result - 1)*disWidth)/2

	--- END OF BLOCK #7 ---

	for i, v in ipairs(result)


	LOOP BLOCK #8
	GO OUT TO BLOCK #10


	--- BLOCK #8 143-214, warpins: 1 ---
	local pic = res.get("items", 383):anchor(0.5, 0.5):pos(beginX + (i - 1)*disWidth, bg.geth(bg)*0.5):add2(bg)

	pic.runs(pic, {
		cc.DelayTime:create(0.6),
		cc.Animate:create(common.getrandani("items", 383, 386, 0.65, 6)),
		cc.CallFunc:create(function ()
			--- BLOCK #0 1-13, warpins: 1 ---
			pic:setTex(res.gettex("items", result[i] + 375))

			return 
			--- END OF BLOCK #0 ---



		end),
		cc.DelayTime:create(2),
		cc.CallFunc:create(function ()
			--- BLOCK #0 1-17, warpins: 1 ---
			net.send({
				CM_MERCHANTDLGSELECT,
				recog = msg.recog
			}, {
				npcSay
			})
			node:removeSelf()

			return 
			--- END OF BLOCK #0 ---



		end)
	})

	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 215-216, warpins: 2 ---
	--- END OF BLOCK #9 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #7


	--- BLOCK #10 217-217, warpins: 1 ---
	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 218-219, warpins: 2 ---
	return 
	--- END OF BLOCK #11 ---



end
common.getrandani = function (imgid, beginidx, endidx, delay, total)
	--- BLOCK #0 1-5, warpins: 1 ---
	local frames = {}
	--- END OF BLOCK #0 ---

	for index=1, total, 1
	LOOP BLOCK #1
	GO OUT TO BLOCK #5

	--- BLOCK #1 6-17, warpins: 2 ---
	local curIndex = math.random(beginidx, endidx)
	local frame = res.getframe(imgid, curIndex)
	--- END OF BLOCK #1 ---

	slot11 = if frame then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #2 18-21, warpins: 1 ---
	frames[#frames + 1] = frame
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #3 22-22, warpins: 0 ---
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #5


	--- BLOCK #4 23-23, warpins: 1 ---
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #5 24-27, warpins: 3 ---
	--- END OF BLOCK #5 ---

	if 0 < #frames then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 28-39, warpins: 1 ---
	local animation = cc.Animation:createWithSpriteFrames(frames, delay)

	animation.retain(animation)

	return animation

	--- END OF BLOCK #6 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #7 40-42, warpins: 1 ---
	print("frames cnt == 0")

	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 43-43, warpins: 2 ---
	return 
	--- END OF BLOCK #8 ---



end
common.setLockEquipState = function (msg, buf, bufLen)
	--- BLOCK #0 1-12, warpins: 1 ---
	g_data.equip:setServerUnlockTime(msg.recog)
	--- END OF BLOCK #0 ---

	slot3 = if not g_data.client.lastTime.equipUnlockTime then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 13-19, warpins: 1 ---
	g_data.client:setLastTime("equipUnlockTime", true)

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 20-23, warpins: 2 ---
	local str, state = nil
	--- END OF BLOCK #2 ---

	if msg.param == 1 then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 24-26, warpins: 1 ---
	str = "您穿戴的装备已锁定，点击装备栏右上角的“密宝”按钮可进行解锁"
	state = false
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #6


	--- BLOCK #4 27-29, warpins: 1 ---
	--- END OF BLOCK #4 ---

	if msg.param == 2 then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 30-31, warpins: 1 ---
	str = "您穿戴的装备已解除锁定，再点击“密宝”按钮可对装备进行锁定"
	state = true
	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 32-33, warpins: 3 ---
	--- END OF BLOCK #6 ---

	slot3 = if str then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #12
	end


	--- BLOCK #7 34-37, warpins: 1 ---
	slot5 = common.addMsg
	--- END OF BLOCK #7 ---

	slot3 = if str then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #8 38-39, warpins: 1 ---
	--- END OF BLOCK #8 ---

	slot6 = if not str then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #9 40-40, warpins: 2 ---
	slot6 = ""

	--- END OF BLOCK #9 ---

	FLOW; TARGET BLOCK #10


	--- BLOCK #10 41-57, warpins: 2 ---
	slot5(slot6, display.COLOR_WHITE, display.COLOR_RED)
	g_data.equip:setLock(msg.param)
	--- END OF BLOCK #10 ---

	slot5 = if main_scene.ui.panels.equip then
	JUMP TO BLOCK #11
	else
	JUMP TO BLOCK #12
	end


	--- BLOCK #11 58-65, warpins: 1 ---
	main_scene.ui.panels.equip:setSecurityState(state)

	--- END OF BLOCK #11 ---

	FLOW; TARGET BLOCK #12


	--- BLOCK #12 66-66, warpins: 3 ---
	return 
	--- END OF BLOCK #12 ---



end
common.setBindEquipState = function (msg, buf, bufLen)
	--- BLOCK #0 1-6, warpins: 1 ---
	local str = ""
	local unlockTime = nil

	--- END OF BLOCK #0 ---

	if msg.param < 9 then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #1 7-19, warpins: 1 ---
	main_scene.ui.console:call("hp", "setEquipLockVisible", true)

	--- END OF BLOCK #1 ---

	if 0 < msg.recog then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #2 20-41, warpins: 1 ---
	local tt, nn, ss = nil
	unLockTime = g_data.equip.lockTime - msg.recog
	tt = math.floor(unLockTime/1000)
	nn = math.floor(tt/60)
	ss = tt%60
	--- END OF BLOCK #2 ---

	if tt <= 0 then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #3 42-44, warpins: 2 ---
	--- END OF BLOCK #3 ---

	if 0 < nn then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 45-49, warpins: 1 ---
	--- END OF BLOCK #4 ---

	slot3 = if not (nn .. "分") then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 50-50, warpins: 2 ---
	str = ""
	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 51-54, warpins: 2 ---
	slot8 = str
	--- END OF BLOCK #6 ---

	if 0 < ss then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 55-59, warpins: 1 ---
	--- END OF BLOCK #7 ---

	slot9 = if not (ss .. "秒") then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #8 60-60, warpins: 2 ---
	slot9 = ""
	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 61-61, warpins: 2 ---
	str = slot8 .. slot9

	--- END OF BLOCK #9 ---

	FLOW; TARGET BLOCK #10


	--- BLOCK #10 62-65, warpins: 3 ---
	local function addMsg(str)
		--- BLOCK #0 1-4, warpins: 1 ---
		slot1 = common.addMsg
		--- END OF BLOCK #0 ---

		slot0 = if str then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 5-6, warpins: 1 ---
		--- END OF BLOCK #1 ---

		slot2 = if not str then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 7-7, warpins: 2 ---
		slot2 = ""

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 8-13, warpins: 2 ---
		slot1(slot2, display.COLOR_WHITE, display.COLOR_RED)

		return 
		--- END OF BLOCK #3 ---



	end

	--- END OF BLOCK #10 ---

	if msg.param == 0 then
	JUMP TO BLOCK #11
	else
	JUMP TO BLOCK #13
	end


	--- BLOCK #11 66-67, warpins: 1 ---
	--- END OF BLOCK #11 ---

	if str ~= 0 then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #58
	end


	--- BLOCK #12 68-74, warpins: 1 ---
	addMsg("你的装备已经被密宝绑定，" .. str .. "后点击血球右下角的密宝按钮进行验证")
	--- END OF BLOCK #12 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #13 75-77, warpins: 1 ---
	--- END OF BLOCK #13 ---

	if msg.param == 1 then
	JUMP TO BLOCK #14
	else
	JUMP TO BLOCK #16
	end


	--- BLOCK #14 78-79, warpins: 1 ---
	--- END OF BLOCK #14 ---

	if str ~= 0 then
	JUMP TO BLOCK #15
	else
	JUMP TO BLOCK #58
	end


	--- BLOCK #15 80-85, warpins: 1 ---
	addMsg(str .. "后可点击游戏界面右下角的密宝按钮，进行验证成功后，方可使用此功能")
	--- END OF BLOCK #15 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #16 86-88, warpins: 1 ---
	--- END OF BLOCK #16 ---

	if msg.param == 2 then
	JUMP TO BLOCK #17
	else
	JUMP TO BLOCK #18
	end


	--- BLOCK #17 89-92, warpins: 1 ---
	addMsg("装备解绑失败，游戏中断")
	--- END OF BLOCK #17 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #18 93-95, warpins: 1 ---
	--- END OF BLOCK #18 ---

	if msg.param == 3 then
	JUMP TO BLOCK #19
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #19 96-108, warpins: 1 ---
	addMsg("装备成功解除绑定")
	main_scene.ui.console:call("hp", "setEquipLockVisible", false)
	--- END OF BLOCK #19 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #20 109-111, warpins: 1 ---
	--- END OF BLOCK #20 ---

	if msg.param == 4 then
	JUMP TO BLOCK #21
	else
	JUMP TO BLOCK #22
	end


	--- BLOCK #21 112-115, warpins: 1 ---
	addMsg("装备解绑失败，密宝时间偏差，请到网页上矫正密宝时间")
	--- END OF BLOCK #21 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #22 116-118, warpins: 1 ---
	--- END OF BLOCK #22 ---

	if msg.param == 5 then
	JUMP TO BLOCK #23
	else
	JUMP TO BLOCK #24
	end


	--- BLOCK #23 119-122, warpins: 1 ---
	addMsg("服务器忙，请稍后再试...")
	--- END OF BLOCK #23 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #24 123-125, warpins: 1 ---
	--- END OF BLOCK #24 ---

	if msg.param == 6 then
	JUMP TO BLOCK #25
	else
	JUMP TO BLOCK #26
	end


	--- BLOCK #25 126-129, warpins: 1 ---
	addMsg("请重新登录后，再来进行此操作")
	--- END OF BLOCK #25 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #26 130-136, warpins: 1 ---
	--- END OF BLOCK #26 ---

	slot6 = if not checkIn(msg.param, 8, 18)
	 then
	JUMP TO BLOCK #27
	else
	JUMP TO BLOCK #28
	end


	--- BLOCK #27 137-140, warpins: 1 ---
	--- END OF BLOCK #27 ---

	if PPW_SM_EQUIP_SPLIT == msg.param then
	JUMP TO BLOCK #28
	else
	JUMP TO BLOCK #57
	end


	--- BLOCK #28 141-144, warpins: 2 ---
	--- END OF BLOCK #28 ---

	if 0 < msg.series then
	JUMP TO BLOCK #29
	else
	JUMP TO BLOCK #58
	end


	--- BLOCK #29 145-148, warpins: 1 ---
	--- END OF BLOCK #29 ---

	if 10000 < msg.series then
	JUMP TO BLOCK #30
	else
	JUMP TO BLOCK #31
	end


	--- BLOCK #30 149-155, warpins: 1 ---
	g_data.security:setEquipBit(msg.series)
	--- END OF BLOCK #30 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #31


	--- BLOCK #31 156-158, warpins: 2 ---
	--- END OF BLOCK #31 ---

	if msg.param == 8 then
	JUMP TO BLOCK #32
	else
	JUMP TO BLOCK #33
	end


	--- BLOCK #32 159-171, warpins: 1 ---
	addMsg("你的装备已经被密宝绑定，请点击血球右下角的密宝按钮进行验证")
	main_scene.ui.console:call("hp", "setEquipLockVisible", true)
	--- END OF BLOCK #32 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #33 172-174, warpins: 1 ---
	--- END OF BLOCK #33 ---

	if msg.param == 9 then
	JUMP TO BLOCK #34
	else
	JUMP TO BLOCK #37
	end


	--- BLOCK #34 175-179, warpins: 1 ---
	--- END OF BLOCK #34 ---

	slot6 = if g_data.security.equipBit then
	JUMP TO BLOCK #35
	else
	JUMP TO BLOCK #58
	end


	--- BLOCK #35 180-185, warpins: 1 ---
	--- END OF BLOCK #35 ---

	slot6 = if not main_scene.ui.panels.security then
	JUMP TO BLOCK #36
	else
	JUMP TO BLOCK #58
	end


	--- BLOCK #36 186-193, warpins: 1 ---
	main_scene.ui:togglePanel("security", {
		tag = 1
	})
	--- END OF BLOCK #36 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #37 194-196, warpins: 1 ---
	--- END OF BLOCK #37 ---

	if msg.param == 10 then
	JUMP TO BLOCK #38
	else
	JUMP TO BLOCK #39
	end


	--- BLOCK #38 197-197, warpins: 1 ---
	--- END OF BLOCK #38 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #39 198-200, warpins: 1 ---
	--- END OF BLOCK #39 ---

	if msg.param == 11 then
	JUMP TO BLOCK #40
	else
	JUMP TO BLOCK #41
	end


	--- BLOCK #40 201-201, warpins: 1 ---
	--- END OF BLOCK #40 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #41 202-204, warpins: 1 ---
	--- END OF BLOCK #41 ---

	if msg.param == 12 then
	JUMP TO BLOCK #42
	else
	JUMP TO BLOCK #43
	end


	--- BLOCK #42 205-205, warpins: 1 ---
	--- END OF BLOCK #42 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #43 206-208, warpins: 1 ---
	--- END OF BLOCK #43 ---

	if msg.param == 13 then
	JUMP TO BLOCK #44
	else
	JUMP TO BLOCK #45
	end


	--- BLOCK #44 209-209, warpins: 1 ---
	--- END OF BLOCK #44 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #45 210-212, warpins: 1 ---
	--- END OF BLOCK #45 ---

	if msg.param == 14 then
	JUMP TO BLOCK #46
	else
	JUMP TO BLOCK #47
	end


	--- BLOCK #46 213-213, warpins: 1 ---
	--- END OF BLOCK #46 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #47 214-216, warpins: 1 ---
	--- END OF BLOCK #47 ---

	if msg.param == 15 then
	JUMP TO BLOCK #48
	else
	JUMP TO BLOCK #49
	end


	--- BLOCK #48 217-217, warpins: 1 ---
	--- END OF BLOCK #48 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #49 218-220, warpins: 1 ---
	--- END OF BLOCK #49 ---

	if msg.param == 16 then
	JUMP TO BLOCK #50
	else
	JUMP TO BLOCK #51
	end


	--- BLOCK #50 221-221, warpins: 1 ---
	--- END OF BLOCK #50 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #51 222-224, warpins: 1 ---
	--- END OF BLOCK #51 ---

	if msg.param == 17 then
	JUMP TO BLOCK #52
	else
	JUMP TO BLOCK #53
	end


	--- BLOCK #52 225-225, warpins: 1 ---
	--- END OF BLOCK #52 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #53 226-228, warpins: 1 ---
	--- END OF BLOCK #53 ---

	if msg.param == 18 then
	JUMP TO BLOCK #54
	else
	JUMP TO BLOCK #55
	end


	--- BLOCK #54 229-229, warpins: 1 ---
	--- END OF BLOCK #54 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #55 230-233, warpins: 1 ---
	--- END OF BLOCK #55 ---

	if PPW_SM_EQUIP_SPLIT == msg.param then
	JUMP TO BLOCK #56
	else
	JUMP TO BLOCK #58
	end


	--- BLOCK #56 234-234, warpins: 1 ---
	--- END OF BLOCK #56 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #58


	--- BLOCK #57 235-237, warpins: 1 ---
	addMsg("装备解绑失败，请稍后再试...")

	--- END OF BLOCK #57 ---

	FLOW; TARGET BLOCK #58


	--- BLOCK #58 238-238, warpins: 26 ---
	return 
	--- END OF BLOCK #58 ---



end
common.enablePopStyle = function (node, swallowTouch, cbFunc, params)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot3 = if not params then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-3, warpins: 1 ---
	params = {
		casecade = true
	}
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 4-11, warpins: 2 ---
	local casecade = params.casecade
	local listener = cc.EventListenerTouchOneByOne:create()

	--- END OF BLOCK #2 ---

	slot1 = if swallowTouch then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 12-15, warpins: 1 ---
	listener.setSwallowTouches(listener, true)
	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 16-40, warpins: 2 ---
	listener.registerScriptHandler(listener, function (touch, event)
		--- BLOCK #0 1-13, warpins: 1 ---
		local pos = touch.getLocation(touch)
		local hited = node:hitTest(pos, casecade)
		--- END OF BLOCK #0 ---

		slot4 = if params.reverse then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 14-14, warpins: 1 ---
		hited = not hited

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 15-16, warpins: 2 ---
		--- END OF BLOCK #2 ---

		slot3 = if not hited then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #3 17-19, warpins: 1 ---
		--- END OF BLOCK #3 ---

		slot4 = if cbFunc then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 20-22, warpins: 1 ---
		cbFunc()
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #7


		--- BLOCK #5 23-25, warpins: 1 ---
		--- END OF BLOCK #5 ---

		slot4 = if not swallowTouch then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #6 26-29, warpins: 1 ---
		node:removeSelf()

		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 30-32, warpins: 3 ---
		--- END OF BLOCK #7 ---

		slot4 = if swallowTouch then
		JUMP TO BLOCK #8
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #8 33-34, warpins: 1 ---
		return true
		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 35-35, warpins: 3 ---
		return 
		--- END OF BLOCK #9 ---



	end, cc.Handler.EVENT_TOUCH_BEGAN)
	listener.registerScriptHandler(listener, function (touch, event)
		--- BLOCK #0 1-11, warpins: 1 ---
		local pos = touch.getLocation(touch)

		--- END OF BLOCK #0 ---

		slot3 = if not node:hitTest(pos, casecade)
		 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #1 12-14, warpins: 1 ---
		--- END OF BLOCK #1 ---

		slot3 = if swallowTouch then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 15-18, warpins: 1 ---
		node:removeSelf()

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 19-19, warpins: 3 ---
		return 
		--- END OF BLOCK #3 ---



	end, cc.Handler.EVENT_TOUCH_ENDED)

	local eventDispatcher = node.getEventDispatcher(node)

	eventDispatcher.addEventListenerWithSceneGraphPriority(eventDispatcher, listener, node)

	node.popStyleListener__ = listener

	return 
	--- END OF BLOCK #4 ---



end
common.unablePopStyle = function (node)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if node.popStyleListener__ then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-12, warpins: 1 ---
	local eventDispatcher = node.getEventDispatcher(node)

	eventDispatcher.removeEventListener(eventDispatcher, node.popStyleListener__)

	node.popStyleListener__ = nil

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 13-13, warpins: 2 ---
	return 
	--- END OF BLOCK #2 ---



end
common.createOperationMenu = function (menuList, interval, clickCB, params)
	--- BLOCK #0 1-3, warpins: 1 ---
	local panel = nil
	--- END OF BLOCK #0 ---

	slot3 = if not params then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-4, warpins: 1 ---
	params = {}
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 5-14, warpins: 2 ---
	local itemCnt = #menuList
	local view = display.newNode()
	local preY = interval
	local selectPic = nil
	--- END OF BLOCK #2 ---

	for k=itemCnt, 1, -1
	LOOP BLOCK #3
	GO OUT TO BLOCK #4

	--- BLOCK #3 15-77, warpins: 2 ---
	local v = menuList[k]
	local offX = v.w/2
	local cell = display.newNode():pos(0, preY):size(v.w, v.h):add2(view):anchor(0.5, 0)
	preY = preY + v.h + interval
	local cellContent = v.cellCls():add2(cell):anchor(0.5, 0.5):pos(v.w/2, v.h/2)
	cell.cellData = v

	cell.setTouchEnabled(cell, true)
	cell.setTouchSwallowEnabled(cell, false)
	cell.addNodeEventListener(cell, cc.NODE_TOUCH_EVENT, function (event)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if event.name == "began" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #1 4-12, warpins: 1 ---
		cell.offsetBeginY = event.y
		cell.offsetBeginX = event.x

		--- END OF BLOCK #1 ---

		slot1 = if selectPic then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 13-17, warpins: 1 ---
		selectPic:removeSelf()

		selectPic = nil
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 18-60, warpins: 2 ---
		selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(v.w + interval, cell.cellData.h + interval)):anchor(0, 0):add2(cell):pos(-interval/2, -interval/2)

		return true

		--- END OF BLOCK #3 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #8


		--- BLOCK #4 61-63, warpins: 1 ---
		--- END OF BLOCK #4 ---

		if event.name == "ended" then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #5 64-78, warpins: 1 ---
		local offsetY = event.y - cell.offsetBeginY
		local offsetX = event.x - cell.offsetBeginX

		--- END OF BLOCK #5 ---

		if math.abs(offsetY)
		 <= 7 then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #6 79-85, warpins: 1 ---
		--- END OF BLOCK #6 ---

		if math.abs(offsetX)
		 <= 7 then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 86-90, warpins: 1 ---
		clickCB(panel, cell.cellData)

		--- END OF BLOCK #7 ---

		FLOW; TARGET BLOCK #8


		--- BLOCK #8 91-91, warpins: 5 ---
		return 
		--- END OF BLOCK #8 ---



	end)

	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #2


	--- BLOCK #4 78-86, warpins: 1 ---
	local viewRect = view.getCascadeBoundingBox(view)
	viewRect.height = viewRect.height + interval
	--- END OF BLOCK #4 ---

	slot10 = if params.width then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 87-89, warpins: 1 ---
	viewRect.width = params.width
	--- END OF BLOCK #5 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #7


	--- BLOCK #6 90-92, warpins: 1 ---
	viewRect.width = viewRect.width + interval

	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 93-101, warpins: 2 ---
	view.pos(view, viewRect.width/2, 0)

	--- END OF BLOCK #7 ---

	slot10 = if params.scroll then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #8 102-108, warpins: 1 ---
	slot10 = display.newScale9Sprite
	slot11 = res.getframe2
	--- END OF BLOCK #8 ---

	slot12 = if not params.bgTex then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #9 109-109, warpins: 1 ---
	slot12 = "pic/scale/scale16.png"
	--- END OF BLOCK #9 ---

	FLOW; TARGET BLOCK #10


	--- BLOCK #10 110-159, warpins: 2 ---
	panel = slot10(slot11(slot12), 0, 0, cc.size(params.scroll.w, params.scroll.h)):anchor(0, 0)
	local scroll = an.newScroll(0, 0, params.scroll.w, params.scroll.h, {
		labelM = {
			18,
			1
		}
	}):add2(panel)

	scroll.setScrollSize(scroll, viewRect.width, viewRect.height)
	view.add2(view, scroll):pos(params.scroll.w/2, 0)

	--- END OF BLOCK #10 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #15


	--- BLOCK #11 160-165, warpins: 1 ---
	slot10 = display.newScale9Sprite
	slot11 = res.getframe2
	--- END OF BLOCK #11 ---

	slot3 = if params then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #13
	end


	--- BLOCK #12 166-168, warpins: 1 ---
	--- END OF BLOCK #12 ---

	slot12 = if not params.bgTex then
	JUMP TO BLOCK #13
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #13 169-169, warpins: 2 ---
	slot12 = "pic/scale/scale16.png"
	--- END OF BLOCK #13 ---

	FLOW; TARGET BLOCK #14


	--- BLOCK #14 170-193, warpins: 2 ---
	panel = slot10(slot11(slot12), 0, 0, cc.size(viewRect.width, viewRect.height + interval)):anchor(0, 0)

	view.add2(view, panel)
	panel.setTouchEnabled(panel, true)
	--- END OF BLOCK #14 ---

	FLOW; TARGET BLOCK #15


	--- BLOCK #15 194-196, warpins: 2 ---
	--- END OF BLOCK #15 ---

	slot10 = if not params.disPopStyle then
	JUMP TO BLOCK #16
	else
	JUMP TO BLOCK #17
	end


	--- BLOCK #16 197-203, warpins: 1 ---
	common.enablePopStyle(panel, true, nil, {
		cascade = false
	})
	--- END OF BLOCK #16 ---

	FLOW; TARGET BLOCK #17


	--- BLOCK #17 204-206, warpins: 2 ---
	--- END OF BLOCK #17 ---

	slot10 = if params.drag then
	JUMP TO BLOCK #18
	else
	JUMP TO BLOCK #19
	end


	--- BLOCK #18 207-213, warpins: 1 ---
	panel.enableClick(panel, function ()
		--- BLOCK #0 1-1, warpins: 1 ---
		return 
		--- END OF BLOCK #0 ---



	end, {
		support = "drag",
		call_drag_end = function (x, y)
			--- BLOCK #0 1-7, warpins: 1 ---
			print(panel:getPosition())

			return 
			--- END OF BLOCK #0 ---



		end
	})

	--- END OF BLOCK #18 ---

	FLOW; TARGET BLOCK #19


	--- BLOCK #19 214-215, warpins: 2 ---
	return panel
	--- END OF BLOCK #19 ---



end
common.chatChannelChoose = function (removeSelf)
	--- BLOCK #0 1-26, warpins: 1 ---
	local texts = {
		"附近",
		"私聊",
		"喊话",
		"组队",
		"战队",
		"行会",
		"千里传音"
	}
	local filenames = {
		"fujin",
		"siliao",
		"hanhua",
		"bz",
		"zhandui",
		"hanghui",
		"ql"
	}
	local space = 45
	local bg = display.newScale9Sprite(res.getframe2("pic/scale/scale21.png")):size(80, #texts*space + 10)

	common.enablePopStyle(bg, true)
	--- END OF BLOCK #0 ---

	for i, v in ipairs(texts)

	LOOP BLOCK #1
	GO OUT TO BLOCK #3


	--- BLOCK #1 27-63, warpins: 1 ---
	an.newBtn(res.gettex2("pic/common/btn50.png"), function ()
		--- BLOCK #0 1-11, warpins: 1 ---
		common.changeChatStyle({
			{
				"channel",
				v
			}
		})
		--- END OF BLOCK #0 ---

		slot0 = if removeSelf then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 12-15, warpins: 1 ---
		bg:removeSelf()

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 16-16, warpins: 2 ---
		return 
		--- END OF BLOCK #2 ---



	end, {
		sprite = res.gettex2("pic/panels/chat/" .. filenames[i] .. ".png"),
		pressImage = res.gettex2("pic/common/btn51.png")
	}):add2(bg):pos(bg.getw(bg)/2, (i - 0.5)*space + 5)

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 64-65, warpins: 2 ---
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #3 66-67, warpins: 1 ---
	return bg
	--- END OF BLOCK #3 ---



end
common.getMinimapTexture = function (mapid, func)
	--- BLOCK #0 1-7, warpins: 1 ---
	local minimapID = def.map.getMinimapID(mapid)

	--- END OF BLOCK #0 ---

	slot2 = if not minimapID then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 8-10, warpins: 1 ---
	func()

	return 

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 11-19, warpins: 1 ---
	local tex, err = res.gettex2(minimapID .. ".png", "data/mmap")

	--- END OF BLOCK #2 ---

	slot4 = if not err then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 20-23, warpins: 1 ---
	func(tex)

	return 

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 24-30, warpins: 1 ---
	tex = cache.getMinimap(minimapID)

	--- END OF BLOCK #4 ---

	slot3 = if tex then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 31-34, warpins: 1 ---
	func(tex)

	return 

	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 35-43, warpins: 1 ---
	--- END OF BLOCK #6 ---

	slot5 = if makeMinimap(mapid, cache.minimapFullPath(minimapID))
	 then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 44-49, warpins: 1 ---
	scheduler.performWithDelayGlobal(function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		func(cache.getMinimap(minimapID))

		return 
		--- END OF BLOCK #0 ---



	end, 0)
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #9


	--- BLOCK #8 50-51, warpins: 1 ---
	func()

	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 52-53, warpins: 2 ---
	return 
	--- END OF BLOCK #9 ---

	FLOW; TARGET BLOCK #10


	--- BLOCK #10 54-54, warpins: 2 ---
	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 55-55, warpins: 2 ---
	--- END OF BLOCK #11 ---

	FLOW; TARGET BLOCK #12


	--- BLOCK #12 56-56, warpins: 2 ---
	--- END OF BLOCK #12 ---



end
common.allChatChannels = {
	附近 = {
		2,
		"允许接收公聊信息",
		"拒绝接收公聊信息"
	},
	喊话 = {
		3,
		"允许接收(黄颜色字体)喊话",
		"拒绝接收(黄颜色字体)喊话"
	},
	行会 = {
		4,
		"允许接收行会喊话信息",
		"拒绝接收行会喊话信息"
	},
	私聊 = {
		1,
		"允许接收私聊信息",
		"拒绝接收私聊信息"
	},
	组队 = {
		"允许接收组队信息",
		"拒绝接收组队信息",
		localSave = true
	},
	战队 = {
		"允许接收战队信息",
		"拒绝接收战队信息",
		localSave = true
	},
	系统 = {}
}
common.getAllOpenChatChannel = function ()
	--- BLOCK #0 1-6, warpins: 1 ---
	local ret = {}

	--- END OF BLOCK #0 ---

	for k, v in pairs(common.allChatChannels)

	LOOP BLOCK #1
	GO OUT TO BLOCK #4


	--- BLOCK #1 7-12, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot6 = if common.getChatChannelIsOpen(k)

	 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 13-15, warpins: 1 ---
	ret[#ret + 1] = k

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 16-17, warpins: 3 ---
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #4 18-18, warpins: 1 ---
	return ret
	--- END OF BLOCK #4 ---



end
common.getChatChannelIsOpen = function (channel)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	if channel == "系统" then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-4, warpins: 1 ---
	return true

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 5-9, warpins: 2 ---
	local config = common.allChatChannels[channel]

	--- END OF BLOCK #2 ---

	slot1 = if not config then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 10-10, warpins: 1 ---
	return 
	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 11-13, warpins: 2 ---
	--- END OF BLOCK #4 ---

	slot2 = if config.localSave then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 14-19, warpins: 1 ---
	return g_data.setting.chat.opens[channel]

	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 20-34, warpins: 2 ---
	--- END OF BLOCK #6 ---

	if ycFunction:band(g_data.chat.shieldMask, ycFunction:lshift(1, config[1]))

	 ~= 0 then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 35-36, warpins: 1 ---
	slot2 = false
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #9


	--- BLOCK #8 37-37, warpins: 1 ---
	slot2 = true

	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 38-38, warpins: 2 ---
	return slot2
	--- END OF BLOCK #9 ---



end
common.setChatChannelIsOpen = function (channel, b, donotRefersh)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	if channel == "系统" then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-3, warpins: 1 ---
	return 

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 4-8, warpins: 2 ---
	local config = common.allChatChannels[channel]

	--- END OF BLOCK #2 ---

	slot3 = if not config then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 9-9, warpins: 1 ---
	return 

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 10-12, warpins: 2 ---
	--- END OF BLOCK #4 ---

	slot4 = if config.localSave then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #12
	end


	--- BLOCK #5 13-28, warpins: 1 ---
	g_data.setting.chat.opens[channel] = b

	cache.saveSetting(common.getPlayerName(), "chat")

	slot4 = common.addMsg
	--- END OF BLOCK #5 ---

	slot1 = if b then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 29-30, warpins: 1 ---
	slot5 = 1
	--- END OF BLOCK #6 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #7 31-31, warpins: 1 ---
	slot5 = 2
	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 32-34, warpins: 2 ---
	slot5 = config[slot5]
	--- END OF BLOCK #8 ---

	slot1 = if b then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #9 35-36, warpins: 1 ---
	slot6 = 219
	--- END OF BLOCK #9 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #11


	--- BLOCK #10 37-37, warpins: 1 ---
	slot6 = 249

	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 38-41, warpins: 2 ---
	slot4(slot5, slot6, 255, true)

	--- END OF BLOCK #11 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #25


	--- BLOCK #12 42-44, warpins: 1 ---
	local value = nil
	--- END OF BLOCK #12 ---

	slot1 = if b then
	JUMP TO BLOCK #13
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #13 45-55, warpins: 1 ---
	value = g_data.chat.shieldMask - ycFunction:lshift(1, config[1])
	--- END OF BLOCK #13 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #15


	--- BLOCK #14 56-65, warpins: 1 ---
	value = g_data.chat.shieldMask + ycFunction:lshift(1, config[1])

	--- END OF BLOCK #14 ---

	FLOW; TARGET BLOCK #15


	--- BLOCK #15 66-75, warpins: 2 ---
	g_data.chat:setShieldMask(value)

	slot5 = common.addMsg
	--- END OF BLOCK #15 ---

	slot1 = if b then
	JUMP TO BLOCK #16
	else
	JUMP TO BLOCK #17
	end


	--- BLOCK #16 76-77, warpins: 1 ---
	slot6 = 2
	--- END OF BLOCK #16 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #18


	--- BLOCK #17 78-78, warpins: 1 ---
	slot6 = 3
	--- END OF BLOCK #17 ---

	FLOW; TARGET BLOCK #18


	--- BLOCK #18 79-81, warpins: 2 ---
	slot6 = config[slot6]
	--- END OF BLOCK #18 ---

	slot1 = if b then
	JUMP TO BLOCK #19
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #19 82-83, warpins: 1 ---
	slot7 = 219
	--- END OF BLOCK #19 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #21


	--- BLOCK #20 84-84, warpins: 1 ---
	slot7 = 249

	--- END OF BLOCK #20 ---

	FLOW; TARGET BLOCK #21


	--- BLOCK #21 85-94, warpins: 2 ---
	slot5(slot6, slot7, 255, true)

	slot5 = net.send
	slot6 = {
		CM_SWITCH_LISTEN
	}
	--- END OF BLOCK #21 ---

	slot1 = if b then
	JUMP TO BLOCK #22
	else
	JUMP TO BLOCK #23
	end


	--- BLOCK #22 95-96, warpins: 1 ---
	slot7 = 0
	--- END OF BLOCK #22 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #24


	--- BLOCK #23 97-97, warpins: 1 ---
	slot7 = 1
	--- END OF BLOCK #23 ---

	FLOW; TARGET BLOCK #24


	--- BLOCK #24 98-101, warpins: 2 ---
	slot6.recog = slot7
	slot6.param = config[1]

	slot5(slot6)
	--- END OF BLOCK #24 ---

	FLOW; TARGET BLOCK #25


	--- BLOCK #25 102-105, warpins: 2 ---
	common.refershChatContent()

	return 
	--- END OF BLOCK #25 ---



end
common.refershChatContent = function ()
	--- BLOCK #0 1-14, warpins: 1 ---
	main_scene.ui.console:call("chat", "loadScroll")
	--- END OF BLOCK #0 ---

	slot0 = if main_scene.ui.panels.chat then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 15-21, warpins: 1 ---
	main_scene.ui.panels.chat:loadLeftContent()

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 22-22, warpins: 2 ---
	return 
	--- END OF BLOCK #2 ---



end
common.checkAmulet = function (force)
	--- BLOCK #0 1-7, warpins: 1 ---
	local state = g_data.equip:checkAmulet()

	--- END OF BLOCK #0 ---

	slot1 = if not state then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #1 8-16, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot2 = if g_data.client:checkLastTime("common.checkAmulet", 0.5)

	 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #2 17-25, warpins: 1 ---
	state = g_data.bag:equipAmulet(force)

	--- END OF BLOCK #2 ---

	slot1 = if state then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #3 26-33, warpins: 1 ---
	g_data.client:setLastTime("common.checkAmulet", true)

	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #5


	--- BLOCK #4 34-34, warpins: 1 ---
	state = true

	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 35-35, warpins: 4 ---
	return state
	--- END OF BLOCK #5 ---



end
common.gotoLogin = function (params)
	--- BLOCK #0 1-13, warpins: 1 ---
	net.close()
	game.gotoscene("login", params, "fade", 0.5, display.COLOR_BLACK)

	return 
	--- END OF BLOCK #0 ---



end
common.backHome = function ()
	--- BLOCK #0 1-9, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot0 = if g_data.client:checkLastTime("common.checkAmulet", 5)
	 then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 10-38, warpins: 1 ---
	g_data.client:setLastTime("common.checkAmulet", true)
	net.send({
		CM_CLICK_BACKHOME
	})
	main_scene.ui.console.autoRat:stop()
	main_scene.ui.console.controller.autoFindPath:multiMapPathStop()
	--- END OF BLOCK #1 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #3


	--- BLOCK #2 39-44, warpins: 1 ---
	main_scene.ui:tip("操作太快.")

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 45-45, warpins: 2 ---
	return 
	--- END OF BLOCK #3 ---



end

return common
--- END OF BLOCK #0 ---



