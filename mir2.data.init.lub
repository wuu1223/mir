--- BLOCK #0 1-134, warpins: 1 ---
print("gameData.init")

local gameData = {}
gameData.player = import(".player")
gameData.map = import(".map")
gameData.serverConfig = import(".serverConfig")
gameData.bag = import(".bag")
gameData.guild = import(".guild")
gameData.equip = import(".equip")
gameData.chat = import(".chat")
gameData.client = import(".client")
gameData.hero = import(".hero")
gameData.heroBag = import(".heroBag")
gameData.heroEquip = import(".heroEquip")
gameData.relation = import(".relation")
gameData.stall = import(".stall")
gameData.stallOther = import(".stallOther")
gameData.mail = import(".mail")
gameData.ybdeal = import(".ybdeal")
gameData.voice = import(".voice")
gameData.mark = import(".mark")
gameData.credit = import(".credit")
gameData.mixingDrug = import(".mixingDrug")
gameData.hotKey = import(".hotKey")
g_data = {}
g_data.login = import(".login")
g_data.select = import(".select")
g_data.setting = import(".setting")
g_data.bigmap = import(".bigmap")
g_data.security = import(".security")
g_data.shop = import(".shop")
g_data.reconnct = {}
g_data.cleanup = function ()
	--- BLOCK #0 1-4, warpins: 1 ---
	--- END OF BLOCK #0 ---

	for k, v in pairs(g_data)

	LOOP BLOCK #1
	GO OUT TO BLOCK #5


	--- BLOCK #1 5-9, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if type(v)
	 == "table" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #2 10-12, warpins: 1 ---
	--- END OF BLOCK #2 ---

	slot5 = if v.cleanup then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 13-15, warpins: 1 ---
	v.cleanup(v)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 16-17, warpins: 4 ---
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #5 18-18, warpins: 1 ---
	return 
	--- END OF BLOCK #5 ---



end
g_data.reset = function ()
	--- BLOCK #0 1-4, warpins: 1 ---
	--- END OF BLOCK #0 ---

	for k, v in pairs(gameData)


	LOOP BLOCK #1
	GO OUT TO BLOCK #3


	--- BLOCK #1 5-13, warpins: 1 ---
	gameData[k]._data_reset = function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		g_data[k] = clone(v)

		return 
		--- END OF BLOCK #0 ---



	end

	gameData[k]._data_reset()

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 14-15, warpins: 2 ---
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #3 16-16, warpins: 1 ---
	return 
	--- END OF BLOCK #3 ---



end

g_data.reset()

return 
--- END OF BLOCK #0 ---



