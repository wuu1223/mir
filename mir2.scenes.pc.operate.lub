--- BLOCK #0 1-45, warpins: 1 ---
local operate = {}
operate.init = function ()
	--- BLOCK #0 1-82, warpins: 1 ---
	operate.pressed = {}

	def.operate.init()

	local listener = cc.EventListenerKeyboard:create()

	listener.registerScriptHandler(listener, function (keyCode, evt)
		--- BLOCK #0 1-7, warpins: 1 ---
		table.insert(operate.pressed, keyCode)

		return 
		--- END OF BLOCK #0 ---



	end, cc.Handler.EVENT_KEYBOARD_PRESSED)
	listener.registerScriptHandler(listener, function (keyCode, evt)
		--- BLOCK #0 1-9, warpins: 1 ---
		local trigger = def.operate.isTrigger(keyCode, operate.pressed)

		--- END OF BLOCK #0 ---

		slot2 = if trigger then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #1 10-12, warpins: 1 ---
		--- END OF BLOCK #1 ---

		slot3 = if trigger.event then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 13-16, warpins: 1 ---
		operate.handlerKeybord(trigger)
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 17-21, warpins: 3 ---
		--- END OF BLOCK #3 ---

		for idx, _keycode in ipairs(operate.pressed)

		LOOP BLOCK #4
		GO OUT TO BLOCK #7


		--- BLOCK #4 22-23, warpins: 1 ---
		--- END OF BLOCK #4 ---

		if keyCode == _keycode then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 24-30, warpins: 1 ---
		table.remove(operate.pressed, idx)

		--- END OF BLOCK #5 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #7


		--- BLOCK #6 31-32, warpins: 2 ---
		--- END OF BLOCK #6 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #3


		--- BLOCK #7 33-33, warpins: 2 ---
		return 
		--- END OF BLOCK #7 ---



	end, cc.Handler.EVENT_KEYBOARD_RELEASED)
	cc.Director:getInstance():getEventDispatcher():addEventListenerWithFixedPriority(listener, 1)

	local _mouseListener = cc.EventListenerMouse:create()

	_mouseListener.registerScriptHandler(_mouseListener, function (evt)
		--- BLOCK #0 1-12, warpins: 1 ---
		local keyCode = evt.getMouseButton(evt)
		local trigger = def.operate.isTrigger(keyCode, operate.pressed)

		--- END OF BLOCK #0 ---

		slot2 = if trigger then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #1 13-15, warpins: 1 ---
		--- END OF BLOCK #1 ---

		slot3 = if trigger.event then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #2 16-22, warpins: 1 ---
		--- END OF BLOCK #2 ---

		slot3 = if operate[trigger.event .. "_begin"] then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 23-30, warpins: 1 ---
		operate[trigger.event .. "_begin"](trigger, evt)

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 31-31, warpins: 4 ---
		return 
		--- END OF BLOCK #4 ---



	end, cc.Handler.EVENT_MOUSE_DOWN)
	_mouseListener.registerScriptHandler(_mouseListener, function (evt)
		--- BLOCK #0 1-16, warpins: 1 ---
		operate.mouseMoveControl(evt)

		local keyCode = evt.getMouseButton(evt)
		local trigger = def.operate.isTrigger(keyCode, operate.pressed)

		--- END OF BLOCK #0 ---

		slot2 = if trigger then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #1 17-19, warpins: 1 ---
		--- END OF BLOCK #1 ---

		slot3 = if trigger.event then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #2 20-26, warpins: 1 ---
		--- END OF BLOCK #2 ---

		slot3 = if operate[trigger.event .. "_moved"] then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 27-34, warpins: 1 ---
		operate[trigger.event .. "_moved"](trigger, evt)

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 35-35, warpins: 4 ---
		return 
		--- END OF BLOCK #4 ---



	end, cc.Handler.EVENT_MOUSE_MOVE)
	_mouseListener.registerScriptHandler(_mouseListener, function (evt)
		--- BLOCK #0 1-12, warpins: 1 ---
		local keyCode = evt.getMouseButton(evt)
		local trigger = def.operate.isTrigger(keyCode, operate.pressed)

		--- END OF BLOCK #0 ---

		slot2 = if trigger then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #1 13-15, warpins: 1 ---
		--- END OF BLOCK #1 ---

		slot3 = if trigger.event then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #2 16-22, warpins: 1 ---
		--- END OF BLOCK #2 ---

		slot3 = if operate[trigger.event .. "_end"] then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 23-30, warpins: 1 ---
		operate[trigger.event .. "_end"](trigger, evt)

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 31-31, warpins: 4 ---
		return 
		--- END OF BLOCK #4 ---



	end, cc.Handler.EVENT_MOUSE_UP)
	cc.Director:getInstance():getEventDispatcher():addEventListenerWithFixedPriority(_mouseListener, 1)
	operate.hideUI()

	return 
	--- END OF BLOCK #0 ---



end
operate.hideUI = function ()
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot0 = if main_scene then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #1 4-12, warpins: 1 ---
	local rocker = main_scene.ui.console:get("rocker")

	--- END OF BLOCK #1 ---

	slot0 = if rocker then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 13-16, warpins: 1 ---
	rocker.setVisible(rocker, false)

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 17-25, warpins: 2 ---
	local lock = main_scene.ui.console:get("lock")

	--- END OF BLOCK #3 ---

	slot1 = if lock then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 26-29, warpins: 1 ---
	lock.setVisible(lock, false)

	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 30-30, warpins: 3 ---
	return 
	--- END OF BLOCK #5 ---



end
operate.handlerKeybord = function (info)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if info.keyType then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #22
	end


	--- BLOCK #1 4-6, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if info.keyType == "panel" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #2 7-9, warpins: 1 ---
	--- END OF BLOCK #2 ---

	slot1 = if main_scene then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #24
	end


	--- BLOCK #3 10-23, warpins: 1 ---
	sound.playSound("103")
	main_scene.ui.console.btnCallbacks:handle(info.keyType, info.name)
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #24


	--- BLOCK #4 24-26, warpins: 1 ---
	--- END OF BLOCK #4 ---

	if info.keyType == "skill" then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #5 27-29, warpins: 1 ---
	--- END OF BLOCK #5 ---

	slot1 = if info.params then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #24
	end


	--- BLOCK #6 30-33, warpins: 1 ---
	--- END OF BLOCK #6 ---

	slot1 = if info.params.magicId then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #24
	end


	--- BLOCK #7 34-39, warpins: 1 ---
	operate.useMagic(info.params.magicId)
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #24


	--- BLOCK #8 40-42, warpins: 1 ---
	--- END OF BLOCK #8 ---

	if info.keyType == "normal" then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #9 43-45, warpins: 1 ---
	--- END OF BLOCK #9 ---

	slot1 = if main_scene then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #24
	end


	--- BLOCK #10 46-55, warpins: 1 ---
	main_scene.ui.console.btnCallbacks:handle(info.keyType, info.name)
	--- END OF BLOCK #10 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #24


	--- BLOCK #11 56-58, warpins: 1 ---
	--- END OF BLOCK #11 ---

	if info.keyType == "base" then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #12 59-61, warpins: 1 ---
	--- END OF BLOCK #12 ---

	slot1 = if main_scene then
	JUMP TO BLOCK #13
	else
	JUMP TO BLOCK #24
	end


	--- BLOCK #13 62-71, warpins: 1 ---
	main_scene.ui.console.btnCallbacks:handle(info.keyType, info.name)
	--- END OF BLOCK #13 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #24


	--- BLOCK #14 72-74, warpins: 1 ---
	--- END OF BLOCK #14 ---

	if info.keyType == "setting" then
	JUMP TO BLOCK #15
	else
	JUMP TO BLOCK #17
	end


	--- BLOCK #15 75-77, warpins: 1 ---
	--- END OF BLOCK #15 ---

	slot1 = if main_scene then
	JUMP TO BLOCK #16
	else
	JUMP TO BLOCK #24
	end


	--- BLOCK #16 78-87, warpins: 1 ---
	main_scene.ui.console.btnCallbacks:handle(info.keyType, info.name)
	--- END OF BLOCK #16 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #24


	--- BLOCK #17 88-90, warpins: 1 ---
	--- END OF BLOCK #17 ---

	if info.keyType == "hero" then
	JUMP TO BLOCK #18
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #18 91-93, warpins: 1 ---
	--- END OF BLOCK #18 ---

	slot1 = if main_scene then
	JUMP TO BLOCK #19
	else
	JUMP TO BLOCK #24
	end


	--- BLOCK #19 94-103, warpins: 1 ---
	main_scene.ui.console.btnCallbacks:handle(info.keyType, info.name)
	--- END OF BLOCK #19 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #24


	--- BLOCK #20 104-108, warpins: 1 ---
	--- END OF BLOCK #20 ---

	slot1 = if operate[info.event] then
	JUMP TO BLOCK #21
	else
	JUMP TO BLOCK #24
	end


	--- BLOCK #21 109-114, warpins: 1 ---
	operate[info.event](info)
	--- END OF BLOCK #21 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #24


	--- BLOCK #22 115-119, warpins: 1 ---
	--- END OF BLOCK #22 ---

	slot1 = if operate[info.event] then
	JUMP TO BLOCK #23
	else
	JUMP TO BLOCK #24
	end


	--- BLOCK #23 120-124, warpins: 1 ---
	operate[info.event](info)

	--- END OF BLOCK #23 ---

	FLOW; TARGET BLOCK #24


	--- BLOCK #24 125-125, warpins: 17 ---
	return 
	--- END OF BLOCK #24 ---



end
operate.mouseMoveControl = function (evt)
	--- BLOCK #0 1-13, warpins: 1 ---
	operate.mouseX = evt.getCursorX(evt)
	operate.mouseY = evt.getCursorY(evt)
	--- END OF BLOCK #0 ---

	slot1 = if main_scene then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #1 14-27, warpins: 1 ---
	local lock = main_scene.ui.console.controller.lock
	local target = operate.getTouchMonTarget(operate.mouseX, operate.mouseY)
	--- END OF BLOCK #1 ---

	slot2 = if target then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #2 28-36, warpins: 1 ---
	local role = main_scene.ground.map:findRole(target)

	--- END OF BLOCK #2 ---

	slot3 = if role then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #3 37-39, warpins: 1 ---
	--- END OF BLOCK #3 ---

	slot4 = if not role.isPlayer then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #4 40-44, warpins: 1 ---
	--- END OF BLOCK #4 ---

	if lock.target.select ~= role.roleid then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #5 45-49, warpins: 1 ---
	lock.setSelectTarget(lock, role)
	--- END OF BLOCK #5 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #6 50-53, warpins: 1 ---
	--- END OF BLOCK #6 ---

	slot3 = if not lock.target.attack then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 54-56, warpins: 1 ---
	lock.stop(lock)

	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 57-57, warpins: 7 ---
	return 
	--- END OF BLOCK #8 ---



end
operate.getTouchMonTarget = function (eventX, eventY)
	--- BLOCK #0 1-5, warpins: 1 ---
	local map = main_scene.ground.map
	--- END OF BLOCK #0 ---

	slot2 = if map then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #1 6-8, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot3 = if map.player then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #2 9-34, warpins: 1 ---
	local x, y = map.getMapPosWithScreenPos(map, eventX, eventY)
	local roles = {}

	table.merge(roles, map.mons)

	local roles = main_scene.ui.console.controller:sortRoles(table.values(roles))

	--- END OF BLOCK #2 ---

	for i, v in ipairs(roles)

	LOOP BLOCK #3
	GO OUT TO BLOCK #7


	--- BLOCK #3 35-47, warpins: 1 ---
	--- END OF BLOCK #3 ---

	slot12 = if cc.rectContainsPoint(v.getBoundingBox(v), cc.p(x, y))

	 then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #4 48-50, warpins: 1 ---
	--- END OF BLOCK #4 ---

	slot12 = if not v.die then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 51-52, warpins: 1 ---
	return v.roleid
	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 53-54, warpins: 4 ---
	--- END OF BLOCK #6 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #2


	--- BLOCK #7 55-55, warpins: 3 ---
	return 
	--- END OF BLOCK #7 ---



end
operate.useMagic = function (magicId)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if main_scene then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #1 4-31, warpins: 1 ---
	local lock = main_scene.ui.console.controller.lock
	local map = main_scene.ground.map
	local magic_data = g_data.player:getMagic(magicId)

	main_scene.ui.console.btnCallbacks:handle("skill", magicId, magic_data)

	--- END OF BLOCK #1 ---

	slot4 = if lock.skill.enable then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #2 32-35, warpins: 1 ---
	--- END OF BLOCK #2 ---

	slot4 = if lock.target.select then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #3 36-51, warpins: 1 ---
	local role = map.findRole(map, lock.target.select)

	--- END OF BLOCK #3 ---

	slot5 = if checkExist("lock", lock.skill.config.type, lock.skill.config.first)
	 then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 52-55, warpins: 1 ---
	lock.setSkillTarget(lock, role)
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 56-65, warpins: 2 ---
	main_scene.ui.console.controller:useMagic(role.x, role.y)

	--- END OF BLOCK #5 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #6 66-67, warpins: 1 ---
	--- END OF BLOCK #6 ---

	slot2 = if map then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 68-86, warpins: 1 ---
	local x, y = map.getMapPosWithScreenPos(map, operate.mouseX, operate.mouseY)

	main_scene.ui.console.controller:useMagic(map.getGamePos(map, x, y))

	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 87-87, warpins: 5 ---
	return 
	--- END OF BLOCK #8 ---



end
operate.onMouseLeft_begin = function (info, evt)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if main_scene then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #1 4-8, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot2 = if not operate.isCanTouch()

	 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 9-9, warpins: 1 ---
	return 

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 10-32, warpins: 2 ---
	local x = evt.getCursorX(evt)
	local y = evt.getCursorY(evt)
	main_scene.ui.console.controller.move.step = 1

	main_scene.ui.console.controller:handleTouch({
		name = "began",
		x = x,
		y = y
	})

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 33-33, warpins: 2 ---
	return 
	--- END OF BLOCK #4 ---



end
operate.onMouseLeft_moved = function (info, evt)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if main_scene then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #1 4-17, warpins: 1 ---
	local x = evt.getCursorX(evt)
	local y = evt.getCursorY(evt)
	local controller = main_scene.ui.console.controller

	--- END OF BLOCK #1 ---

	slot5 = if not controller.move.step then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 18-18, warpins: 1 ---
	return 

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 19-23, warpins: 2 ---
	--- END OF BLOCK #3 ---

	slot5 = if not operate.isCanTouch()

	 then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 24-24, warpins: 1 ---
	return 

	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 25-33, warpins: 2 ---
	controller.move.step = 1

	controller.handleTouch(controller, {
		name = "moved",
		x = x,
		y = y
	})

	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 34-34, warpins: 2 ---
	return 
	--- END OF BLOCK #6 ---



end
operate.onMouseLeft_end = function (info, evt)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if main_scene then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #1 4-10, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot2 = if not main_scene.ui.console.controller.touchGround then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 11-11, warpins: 1 ---
	return 

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 12-40, warpins: 2 ---
	local x = evt.getCursorX(evt)
	local y = evt.getCursorY(evt)

	main_scene.ui.console.controller:handleTouch({
		name = "ended",
		x = x,
		y = y
	})

	main_scene.ui.console.controller.move.step = nil
	main_scene.ui.console.controller.touchGround = nil

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 41-41, warpins: 2 ---
	return 
	--- END OF BLOCK #4 ---



end
operate.onMouseRight_begin = function (info, evt)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if main_scene then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-26, warpins: 1 ---
	local x = evt.getCursorX(evt)
	local y = evt.getCursorY(evt)
	main_scene.ui.console.controller.move.step = 2

	main_scene.ui.console.controller:handleTouch({
		name = "began",
		x = x,
		y = y
	})

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 27-27, warpins: 2 ---
	return 
	--- END OF BLOCK #2 ---



end
operate.onMouseRight_moved = function (info, evt)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if main_scene then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #1 4-17, warpins: 1 ---
	local x = evt.getCursorX(evt)
	local y = evt.getCursorY(evt)
	local controller = main_scene.ui.console.controller

	--- END OF BLOCK #1 ---

	slot5 = if not controller.move.step then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 18-18, warpins: 1 ---
	return 

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 19-27, warpins: 2 ---
	controller.move.step = 2

	controller.handleTouch(controller, {
		name = "moved",
		x = x,
		y = y
	})

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 28-28, warpins: 2 ---
	return 
	--- END OF BLOCK #4 ---



end
operate.onMouseRight_end = function (info, evt)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if main_scene then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-32, warpins: 1 ---
	local x = evt.getCursorX(evt)
	local y = evt.getCursorY(evt)

	main_scene.ui.console.controller:handleTouch({
		name = "ended",
		x = x,
		y = y
	})

	main_scene.ui.console.controller.move.step = nil
	main_scene.ui.console.controller.touchGround = nil

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 33-33, warpins: 2 ---
	return 
	--- END OF BLOCK #2 ---



end
operate.onMouseLeft_SF_begin = function (info, evt)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if main_scene then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #1 4-8, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot2 = if not operate.isCanTouch()

	 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 9-9, warpins: 1 ---
	return 

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 10-57, warpins: 2 ---
	main_scene.ui.console.controller.openShift = true
	local map = main_scene.ground.map
	local player = main_scene.ground.player
	local x, y = map.getMapPosWithScreenPos(map, evt.getCursorX(evt), evt.getCursorY(evt))
	local gameX, gameY = map.getGamePos(map, x, y)
	local dir = def.role.getMoveDir(player.x, player.y, gameX, gameY)

	main_scene.ui.console.controller:forceAttackTest(dir)

	main_scene.ui.console.controller.openShift = false

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 58-58, warpins: 2 ---
	return 
	--- END OF BLOCK #4 ---



end
operate.onMouseLeft_Alt_begin = function (info, evt)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if main_scene then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #1 4-8, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot2 = if not operate.isCanTouch()

	 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 9-9, warpins: 1 ---
	return 

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 10-46, warpins: 2 ---
	main_scene.ui.console.controller.autoWa = true
	local map = main_scene.ground.map
	local player = main_scene.ground.player
	local x, y = map.getMapPosWithScreenPos(map, evt.getCursorX(evt), evt.getCursorY(evt))
	local gameX, gameY = map.getGamePos(map, x, y)
	local dir = def.role.getMoveDir(player.x, player.y, gameX, gameY)

	--- END OF BLOCK #3 ---

	if dir ~= player.dir then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 47-66, warpins: 1 ---
	net.send({
		CM_TURN,
		recog = player.x,
		param = player.y,
		series = dir
	})
	player.addAct(player, {
		type = "stand",
		dir = dir,
		x = player.x,
		y = player.y
	})

	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 67-67, warpins: 3 ---
	return 
	--- END OF BLOCK #5 ---



end
operate.onMouseLeft_Alt_end = function (info, evt)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if main_scene then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #1 4-8, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot2 = if not operate.isCanTouch()

	 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 9-9, warpins: 1 ---
	return 

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 10-15, warpins: 2 ---
	main_scene.ui.console.controller.autoWa = false

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 16-16, warpins: 2 ---
	return 
	--- END OF BLOCK #4 ---



end
operate.isCanTouch = function ()
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot0 = if main_scene then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #1 4-10, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot0 = if main_scene.ui.console.controller.touchGround then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 11-12, warpins: 1 ---
	return true
	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 13-14, warpins: 3 ---
	return false
	--- END OF BLOCK #3 ---



end
operate.onMouseRight_ctrl_begin = function (info)
	--- BLOCK #0 1-1, warpins: 1 ---
	return 
	--- END OF BLOCK #0 ---



end
operate.onKeybord_A = function (info)
	--- BLOCK #0 1-4, warpins: 1 ---
	print("-------------onKeybord_A------------")

	return 
	--- END OF BLOCK #0 ---



end
operate.onKeybord_B = function (info)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if main_scene then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-16, warpins: 1 ---
	sound.playSound("103")
	main_scene.ui.console.btnCallbacks:handle("panel", "bag")

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 17-17, warpins: 2 ---
	return 
	--- END OF BLOCK #2 ---



end
operate.onKeybord_C = function (info)
	--- BLOCK #0 1-4, warpins: 1 ---
	print("-------------onKeybord_C------------")

	return 
	--- END OF BLOCK #0 ---



end
operate.onKeybord_SF_A = function (info)
	--- BLOCK #0 1-4, warpins: 1 ---
	print("-------------onKeybord_SF_A------------")

	return 
	--- END OF BLOCK #0 ---



end

return operate
--- END OF BLOCK #0 ---



