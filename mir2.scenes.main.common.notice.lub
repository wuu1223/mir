--- BLOCK #0 1-30, warpins: 1 ---
local notice = class("notice", function ()
	--- BLOCK #0 1-3, warpins: 1 ---
	return display.newNode()
	--- END OF BLOCK #0 ---



end)
local common = import(".common")

table.merge(notice, {})

notice.ctor = function (self)
	--- BLOCK #0 1-131, warpins: 1 ---
	local w = 66
	local h = 66

	self.size(self, w*2, h)
	self.pos(self, 50, display.height - 50 - h)

	self.mails = nil
	self.msgs = {}
	self.maxLine = 10
	self.btn_mail = an.newBtn(res.gettex2("pic/console/notice/mail.png"), function ()
		--- BLOCK #0 1-18, warpins: 1 ---
		self.mails = nil

		self:checkShow()
		main_scene.ui:showPanel("mail", {
			tag = self.mailTag
		})

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressBig = true
	}):addTo(self, 1):pos(w/2, h/2):anchor(0.5, 0.5)
	local numbg = res.get2("pic/console/notice/num.png"):addTo(self.btn_mail):pos(self.btn_mail:getw() + 7, self.btn_mail:geth() + 9):anchor(1, 1)
	self.btn_mail.num = an.newLabel("", 16, 1):addTo(numbg):pos(numbg.getw(numbg)/2, numbg.geth(numbg)/2):anchor(0.5, 0.5)
	self.btn_msgs = an.newBtn(res.gettex2("pic/console/notice/icon.png"), function ()
		--- BLOCK #0 1-6, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if 0 < #self.msgs then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #1 7-7, warpins: 1 ---
		local msg = nil
		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 8-8, warpins: 2 ---
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 9-13, warpins: 1 ---
		msg = self.msgs[1]

		--- END OF BLOCK #3 ---

		slot0 = if msg then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #4 14-24, warpins: 1 ---
		table.remove(self.msgs, 1)
		--- END OF BLOCK #4 ---

		if type(msg.fun)
		 == "function" then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 25-31, warpins: 1 ---
		msg.fun()
		self:checkShow()

		return 

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 32-33, warpins: 3 ---
		--- END OF BLOCK #6 ---

		slot0 = if not msg then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #7 34-37, warpins: 1 ---
		self:checkShow()

		--- END OF BLOCK #7 ---

		FLOW; TARGET BLOCK #8


		--- BLOCK #8 38-38, warpins: 2 ---
		return 
		--- END OF BLOCK #8 ---



	end, {
		pressBig = true
	}):addTo(self, 1):pos(w/2*3, h/2):anchor(0.5, 0.5)

	self.checkShow(self)

	return 
	--- END OF BLOCK #0 ---



end
notice.checkShow = function (self)
	--- BLOCK #0 1-8, warpins: 1 ---
	local w = 66
	local h = 66
	local show = false

	--- END OF BLOCK #0 ---

	if 0 < #self.msgs then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 9-20, warpins: 1 ---
	self.btn_msgs:show()
	self.btn_msgs:pos(w/2, h/2)

	show = true

	--- END OF BLOCK #1 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #3


	--- BLOCK #2 21-24, warpins: 1 ---
	self.btn_msgs:hide()
	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 25-27, warpins: 2 ---
	--- END OF BLOCK #3 ---

	slot4 = if self.mails then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 28-46, warpins: 1 ---
	self.btn_mail:show()
	self.btn_mail:pos(w/2, h/2)
	self.btn_msgs:pos(w/2*3, h/2)

	show = true

	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #6


	--- BLOCK #5 47-50, warpins: 1 ---
	self.btn_mail:hide()
	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 51-52, warpins: 2 ---
	--- END OF BLOCK #6 ---

	slot3 = if show then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 53-56, warpins: 1 ---
	self.show(self)
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #9


	--- BLOCK #8 57-59, warpins: 1 ---
	self.hide(self)

	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 60-60, warpins: 2 ---
	return 
	--- END OF BLOCK #9 ---



end
notice.uptMailCnt = function (self, cnt, tag)
	--- BLOCK #0 1-14, warpins: 1 ---
	self.mails = cnt
	self.mailTag = tag

	self.btn_mail.num:setString(self.mails .. "")
	self.checkShow(self)

	return 
	--- END OF BLOCK #0 ---



end
notice.removeMailCnt = function (self)
	--- BLOCK #0 1-6, warpins: 1 ---
	self.mails = nil

	self.checkShow(self)

	return 
	--- END OF BLOCK #0 ---



end
notice.addMsg = function (self, funName, msg)
	--- BLOCK #0 1-16, warpins: 1 ---
	self.msgs[#self.msgs + 1] = self["add" .. funName](self, msg)

	self.checkShow(self)

	return 
	--- END OF BLOCK #0 ---



end
notice.removeMsg = function (self, funName, msg)
	--- BLOCK #0 1-4, warpins: 1 ---
	--- END OF BLOCK #0 ---

	for i, v in ipairs(self.msgs)

	LOOP BLOCK #1
	GO OUT TO BLOCK #4


	--- BLOCK #1 5-14, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot8 = if self["remove" .. funName](self, v, msg)
	 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 15-19, warpins: 1 ---
	table.remove(self.msgs, i)
	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 20-21, warpins: 3 ---
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #4 22-25, warpins: 1 ---
	self.checkShow(self)

	return 
	--- END OF BLOCK #4 ---



end
notice.addFriendApply = function (self, msg)
	--- BLOCK #0 1-9, warpins: 1 ---
	local function fun()
		--- BLOCK #0 1-19, warpins: 1 ---
		local info = {
			[0] = " 邀请您加入队伍！",
			" 请求加入您的队伍！",
			" 请求添加您为好友，是否同意？"
		}
		local name = msg[1]
		local cmd = info[msg[2]]

		local function reply(idx)
			--- BLOCK #0 1-16, warpins: 1 ---
			net.send({
				CM_ReplyGroupMessage,
				recog = idx - 1,
				param = msg[2]
			}, {
				msg[1]
			})

			return 
			--- END OF BLOCK #0 ---



		end

		local msgbox = an.newMsgbox(name .. cmd, function (idx)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if idx == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-6, warpins: 1 ---
			reply(2)
			--- END OF BLOCK #1 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #3


			--- BLOCK #2 7-9, warpins: 1 ---
			reply(1)

			--- END OF BLOCK #2 ---

			FLOW; TARGET BLOCK #3


			--- BLOCK #3 10-10, warpins: 2 ---
			return 
			--- END OF BLOCK #3 ---



		end, {
			manualRemoved = true,
			btnTexts = {
				"同  意",
				"拒  绝"
			}
		})

		return 
		--- END OF BLOCK #0 ---



	end

	return {
		fun = fun,
		name = msg[1],
		cmd = msg[2]
	}
	--- END OF BLOCK #0 ---



end
notice.removeFriendApply = function (self, listMsg, msg)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot3 = if listMsg.name then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #1 4-7, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if listMsg.name == msg[1] then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #2 8-10, warpins: 1 ---
	--- END OF BLOCK #2 ---

	slot3 = if listMsg.cmd then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #3 11-14, warpins: 1 ---
	--- END OF BLOCK #3 ---

	if listMsg.cmd == msg[2] then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 15-16, warpins: 1 ---
	return true
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 17-18, warpins: 5 ---
	return false
	--- END OF BLOCK #5 ---



end

return notice
--- END OF BLOCK #0 ---



