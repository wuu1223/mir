--- BLOCK #0 1-40, warpins: 1 ---
local item = import("..common.item")
local deal = class("deal", function ()
	--- BLOCK #0 1-3, warpins: 1 ---
	return display.newNode()
	--- END OF BLOCK #0 ---



end)

table.merge(deal, {
	targetLayer,
	targetMoney,
	targetItems,
	selfLayer,
	selfMoney,
	selfItems
})

deal.ctor = function (self, targetName)
	--- BLOCK #0 1-232, warpins: 1 ---
	local offsety = 35
	self.selfLayer = res.get2("pic/panels/deal/bg.png"):anchor(0, 0):add2(self)
	self.targetLayer = res.get2("pic/panels/deal/bg.png"):anchor(0, 0):add2(self):pos(0, self.selfLayer:geth() + offsety)

	self.size(self, self.selfLayer:getw(), self.selfLayer:geth() + self.targetLayer:geth() + offsety):anchor(1, 1):pos(display.width - 90, display.height - 40)
	an.newBtn(res.gettex2("pic/common/close10.png"), function ()
		--- BLOCK #0 1-10, warpins: 1 ---
		sound.playSound("103")
		--- END OF BLOCK #0 ---

		slot0 = if g_data.client.lastTime.deal then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 11-21, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if 4 < socket.gettime()
		 - g_data.client.lastTime.deal then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 22-27, warpins: 2 ---
		net.send({
			CM_DEALCANCEL
		})

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 28-28, warpins: 2 ---
		return 
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/close11.png")
	}):anchor(0.5, 0.5):pos(256, 196):addto(self.selfLayer)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-10, warpins: 1 ---
		sound.playSound("103")
		--- END OF BLOCK #0 ---

		slot0 = if g_data.client.lastTime.deal then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 11-21, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if 4 < socket.gettime()
		 - g_data.client.lastTime.deal then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 22-27, warpins: 2 ---
		net.send({
			CM_DEALEND
		})

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 28-28, warpins: 2 ---
		return 
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/deal/jy.png")
	}):pos(216, 34):scale(0.85):addto(self.selfLayer)
	an.newLabel(targetName, 18, 1):anchor(0.5, 1):pos(self.getw(self)/2 - 5, self.geth(self) - 12):add2(self)
	an.newLabel(main_scene.ground.player.info:getName(), 18, 1):anchor(0.5, 1):pos(self.getw(self)/2 - 5, self.selfLayer:geth() - 12):add2(self)

	self.selfMoney = an.newLabel("0", 16, 1):pos(84, 22):add2(self)
	self.targetMoney = an.newLabel("0", 16, 1):pos(84, self.selfLayer:geth() + 22 + offsety):add2(self)
	self.selfItems = {}
	self.targetItems = {}

	return 
	--- END OF BLOCK #0 ---



end
deal.idx2pos = function (self, idx)
	--- BLOCK #0 1-20, warpins: 1 ---
	idx = math.min(idx - 1, 9)
	local h = idx%5
	local v = math.modf(idx/5)

	return h*item.w + 44, v*item.h - 140
	--- END OF BLOCK #0 ---



end
deal.setMoney = function (self, who, money)
	--- BLOCK #0 1-7, warpins: 1 ---
	sound.playSound(sound.s_money)
	--- END OF BLOCK #0 ---

	if who == "self" then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 8-15, warpins: 1 ---
	self.selfMoney:setString(change2GoldStyle(money))
	--- END OF BLOCK #1 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #3


	--- BLOCK #2 16-22, warpins: 1 ---
	self.targetMoney:setString(change2GoldStyle(money))

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 23-23, warpins: 2 ---
	return 
	--- END OF BLOCK #3 ---



end
deal.addItem = function (self, who, data)
	--- BLOCK #0 1-7, warpins: 1 ---
	sound.play("item", data)

	--- END OF BLOCK #0 ---

	if who == "self" then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 8-31, warpins: 1 ---
	local idx = #self.selfItems + 1
	self.selfItems[idx] = item.new(data, self, {
		idx = idx
	}):addto(self.selfLayer):pos(self.idx2pos(self, idx))
	--- END OF BLOCK #1 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #3


	--- BLOCK #2 32-54, warpins: 1 ---
	local idx = #self.targetItems + 1
	self.targetItems[idx] = item.new(data, self, {
		idx = idx
	}):addto(self.targetLayer):pos(self.idx2pos(self, idx))

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 55-55, warpins: 2 ---
	return 
	--- END OF BLOCK #3 ---



end
deal.itemsBack2bag = function (self)
	--- BLOCK #0 1-5, warpins: 1 ---
	local makeIndexs = {}

	--- END OF BLOCK #0 ---

	for i, v in ipairs(self.bagItemDatas)

	LOOP BLOCK #1
	GO OUT TO BLOCK #3


	--- BLOCK #1 6-18, warpins: 1 ---
	g_data.bag:addItem(v)

	makeIndexs[#makeIndexs + 1] = v.get(v, "makeIndex")

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 19-20, warpins: 2 ---
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #3 21-26, warpins: 1 ---
	--- END OF BLOCK #3 ---

	slot2 = if main_scene.ui.panels.bag then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #4 27-30, warpins: 1 ---
	--- END OF BLOCK #4 ---

	for i, v in ipairs(makeIndexs)

	LOOP BLOCK #5
	GO OUT TO BLOCK #7


	--- BLOCK #5 31-38, warpins: 1 ---
	main_scene.ui.panels.bag:addItem(v)

	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 39-40, warpins: 2 ---
	--- END OF BLOCK #6 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #7 41-41, warpins: 2 ---
	return 
	--- END OF BLOCK #7 ---



end
deal.putItem = function (self, item, x, y)
	--- BLOCK #0 1-4, warpins: 1 ---
	local form = item.formPanel.__cname

	--- END OF BLOCK #0 ---

	if form == "bag" then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #1 5-9, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot5 = if g_data.client.dealItem then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 10-16, warpins: 1 ---
	an.newMsgbox("放入失败， 当前网络慢， 请重试！", nil, {
		center = true
	})

	return 

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 17-25, warpins: 2 ---
	--- END OF BLOCK #3 ---

	slot5 = if g_data.client:checkLastTime("deal", 4)

	 then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 26-72, warpins: 1 ---
	local data = item.data

	g_data.client:setNowDealItem(data)
	g_data.bag:delItem(data.get(data, "makeIndex"))
	item.formPanel:delItem(data.get(data, "makeIndex"))
	g_data.client:setLastTime("deal", true)
	net.send({
		CM_DEALADDITEM,
		recog = data.get(data, "makeIndex")
	}, {
		data.getVar("name")
	})

	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 73-73, warpins: 3 ---
	return 
	--- END OF BLOCK #5 ---



end
deal.putGold = function (self, item)
	--- BLOCK #0 1-4, warpins: 1 ---
	local form = item.formPanel.__cname

	--- END OF BLOCK #0 ---

	if form == "bag" then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 5-18, warpins: 1 ---
	sound.playSound(sound.s_money)

	local msgbox = nil
	msgbox = an.newMsgbox("\n请输入金币数量\n", function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if msgbox.input:getString()

		 == "" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-17, warpins: 2 ---
		local gold = tonumber(msgbox.input:getString())

		--- END OF BLOCK #2 ---

		slot0 = if gold then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 18-20, warpins: 1 ---
		--- END OF BLOCK #3 ---

		if gold < 1 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 21-21, warpins: 2 ---
		return 

		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 22-27, warpins: 2 ---
		--- END OF BLOCK #5 ---

		slot1 = if g_data.client.lastTime.deal then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #6 28-38, warpins: 1 ---
		--- END OF BLOCK #6 ---

		if 4 < socket.gettime()
		 - g_data.client.lastTime.deal then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 39-46, warpins: 2 ---
		net.send({
			CM_DEALCHGGOLD,
			recog = gold
		})
		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #9


		--- BLOCK #8 47-52, warpins: 1 ---
		an.newMsgbox("网络异常, 请重试", nil, {
			center = true
		})

		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 53-53, warpins: 2 ---
		return 
		--- END OF BLOCK #9 ---



	end, {
		disableScroll = true,
		input = 20
	})

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 19-19, warpins: 2 ---
	return 
	--- END OF BLOCK #2 ---



end

return deal
--- END OF BLOCK #0 ---



