--- BLOCK #0 1-5, warpins: 1 ---
local info = {}
info.show = function (data, scenePos, params)
	--- BLOCK #0 1-5, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot3 = if g_data.player.showTips then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 6-6, warpins: 1 ---
	return 

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 7-12, warpins: 1 ---
	g_data.player.showTips = true
	--- END OF BLOCK #2 ---

	slot2 = if not params then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 13-13, warpins: 1 ---
	params = {}
	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 14-28, warpins: 2 ---
	slot4 = display.newNode():size(display.width, display.height)
	slot3 = display.newNode().size(display.width, display.height).addto
	--- END OF BLOCK #4 ---

	slot5 = if not params.parent then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 29-30, warpins: 1 ---
	slot5 = main_scene.ui
	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 31-33, warpins: 2 ---
	--- END OF BLOCK #6 ---

	slot6 = if not params.z then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 34-37, warpins: 1 ---
	slot6 = main_scene.ui.z.textInfo
	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 38-56, warpins: 2 ---
	local layer = slot3(slot4, slot5, slot6)

	layer.setTouchEnabled(layer, true)
	layer.setTouchSwallowEnabled(layer, false)
	layer.addNodeEventListener(layer, cc.NODE_TOUCH_CAPTURE_EVENT, function (event)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if event.name == "ended" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-26, warpins: 1 ---
		g_data.player.showTips = false

		layer:runs({
			cc.DelayTime:create(0.01),
			cc.RemoveSelf:create(true)
		})

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 27-28, warpins: 2 ---
		return true
		--- END OF BLOCK #2 ---



	end)

	local playerorhero = nil
	--- END OF BLOCK #8 ---

	if params.from ~= "heroBag" then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #9 57-59, warpins: 1 ---
	--- END OF BLOCK #9 ---

	if params.from == "heroEquip" then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #10 60-62, warpins: 2 ---
	playerorhero = g_data.hero
	--- END OF BLOCK #10 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #15


	--- BLOCK #11 63-65, warpins: 1 ---
	--- END OF BLOCK #11 ---

	if params.from ~= "bag" then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #13
	end


	--- BLOCK #12 66-68, warpins: 1 ---
	--- END OF BLOCK #12 ---

	if params.from == "equip" then
	JUMP TO BLOCK #13
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #13 69-71, warpins: 2 ---
	playerorhero = g_data.player
	--- END OF BLOCK #13 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #15


	--- BLOCK #14 72-73, warpins: 1 ---
	playerorhero = g_data.player
	--- END OF BLOCK #14 ---

	FLOW; TARGET BLOCK #15


	--- BLOCK #15 74-78, warpins: 3 ---
	local getData, getDataStd = nil
	local double = 1

	--- END OF BLOCK #15 ---

	slot8 = if params.onlyStdItem then
	JUMP TO BLOCK #16
	else
	JUMP TO BLOCK #17
	end


	--- BLOCK #16 79-81, warpins: 1 ---
	function getData(k)
		--- BLOCK #0 1-4, warpins: 1 ---
		return data.getVar(k)
		--- END OF BLOCK #0 ---



	end

	getDataStd = getData

	--- END OF BLOCK #16 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #20


	--- BLOCK #17 82-86, warpins: 1 ---
	function getData(k)
		--- BLOCK #0 1-4, warpins: 1 ---
		return data.getVar(k)
		--- END OF BLOCK #0 ---



	end

	function getDataStd(k)
		--- BLOCK #0 1-7, warpins: 1 ---
		return data.getStd():get(k)
		--- END OF BLOCK #0 ---



	end

	--- END OF BLOCK #17 ---

	slot8 = if data.isPileUp then
	JUMP TO BLOCK #18
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #18 87-90, warpins: 1 ---
	--- END OF BLOCK #18 ---

	slot8 = if data.isPileUp()

	 then
	JUMP TO BLOCK #19
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #19 91-95, warpins: 1 ---
	double = data.get(data, "dura")

	--- END OF BLOCK #19 ---

	FLOW; TARGET BLOCK #20


	--- BLOCK #20 96-156, warpins: 4 ---
	function isBind()
		--- BLOCK #0 1-5, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if getData("normalStateSet")
		 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #1 6-15, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if ycFunction:band(getData("normalStateSet"), 2)

		 == 0 then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 16-17, warpins: 1 ---
		slot0 = false
		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #3 18-18, warpins: 1 ---
		slot0 = true

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 19-20, warpins: 2 ---
		return slot0

		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #17


		--- BLOCK #5 21-25, warpins: 1 ---
		--- END OF BLOCK #5 ---

		if getData("stdMode")
		 == 2 then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #12
		end


		--- BLOCK #6 26-30, warpins: 1 ---
		--- END OF BLOCK #6 ---

		if getData("shape")
		 ~= 10 then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #7 31-35, warpins: 1 ---
		--- END OF BLOCK #7 ---

		if getData("shape")
		 ~= 23 then
		JUMP TO BLOCK #8
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #8 36-40, warpins: 1 ---
		--- END OF BLOCK #8 ---

		if getData("shape")

		 ~= 31 then
		JUMP TO BLOCK #9
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #9 41-42, warpins: 1 ---
		slot0 = false
		--- END OF BLOCK #9 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #11


		--- BLOCK #10 43-43, warpins: 3 ---
		slot0 = true

		--- END OF BLOCK #10 ---

		FLOW; TARGET BLOCK #11


		--- BLOCK #11 44-45, warpins: 2 ---
		return slot0

		--- END OF BLOCK #11 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #17


		--- BLOCK #12 46-50, warpins: 1 ---
		--- END OF BLOCK #12 ---

		if getData("stdMode")
		 == 3 then
		JUMP TO BLOCK #13
		else
		JUMP TO BLOCK #17
		end


		--- BLOCK #13 51-55, warpins: 1 ---
		--- END OF BLOCK #13 ---

		if getData("shape")

		 ~= 30 then
		JUMP TO BLOCK #14
		else
		JUMP TO BLOCK #15
		end


		--- BLOCK #14 56-57, warpins: 1 ---
		slot0 = false
		--- END OF BLOCK #14 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #16


		--- BLOCK #15 58-58, warpins: 1 ---
		slot0 = true

		--- END OF BLOCK #15 ---

		FLOW; TARGET BLOCK #16


		--- BLOCK #16 59-59, warpins: 2 ---
		return slot0
		--- END OF BLOCK #16 ---

		FLOW; TARGET BLOCK #17


		--- BLOCK #17 60-60, warpins: 4 ---
		return 
		--- END OF BLOCK #17 ---



	end

	function isGift()
		--- BLOCK #0 1-5, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if getData("VTGiftProp")
		 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #1 6-10, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if getData("VTGiftProp")

		 == 0 then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 11-12, warpins: 1 ---
		slot0 = false
		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #3 13-13, warpins: 1 ---
		slot0 = true

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 14-14, warpins: 2 ---
		return slot0
		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 15-15, warpins: 2 ---
		return 
		--- END OF BLOCK #5 ---



	end

	function isUpgrade()
		--- BLOCK #0 1-5, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if getData("normalStateSet")
		 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #1 6-15, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if ycFunction:band(getData("normalStateSet"), 1)

		 == 0 then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 16-17, warpins: 1 ---
		slot0 = false
		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #3 18-18, warpins: 1 ---
		slot0 = true

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 19-19, warpins: 2 ---
		return slot0
		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 20-20, warpins: 2 ---
		return 
		--- END OF BLOCK #5 ---



	end

	function getExternText()
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if isBind()

		 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #1 5-14, warpins: 1 ---
		local itemName = getData("name")

		--- END OF BLOCK #1 ---

		slot1 = if string.find(itemName, "(Ôù)")

		 then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 15-17, warpins: 1 ---
		return ""

		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #8


		--- BLOCK #3 18-21, warpins: 1 ---
		--- END OF BLOCK #3 ---

		slot1 = if isGift()

		 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 22-24, warpins: 1 ---
		return "(Ôù)"
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #8


		--- BLOCK #5 25-27, warpins: 1 ---
		return "(°ó)"

		--- END OF BLOCK #5 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #8


		--- BLOCK #6 28-31, warpins: 1 ---
		--- END OF BLOCK #6 ---

		slot0 = if isGift()

		 then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 32-33, warpins: 1 ---
		return "(Ôù)"
		--- END OF BLOCK #7 ---

		FLOW; TARGET BLOCK #8


		--- BLOCK #8 34-35, warpins: 5 ---
		return ""
		--- END OF BLOCK #8 ---



	end

	local labels = {}
	labels[1] = an.newLabel(getData("name") .. getExternText(), 20, 1, {
		color = cc.c3b(255, 255, 0)
	})
	labels[MULTRES] = an.newLabel("ÖØÁ¿: " .. getData("weight")*double, 20, 1)
	local btns = {}

	function add(text, color)
		--- BLOCK #0 1-2, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if not text then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 3-3, warpins: 1 ---
		text = ""
		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 4-17, warpins: 2 ---
		labels[#labels + 1] = an.newLabel(text, 20, 1, {
			color = color
		})

		return 
		--- END OF BLOCK #2 ---



	end

	function addAttr(text, key)
		--- BLOCK #0 1-5, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot2 = if not getData(key)

		 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 6-6, warpins: 1 ---
		local front = 0

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 7-13, warpins: 2 ---
		--- END OF BLOCK #2 ---

		slot3 = if not getData("max" .. key)

		 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 14-14, warpins: 1 ---
		local after = 0
		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 15-17, warpins: 2 ---
		--- END OF BLOCK #4 ---

		if 0 >= front then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 18-20, warpins: 1 ---
		--- END OF BLOCK #5 ---

		if 0 < after then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #6 21-27, warpins: 2 ---
		local normalAfter = getDataStd("max" .. key)

		--- END OF BLOCK #6 ---

		slot4 = if normalAfter then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #7 28-29, warpins: 1 ---
		--- END OF BLOCK #7 ---

		if normalAfter < after then
		JUMP TO BLOCK #8
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #8 30-42, warpins: 1 ---
		add(text .. front .. "-" .. after .. "  (+" .. after - normalAfter .. ")", display.COLOR_GREEN)
		--- END OF BLOCK #8 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #9 43-49, warpins: 2 ---
		add(text .. front .. "-" .. after)

		--- END OF BLOCK #9 ---

		FLOW; TARGET BLOCK #10


		--- BLOCK #10 50-50, warpins: 3 ---
		return 
		--- END OF BLOCK #10 ---



	end

	function addAttr2(text, value, normalValue, color, attachText)
		--- BLOCK #0 1-2, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot4 = if not attachText then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 3-3, warpins: 1 ---
		attachText = ""

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 4-5, warpins: 2 ---
		--- END OF BLOCK #2 ---

		slot2 = if normalValue then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #3 6-7, warpins: 1 ---
		--- END OF BLOCK #3 ---

		if normalValue < value then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 8-20, warpins: 1 ---
		add(text .. value .. attachText .. "  (+" .. value - normalValue .. attachText .. ")", display.COLOR_GREEN)
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #5 21-27, warpins: 2 ---
		add(text .. value .. attachText, color)

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 28-28, warpins: 2 ---
		return 
		--- END OF BLOCK #6 ---



	end

	function needColor(a, b)
		--- BLOCK #0 1-2, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if b <= a then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 3-6, warpins: 1 ---
		--- END OF BLOCK #1 ---

		slot2 = if not display.COLOR_WHITE then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 7-8, warpins: 2 ---
		slot2 = display.COLOR_RED

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 9-9, warpins: 2 ---
		return slot2
		--- END OF BLOCK #3 ---



	end

	function addNeed()
		--- BLOCK #0 1-8, warpins: 1 ---
		local need = getData("need")
		local needLevel = getData("needLevel")

		--- END OF BLOCK #0 ---

		if need == 0 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 9-24, warpins: 1 ---
		add("ÐèÒªµÈ¼¶: " .. needLevel .. "¼¶", needColor(playerorhero.ability:get("level"), needLevel))
		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #2 25-26, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if need == 1 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 27-41, warpins: 1 ---
		add("ÐèÒª¹¥»÷Á¦: " .. needLevel, needColor(playerorhero.ability:get("maxDC"), needLevel))
		--- END OF BLOCK #3 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #4 42-43, warpins: 1 ---
		--- END OF BLOCK #4 ---

		if need == 2 then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 44-58, warpins: 1 ---
		add("ÐèÒªÄ§·¨Á¦: " .. needLevel, needColor(playerorhero.ability:get("maxMC"), needLevel))
		--- END OF BLOCK #5 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #6 59-60, warpins: 1 ---
		--- END OF BLOCK #6 ---

		if need == 3 then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 61-75, warpins: 1 ---
		add("ÐèÒª¾«ÉñÁ¦: " .. needLevel, needColor(playerorhero.ability:get("maxSC"), needLevel))
		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #8 76-77, warpins: 1 ---
		--- END OF BLOCK #8 ---

		if need == 4 then
		JUMP TO BLOCK #9
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #9 78-85, warpins: 1 ---
		add("ÐèÒª×ªÉúµÈ¼¶: " .. needLevel, display.COLOR_WHITE)
		--- END OF BLOCK #9 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #10 86-87, warpins: 1 ---
		--- END OF BLOCK #10 ---

		if need == 40 then
		JUMP TO BLOCK #11
		else
		JUMP TO BLOCK #12
		end


		--- BLOCK #11 88-95, warpins: 1 ---
		add("ÐèÒª×ªÉú&µÈ¼¶: " .. needLevel, display.COLOR_WHITE)
		--- END OF BLOCK #11 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #12 96-97, warpins: 1 ---
		--- END OF BLOCK #12 ---

		if need == 41 then
		JUMP TO BLOCK #13
		else
		JUMP TO BLOCK #14
		end


		--- BLOCK #13 98-105, warpins: 1 ---
		add("ÐèÒª×ªÉú&¹¥»÷Á¦: " .. needLevel, display.COLOR_WHITE)
		--- END OF BLOCK #13 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #14 106-107, warpins: 1 ---
		--- END OF BLOCK #14 ---

		if need == 42 then
		JUMP TO BLOCK #15
		else
		JUMP TO BLOCK #16
		end


		--- BLOCK #15 108-115, warpins: 1 ---
		add("ÐèÒª×ªÉú&Ä§·¨Á¦: " .. needLevel, display.COLOR_WHITE)
		--- END OF BLOCK #15 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #16 116-117, warpins: 1 ---
		--- END OF BLOCK #16 ---

		if need == 43 then
		JUMP TO BLOCK #17
		else
		JUMP TO BLOCK #18
		end


		--- BLOCK #17 118-125, warpins: 1 ---
		add("ÐèÒª×ªÉú&¾«ÉñÁ¦Á¦: " .. needLevel, display.COLOR_WHITE)
		--- END OF BLOCK #17 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #18 126-127, warpins: 1 ---
		--- END OF BLOCK #18 ---

		if need == 44 then
		JUMP TO BLOCK #19
		else
		JUMP TO BLOCK #20
		end


		--- BLOCK #19 128-135, warpins: 1 ---
		add("ÐèÒª×ªÉú&ÉùÍûµã: " .. needLevel, display.COLOR_WHITE)
		--- END OF BLOCK #19 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #20 136-137, warpins: 1 ---
		--- END OF BLOCK #20 ---

		if need == 5 then
		JUMP TO BLOCK #21
		else
		JUMP TO BLOCK #22
		end


		--- BLOCK #21 138-145, warpins: 1 ---
		add("ÐèÒªÉùÍûµã: " .. needLevel, display.COLOR_WHITE)
		--- END OF BLOCK #21 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #22 146-147, warpins: 1 ---
		--- END OF BLOCK #22 ---

		if need == 6 then
		JUMP TO BLOCK #23
		else
		JUMP TO BLOCK #24
		end


		--- BLOCK #23 148-153, warpins: 1 ---
		add("ÐÐ»á³ÉÔ±×¨ÓÃ", display.COLOR_WHITE)
		--- END OF BLOCK #23 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #24 154-155, warpins: 1 ---
		--- END OF BLOCK #24 ---

		if need == 60 then
		JUMP TO BLOCK #25
		else
		JUMP TO BLOCK #26
		end


		--- BLOCK #25 156-161, warpins: 1 ---
		add("ÐÐ»áÕÆÃÅ×¨ÓÃ", display.COLOR_WHITE)
		--- END OF BLOCK #25 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #26 162-163, warpins: 1 ---
		--- END OF BLOCK #26 ---

		if need == 7 then
		JUMP TO BLOCK #27
		else
		JUMP TO BLOCK #28
		end


		--- BLOCK #27 164-169, warpins: 1 ---
		add("É³³Ç³ÉÔ±×¨ÓÃ", display.COLOR_WHITE)
		--- END OF BLOCK #27 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #28 170-171, warpins: 1 ---
		--- END OF BLOCK #28 ---

		if need == 70 then
		JUMP TO BLOCK #29
		else
		JUMP TO BLOCK #30
		end


		--- BLOCK #29 172-177, warpins: 1 ---
		add("É³³ÇÕÆÃÅ×¨ÓÃ", display.COLOR_WHITE)
		--- END OF BLOCK #29 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #30 178-179, warpins: 1 ---
		--- END OF BLOCK #30 ---

		if need == 8 then
		JUMP TO BLOCK #31
		else
		JUMP TO BLOCK #32
		end


		--- BLOCK #31 180-185, warpins: 1 ---
		add("»áÔ±×¨ÓÃ", display.COLOR_WHITE)
		--- END OF BLOCK #31 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #32 186-187, warpins: 1 ---
		--- END OF BLOCK #32 ---

		if need == 81 then
		JUMP TO BLOCK #33
		else
		JUMP TO BLOCK #34
		end


		--- BLOCK #33 188-201, warpins: 1 ---
		add("»áÔ±ÀàÐÍ =" .. Loword(needLevel) .. "²¢µÈ¼¶>=" .. Hiword(needLevel), display.COLOR_WHITE)
		--- END OF BLOCK #33 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #36


		--- BLOCK #34 202-203, warpins: 1 ---
		--- END OF BLOCK #34 ---

		if need == 82 then
		JUMP TO BLOCK #35
		else
		JUMP TO BLOCK #36
		end


		--- BLOCK #35 204-216, warpins: 1 ---
		add("»áÔ±ÀàÐÍ >= " .. Loword(needLevel) .. "²¢µÈ¼¶>=" .. Hiword(needLevel), display.COLOR_WHITE)

		--- END OF BLOCK #35 ---

		FLOW; TARGET BLOCK #36


		--- BLOCK #36 217-217, warpins: 19 ---
		return 
		--- END OF BLOCK #36 ---



	end

	local function tmpModf(value)
		--- BLOCK #0 1-7, warpins: 1 ---
		local int, f = math.modf(value)
		--- END OF BLOCK #0 ---

		if 0.5 <= f then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-10, warpins: 1 ---
		--- END OF BLOCK #1 ---

		slot3 = if not (int + 1) then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 11-11, warpins: 2 ---
		slot3 = int

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 12-12, warpins: 2 ---
		return slot3
		--- END OF BLOCK #3 ---



	end

	local function getDuraColor(v)
		--- BLOCK #0 1-2, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if not v then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 3-3, warpins: 1 ---
		v = 1000
		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 4-12, warpins: 2 ---
		slot1 = tmpModf
		slot2 = Word

		--- END OF BLOCK #2 ---

		slot3 = if not data:get("dura")

		 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 13-15, warpins: 1 ---
		slot3 = getData("duraMax")
		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 16-20, warpins: 2 ---
		local tmpDura = slot1(slot2(slot3)/v)
		--- END OF BLOCK #4 ---

		if tmpDura == 0 then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 21-24, warpins: 1 ---
		--- END OF BLOCK #5 ---

		slot2 = if not display.COLOR_RED then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #6 25-26, warpins: 2 ---
		slot2 = display.COLOR_WHITE

		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 27-27, warpins: 2 ---
		return slot2
		--- END OF BLOCK #7 ---



	end

	function duraStr(v)
		--- BLOCK #0 1-2, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if not v then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 3-3, warpins: 1 ---
		v = 1000

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 4-7, warpins: 2 ---
		--- END OF BLOCK #2 ---

		slot1 = if params.onlyStdItem then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #3 8-11, warpins: 1 ---
		--- END OF BLOCK #3 ---

		slot1 = if params.hideMaxDura then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 12-14, warpins: 1 ---
		return "-/-"
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #5 15-23, warpins: 1 ---
		return math.modf(Word(getData("duraMax"))/v)
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 24-27, warpins: 3 ---
		--- END OF BLOCK #6 ---

		slot1 = if params.hideMaxDura then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 28-38, warpins: 1 ---
		return tmpModf(Word(data:get("dura"))/v)
		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #9


		--- BLOCK #8 39-61, warpins: 1 ---
		return tmpModf(Word(data:get("dura"))/v) .. "/" .. tmpModf(Word(data:get("duraMax"))/v)
		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 62-62, warpins: 2 ---
		return 
		--- END OF BLOCK #9 ---



	end

	local stdMode = getData("stdMode")

	--- END OF BLOCK #20 ---

	if stdMode == 0 then
	JUMP TO BLOCK #21
	else
	JUMP TO BLOCK #25
	end


	--- BLOCK #21 157-162, warpins: 1 ---
	--- END OF BLOCK #21 ---

	if 0 < getData("AC")
	 then
	JUMP TO BLOCK #22
	else
	JUMP TO BLOCK #23
	end


	--- BLOCK #22 163-171, warpins: 1 ---
	add("HP+" .. getData("AC"), display.COLOR_GREEN)
	--- END OF BLOCK #22 ---

	FLOW; TARGET BLOCK #23


	--- BLOCK #23 172-177, warpins: 2 ---
	--- END OF BLOCK #23 ---

	if 0 < getData("MAC")
	 then
	JUMP TO BLOCK #24
	else
	JUMP TO BLOCK #182
	end


	--- BLOCK #24 178-187, warpins: 1 ---
	add("MP+" .. getData("MAC"), display.COLOR_GREEN)
	--- END OF BLOCK #24 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #25 188-189, warpins: 1 ---
	--- END OF BLOCK #25 ---

	if stdMode == 1 then
	JUMP TO BLOCK #26
	else
	JUMP TO BLOCK #38
	end


	--- BLOCK #26 190-194, warpins: 1 ---
	--- END OF BLOCK #26 ---

	slot13 = if not getData("shape")

	 then
	JUMP TO BLOCK #27
	else
	JUMP TO BLOCK #28
	end


	--- BLOCK #27 195-195, warpins: 1 ---
	local shape = 0

	--- END OF BLOCK #27 ---

	FLOW; TARGET BLOCK #28


	--- BLOCK #28 196-205, warpins: 2 ---
	--- END OF BLOCK #28 ---

	slot14 = if checkExist(shape, 1, 2, 5, 6, 7)
	 then
	JUMP TO BLOCK #29
	else
	JUMP TO BLOCK #30
	end


	--- BLOCK #29 206-213, warpins: 1 ---
	add("³ÖÐø: " .. duraStr() .. " Ð¡Ê±")
	--- END OF BLOCK #29 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #30 214-223, warpins: 1 ---
	--- END OF BLOCK #30 ---

	slot14 = if checkExist(shape, 3, 4, 8, 9, 10)
	 then
	JUMP TO BLOCK #31
	else
	JUMP TO BLOCK #32
	end


	--- BLOCK #31 224-231, warpins: 1 ---
	add("ÀÛ»ý: " .. duraStr() .. " Ð¡Ê±")
	--- END OF BLOCK #31 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #32 232-233, warpins: 1 ---
	--- END OF BLOCK #32 ---

	if shape == 30 then
	JUMP TO BLOCK #33
	else
	JUMP TO BLOCK #34
	end


	--- BLOCK #33 234-242, warpins: 1 ---
	add("Ê¹ÓÃ: " .. duraStr(10) .. " ´Î")
	--- END OF BLOCK #33 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #34 243-244, warpins: 1 ---
	--- END OF BLOCK #34 ---

	if shape == 34 then
	JUMP TO BLOCK #35
	else
	JUMP TO BLOCK #36
	end


	--- BLOCK #35 245-252, warpins: 1 ---
	add("³Ö¾Ã: " .. duraStr(1))
	--- END OF BLOCK #35 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #36 253-254, warpins: 1 ---
	--- END OF BLOCK #36 ---

	if shape == 35 then
	JUMP TO BLOCK #37
	else
	JUMP TO BLOCK #182
	end


	--- BLOCK #37 255-263, warpins: 1 ---
	add("Ê¹ÓÃ: " .. duraStr(1) .. " ´Î")
	--- END OF BLOCK #37 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #38 264-265, warpins: 1 ---
	--- END OF BLOCK #38 ---

	if stdMode == 2 then
	JUMP TO BLOCK #39
	else
	JUMP TO BLOCK #48
	end


	--- BLOCK #39 266-270, warpins: 1 ---
	--- END OF BLOCK #39 ---

	slot13 = if not getData("shape")

	 then
	JUMP TO BLOCK #40
	else
	JUMP TO BLOCK #41
	end


	--- BLOCK #40 271-271, warpins: 1 ---
	local shape = 0

	--- END OF BLOCK #40 ---

	FLOW; TARGET BLOCK #41


	--- BLOCK #41 272-273, warpins: 2 ---
	--- END OF BLOCK #41 ---

	if shape == 9 then
	JUMP TO BLOCK #42
	else
	JUMP TO BLOCK #43
	end


	--- BLOCK #42 274-284, warpins: 1 ---
	add("ÐÞ¸´×°±¸³Ö¾Ã: " .. duraStr(100) .. "µã", display.COLOR_GREEN)
	--- END OF BLOCK #42 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #43 285-286, warpins: 1 ---
	--- END OF BLOCK #43 ---

	if shape == 20 then
	JUMP TO BLOCK #44
	else
	JUMP TO BLOCK #45
	end


	--- BLOCK #44 287-323, warpins: 1 ---
	add("ÈÝÁ¿: " .. duraStr(), display.COLOR_GREEN)
	add("µÈ¼¶: " .. getData("needLevel"), display.COLOR_GREEN)
	add("Æ·ÖÊ: " .. getData("source"), display.COLOR_GREEN)
	add("¾Æ¾«¶È: " .. getData("aniCount") .. "C¡ã", display.COLOR_GREEN)
	--- END OF BLOCK #44 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #45 324-325, warpins: 1 ---
	--- END OF BLOCK #45 ---

	if shape == 21 then
	JUMP TO BLOCK #46
	else
	JUMP TO BLOCK #47
	end


	--- BLOCK #46 326-335, warpins: 1 ---
	add("Æ·ÖÊ: " .. getData("source"), display.COLOR_GREEN)
	--- END OF BLOCK #46 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #47 336-345, warpins: 1 ---
	add("¿ÉÓÃ: " .. duraStr() .. "´Î", display.COLOR_GREEN)
	--- END OF BLOCK #47 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #48 346-347, warpins: 1 ---
	--- END OF BLOCK #48 ---

	if stdMode == 4 then
	JUMP TO BLOCK #49
	else
	JUMP TO BLOCK #55
	end


	--- BLOCK #49 348-352, warpins: 1 ---
	--- END OF BLOCK #49 ---

	slot13 = if not getData("shape")

	 then
	JUMP TO BLOCK #50
	else
	JUMP TO BLOCK #51
	end


	--- BLOCK #50 353-353, warpins: 1 ---
	local shape = 0

	--- END OF BLOCK #50 ---

	FLOW; TARGET BLOCK #51


	--- BLOCK #51 354-361, warpins: 2 ---
	--- END OF BLOCK #51 ---

	slot14 = if checkExist(shape, 0, 1, 2)

	 then
	JUMP TO BLOCK #52
	else
	JUMP TO BLOCK #53
	end


	--- BLOCK #52 362-368, warpins: 1 ---
	local names = {
		"Õ½Ê¿ÃØ¼®",
		"Ä§·¨ÃØ¼®",
		"µÀÊ¿ÃØ¼®"
	}

	add(names[shape + 1], display.COLOR_GREEN)

	--- END OF BLOCK #52 ---

	FLOW; TARGET BLOCK #53


	--- BLOCK #53 369-371, warpins: 2 ---
	--- END OF BLOCK #53 ---

	slot14 = if not params.hideMaxDura then
	JUMP TO BLOCK #54
	else
	JUMP TO BLOCK #182
	end


	--- BLOCK #54 372-394, warpins: 1 ---
	local needLevel = math.modf(Word(getData("duraMax")))

	add("ÐèÒªµÈ¼¶: " .. needLevel .. "¼¶", needColor(playerorhero.ability:get("level"), needLevel))
	--- END OF BLOCK #54 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #55 395-401, warpins: 1 ---
	--- END OF BLOCK #55 ---

	slot13 = if checkExist(stdMode, 5, 6)
	 then
	JUMP TO BLOCK #56
	else
	JUMP TO BLOCK #84
	end


	--- BLOCK #56 402-405, warpins: 1 ---
	--- END OF BLOCK #56 ---

	slot13 = if isUpgrade()
	 then
	JUMP TO BLOCK #57
	else
	JUMP TO BLOCK #58
	end


	--- BLOCK #57 406-414, warpins: 1 ---
	labels[1]:setString("(*)" .. getData("name"))
	--- END OF BLOCK #57 ---

	FLOW; TARGET BLOCK #58


	--- BLOCK #58 415-447, warpins: 2 ---
	add("³Ö¾Ã: " .. duraStr(), getDuraColor())
	addAttr("¹¥»÷: ", "DC")
	addAttr("Ä§·¨: ", "MC")
	addAttr("µÀÊõ: ", "SC")

	local source = getData("source")
	local sourceN = getDataStd("source")

	--- END OF BLOCK #58 ---

	slot15 = if checkIn(source, 1, 10)
	 then
	JUMP TO BLOCK #59
	else
	JUMP TO BLOCK #60
	end


	--- BLOCK #59 448-453, warpins: 1 ---
	addAttr2("Ç¿¶È: +", source, sourceN)
	--- END OF BLOCK #59 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #64


	--- BLOCK #60 454-460, warpins: 1 ---
	--- END OF BLOCK #60 ---

	slot15 = if checkIn(source, -50, -1)
	 then
	JUMP TO BLOCK #61
	else
	JUMP TO BLOCK #62
	end


	--- BLOCK #61 461-468, warpins: 1 ---
	addAttr2("ÉñÊ¥: +", -source, -sourceN, display.COLOR_WHITE)
	--- END OF BLOCK #61 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #64


	--- BLOCK #62 469-475, warpins: 1 ---
	--- END OF BLOCK #62 ---

	slot15 = if checkIn(source, -100, -51)
	 then
	JUMP TO BLOCK #63
	else
	JUMP TO BLOCK #64
	end


	--- BLOCK #63 476-483, warpins: 1 ---
	add("ÉñÊ¥: -" .. -source - 50, display.COLOR_RED)

	--- END OF BLOCK #63 ---

	FLOW; TARGET BLOCK #64


	--- BLOCK #64 484-510, warpins: 4 ---
	local AC = getData("AC")
	local maxAC = getData("maxAC")
	local MAC = getData("MAC")
	local maxMAC = getData("maxMAC")
	local ACN = getDataStd("AC")
	local maxACN = getDataStd("maxAC")
	local MACN = getDataStd("MAC")
	local maxMACN = getDataStd("maxMAC")

	--- END OF BLOCK #64 ---

	if 0 < maxAC then
	JUMP TO BLOCK #65
	else
	JUMP TO BLOCK #68
	end


	--- BLOCK #65 511-515, warpins: 1 ---
	--- END OF BLOCK #65 ---

	slot23 = if not getData("accurate")

	 then
	JUMP TO BLOCK #66
	else
	JUMP TO BLOCK #67
	end


	--- BLOCK #66 516-516, warpins: 1 ---
	local ac = maxAC

	--- END OF BLOCK #66 ---

	FLOW; TARGET BLOCK #67


	--- BLOCK #67 517-523, warpins: 2 ---
	addAttr2("×¼È·: +", ac, maxACN, display.COLOR_WHITE)

	--- END OF BLOCK #67 ---

	FLOW; TARGET BLOCK #68


	--- BLOCK #68 524-526, warpins: 2 ---
	--- END OF BLOCK #68 ---

	if 0 < maxMAC then
	JUMP TO BLOCK #69
	else
	JUMP TO BLOCK #77
	end


	--- BLOCK #69 527-529, warpins: 1 ---
	--- END OF BLOCK #69 ---

	if 10 < maxMAC then
	JUMP TO BLOCK #70
	else
	JUMP TO BLOCK #76
	end


	--- BLOCK #70 530-532, warpins: 1 ---
	--- END OF BLOCK #70 ---

	slot23 = if macN then
	JUMP TO BLOCK #71
	else
	JUMP TO BLOCK #75
	end


	--- BLOCK #71 533-537, warpins: 1 ---
	macN = maxMACN
	--- END OF BLOCK #71 ---

	if 10 < macN then
	JUMP TO BLOCK #72
	else
	JUMP TO BLOCK #73
	end


	--- BLOCK #72 538-541, warpins: 1 ---
	--- END OF BLOCK #72 ---

	slot23 = if not (macN - 10) then
	JUMP TO BLOCK #73
	else
	JUMP TO BLOCK #74
	end


	--- BLOCK #73 542-542, warpins: 2 ---
	slot23 = macN
	--- END OF BLOCK #73 ---

	FLOW; TARGET BLOCK #74


	--- BLOCK #74 543-543, warpins: 2 ---
	macN = slot23

	--- END OF BLOCK #74 ---

	FLOW; TARGET BLOCK #75


	--- BLOCK #75 544-551, warpins: 2 ---
	addAttr2("¹¥»÷ËÙ¶È: +", maxMAC - 10, macN, display.COLOR_WHITE)
	--- END OF BLOCK #75 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #77


	--- BLOCK #76 552-558, warpins: 1 ---
	add("¹¥»÷ËÙ¶È: -" .. maxMAC, display.COLOR_RED)

	--- END OF BLOCK #76 ---

	FLOW; TARGET BLOCK #77


	--- BLOCK #77 559-561, warpins: 3 ---
	--- END OF BLOCK #77 ---

	if 0 < AC then
	JUMP TO BLOCK #78
	else
	JUMP TO BLOCK #81
	end


	--- BLOCK #78 562-567, warpins: 1 ---
	slot23 = addAttr2
	slot24 = "ÐÒÔË: +"
	slot25 = AC
	--- END OF BLOCK #78 ---

	slot26 = if not acN then
	JUMP TO BLOCK #79
	else
	JUMP TO BLOCK #80
	end


	--- BLOCK #79 568-568, warpins: 1 ---
	slot26 = ACN

	--- END OF BLOCK #79 ---

	FLOW; TARGET BLOCK #80


	--- BLOCK #80 569-571, warpins: 2 ---
	slot23(slot24, slot25, slot26, display.COLOR_WHITE)
	--- END OF BLOCK #80 ---

	FLOW; TARGET BLOCK #81


	--- BLOCK #81 572-574, warpins: 2 ---
	--- END OF BLOCK #81 ---

	if 0 < MAC then
	JUMP TO BLOCK #82
	else
	JUMP TO BLOCK #83
	end


	--- BLOCK #82 575-581, warpins: 1 ---
	add("×çÖä: +" .. MAC, display.COLOR_RED)
	--- END OF BLOCK #82 ---

	FLOW; TARGET BLOCK #83


	--- BLOCK #83 582-584, warpins: 2 ---
	addNeed()
	--- END OF BLOCK #83 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #84 585-586, warpins: 1 ---
	--- END OF BLOCK #84 ---

	if stdMode == 7 then
	JUMP TO BLOCK #85
	else
	JUMP TO BLOCK #90
	end


	--- BLOCK #85 587-591, warpins: 1 ---
	--- END OF BLOCK #85 ---

	slot13 = if not getData("shape")

	 then
	JUMP TO BLOCK #86
	else
	JUMP TO BLOCK #87
	end


	--- BLOCK #86 592-592, warpins: 1 ---
	local shape = 0

	--- END OF BLOCK #86 ---

	FLOW; TARGET BLOCK #87


	--- BLOCK #87 593-601, warpins: 2 ---
	--- END OF BLOCK #87 ---

	slot14 = if checkExist(shape, 0, 1, 2, 3)

	 then
	JUMP TO BLOCK #88
	else
	JUMP TO BLOCK #89
	end


	--- BLOCK #88 602-612, warpins: 1 ---
	local front = {
		"´ÎÊý: ",
		"HP ",
		"MP ",
		"HPMP "
	}
	local after = {
		" ´Î",
		" Íò",
		" Íò",
		" Íò"
	}

	add(front[shape + 1] .. duraStr() .. after[shape + 1])
	--- END OF BLOCK #88 ---

	FLOW; TARGET BLOCK #89


	--- BLOCK #89 613-615, warpins: 2 ---
	addNeed()
	--- END OF BLOCK #89 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #90 616-622, warpins: 1 ---
	--- END OF BLOCK #90 ---

	slot13 = if checkExist(stdMode, 10, 11)
	 then
	JUMP TO BLOCK #91
	else
	JUMP TO BLOCK #98
	end


	--- BLOCK #91 623-662, warpins: 1 ---
	add("³Ö¾Ã: " .. duraStr(), getDuraColor())
	addAttr("·ÀÓù: ", "AC")
	addAttr("Ä§Óù: ", "MAC")
	addAttr("¹¥»÷: ", "DC")
	addAttr("Ä§·¨: ", "MC")
	addAttr("µÀÊõ: ", "SC")

	local source = getData("source")
	local sourceN = getDataStd("source")

	--- END OF BLOCK #91 ---

	if 0 < Lobyte(source)

	 then
	JUMP TO BLOCK #92
	else
	JUMP TO BLOCK #95
	end


	--- BLOCK #92 663-669, warpins: 1 ---
	slot15 = addAttr2
	slot16 = "ÐÒÔË: +"
	slot17 = Lobyte(source)
	--- END OF BLOCK #92 ---

	slot18 = if sourceN then
	JUMP TO BLOCK #93
	else
	JUMP TO BLOCK #94
	end


	--- BLOCK #93 670-672, warpins: 1 ---
	slot18 = Lobyte(sourceN)

	--- END OF BLOCK #93 ---

	FLOW; TARGET BLOCK #94


	--- BLOCK #94 673-675, warpins: 2 ---
	slot15(slot16, slot17, slot18, display.COLOR_WHITE)
	--- END OF BLOCK #94 ---

	FLOW; TARGET BLOCK #95


	--- BLOCK #95 676-681, warpins: 2 ---
	--- END OF BLOCK #95 ---

	if 0 < Hibyte(source)
	 then
	JUMP TO BLOCK #96
	else
	JUMP TO BLOCK #97
	end


	--- BLOCK #96 682-690, warpins: 1 ---
	add("×çÖä: +" .. Hibyte(source), display.COLOR_RED)
	--- END OF BLOCK #96 ---

	FLOW; TARGET BLOCK #97


	--- BLOCK #97 691-693, warpins: 2 ---
	addNeed()
	--- END OF BLOCK #97 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #98 694-716, warpins: 1 ---
	--- END OF BLOCK #98 ---

	slot13 = if checkExist(stdMode, 15, 30, 16, 19, 20, 21, 22, 23, 24, 26, 27, 28, 52, 62, 53, 63, 54, 64)
	 then
	JUMP TO BLOCK #99
	else
	JUMP TO BLOCK #158
	end


	--- BLOCK #99 717-721, warpins: 1 ---
	--- END OF BLOCK #99 ---

	if getData("shape")

	 == 188 then
	JUMP TO BLOCK #100
	else
	JUMP TO BLOCK #101
	end


	--- BLOCK #100 722-730, warpins: 1 ---
	local name = getData("name")

	p2("normal", "===================\n", name, "¸ÃµÀ¾ßËÆºõÓÐÌØÊâµÄÊôÐÔ¹æÔò")
	--- END OF BLOCK #100 ---

	FLOW; TARGET BLOCK #101


	--- BLOCK #101 731-735, warpins: 2 ---
	--- END OF BLOCK #101 ---

	slot13 = if not getData("shape")

	 then
	JUMP TO BLOCK #102
	else
	JUMP TO BLOCK #103
	end


	--- BLOCK #102 736-736, warpins: 1 ---
	local tmpShape = 0

	--- END OF BLOCK #102 ---

	FLOW; TARGET BLOCK #103


	--- BLOCK #103 737-738, warpins: 2 ---
	--- END OF BLOCK #103 ---

	if stdMode ~= 64 then
	JUMP TO BLOCK #104
	else
	JUMP TO BLOCK #105
	end


	--- BLOCK #104 739-746, warpins: 1 ---
	add("³Ö¾Ã: " .. duraStr(), getDuraColor())

	--- END OF BLOCK #104 ---

	FLOW; TARGET BLOCK #105


	--- BLOCK #105 747-772, warpins: 2 ---
	local AC = getData("AC")
	local maxAC = getData("maxAC")
	local MAC = getData("MAC")
	local maxMAC = getData("maxMAC")
	local ACN = getDataStd("AC")
	local maxACN = getDataStd("maxAC")
	local MACN = getDataStd("MAC")
	local maxMACN = getDataStd("maxMAC")

	--- END OF BLOCK #105 ---

	if stdMode ~= 19 then
	JUMP TO BLOCK #106
	else
	JUMP TO BLOCK #107
	end


	--- BLOCK #106 773-774, warpins: 1 ---
	--- END OF BLOCK #106 ---

	if stdMode == 53 then
	JUMP TO BLOCK #107
	else
	JUMP TO BLOCK #113
	end


	--- BLOCK #107 775-777, warpins: 2 ---
	--- END OF BLOCK #107 ---

	if 0 < maxAC then
	JUMP TO BLOCK #108
	else
	JUMP TO BLOCK #109
	end


	--- BLOCK #108 778-785, warpins: 1 ---
	addAttr2("Ä§·¨¶ã±Ü: +", maxAC, maxACN, display.COLOR_WHITE, "0£¥")
	--- END OF BLOCK #108 ---

	FLOW; TARGET BLOCK #109


	--- BLOCK #109 786-788, warpins: 2 ---
	--- END OF BLOCK #109 ---

	if 0 < maxMAC then
	JUMP TO BLOCK #110
	else
	JUMP TO BLOCK #111
	end


	--- BLOCK #110 789-795, warpins: 1 ---
	addAttr2("ÐÒÔË: +", maxMAC, maxMACN, display.COLOR_WHITE)
	--- END OF BLOCK #110 ---

	FLOW; TARGET BLOCK #111


	--- BLOCK #111 796-798, warpins: 2 ---
	--- END OF BLOCK #111 ---

	if 0 < MAC then
	JUMP TO BLOCK #112
	else
	JUMP TO BLOCK #151
	end


	--- BLOCK #112 799-806, warpins: 1 ---
	add("×çÖä: +" .. MAC, display.COLOR_RED)
	--- END OF BLOCK #112 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #151


	--- BLOCK #113 807-808, warpins: 1 ---
	--- END OF BLOCK #113 ---

	if stdMode ~= 20 then
	JUMP TO BLOCK #114
	else
	JUMP TO BLOCK #115
	end


	--- BLOCK #114 809-810, warpins: 1 ---
	--- END OF BLOCK #114 ---

	if stdMode == 24 then
	JUMP TO BLOCK #115
	else
	JUMP TO BLOCK #119
	end


	--- BLOCK #115 811-813, warpins: 2 ---
	--- END OF BLOCK #115 ---

	if 0 < maxAC then
	JUMP TO BLOCK #116
	else
	JUMP TO BLOCK #117
	end


	--- BLOCK #116 814-820, warpins: 1 ---
	addAttr2("×¼È·: +", maxAC, maxACN, display.COLOR_WHITE)
	--- END OF BLOCK #116 ---

	FLOW; TARGET BLOCK #117


	--- BLOCK #117 821-823, warpins: 2 ---
	--- END OF BLOCK #117 ---

	if 0 < maxMAC then
	JUMP TO BLOCK #118
	else
	JUMP TO BLOCK #151
	end


	--- BLOCK #118 824-831, warpins: 1 ---
	addAttr2("Ãô½Ý: +", maxMAC, maxMACN, display.COLOR_WHITE)
	--- END OF BLOCK #118 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #151


	--- BLOCK #119 832-833, warpins: 1 ---
	--- END OF BLOCK #119 ---

	if stdMode == 21 then
	JUMP TO BLOCK #120
	else
	JUMP TO BLOCK #128
	end


	--- BLOCK #120 834-836, warpins: 1 ---
	--- END OF BLOCK #120 ---

	if 0 < maxAC then
	JUMP TO BLOCK #121
	else
	JUMP TO BLOCK #122
	end


	--- BLOCK #121 837-844, warpins: 1 ---
	addAttr2("ÌåÁ¦»Ö¸´: +", maxAC, maxACN, display.COLOR_WHITE, "0£¥")
	--- END OF BLOCK #121 ---

	FLOW; TARGET BLOCK #122


	--- BLOCK #122 845-847, warpins: 2 ---
	--- END OF BLOCK #122 ---

	if 0 < maxMAC then
	JUMP TO BLOCK #123
	else
	JUMP TO BLOCK #124
	end


	--- BLOCK #123 848-855, warpins: 1 ---
	addAttr2("Ä§·¨»Ö¸´: +", maxMAC, maxMACN, display.COLOR_WHITE, "0£¥")
	--- END OF BLOCK #123 ---

	FLOW; TARGET BLOCK #124


	--- BLOCK #124 856-858, warpins: 2 ---
	--- END OF BLOCK #124 ---

	if 0 < AC then
	JUMP TO BLOCK #125
	else
	JUMP TO BLOCK #126
	end


	--- BLOCK #125 859-865, warpins: 1 ---
	addAttr2("¹¥»÷ËÙ¶È: +", AC, ACN, display.COLOR_WHITE)
	--- END OF BLOCK #125 ---

	FLOW; TARGET BLOCK #126


	--- BLOCK #126 866-868, warpins: 2 ---
	--- END OF BLOCK #126 ---

	if 0 < MAC then
	JUMP TO BLOCK #127
	else
	JUMP TO BLOCK #151
	end


	--- BLOCK #127 869-876, warpins: 1 ---
	add("¹¥»÷ËÙ¶È: -" .. MAC, display.COLOR_RED)
	--- END OF BLOCK #127 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #151


	--- BLOCK #128 877-878, warpins: 1 ---
	--- END OF BLOCK #128 ---

	if stdMode == 23 then
	JUMP TO BLOCK #129
	else
	JUMP TO BLOCK #137
	end


	--- BLOCK #129 879-881, warpins: 1 ---
	--- END OF BLOCK #129 ---

	if 0 < maxAC then
	JUMP TO BLOCK #130
	else
	JUMP TO BLOCK #131
	end


	--- BLOCK #130 882-889, warpins: 1 ---
	addAttr2("¶¾Îï¶ã±Ü: +", maxAC, maxACN, display.COLOR_WHITE, "0£¥")
	--- END OF BLOCK #130 ---

	FLOW; TARGET BLOCK #131


	--- BLOCK #131 890-892, warpins: 2 ---
	--- END OF BLOCK #131 ---

	if 0 < maxMAC then
	JUMP TO BLOCK #132
	else
	JUMP TO BLOCK #133
	end


	--- BLOCK #132 893-900, warpins: 1 ---
	addAttr2("ÖÐ¶¾»Ö¸´: +", maxMAC, maxMACN, display.COLOR_WHITE, "0£¥")
	--- END OF BLOCK #132 ---

	FLOW; TARGET BLOCK #133


	--- BLOCK #133 901-903, warpins: 2 ---
	--- END OF BLOCK #133 ---

	if 0 < AC then
	JUMP TO BLOCK #134
	else
	JUMP TO BLOCK #135
	end


	--- BLOCK #134 904-910, warpins: 1 ---
	addAttr2("¹¥»÷ËÙ¶È: +", AC, ACN, display.COLOR_WHITE)
	--- END OF BLOCK #134 ---

	FLOW; TARGET BLOCK #135


	--- BLOCK #135 911-913, warpins: 2 ---
	--- END OF BLOCK #135 ---

	if 0 < MAC then
	JUMP TO BLOCK #136
	else
	JUMP TO BLOCK #151
	end


	--- BLOCK #136 914-921, warpins: 1 ---
	add("¹¥»÷ËÙ¶È: -" .. MAC, display.COLOR_RED)
	--- END OF BLOCK #136 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #151


	--- BLOCK #137 922-923, warpins: 1 ---
	--- END OF BLOCK #137 ---

	if stdMode ~= 28 then
	JUMP TO BLOCK #138
	else
	JUMP TO BLOCK #139
	end


	--- BLOCK #138 924-925, warpins: 1 ---
	--- END OF BLOCK #138 ---

	if stdMode == 27 then
	JUMP TO BLOCK #139
	else
	JUMP TO BLOCK #141
	end


	--- BLOCK #139 926-939, warpins: 2 ---
	addAttr("·ÀÓù: ", "AC")
	addAttr("Ä§Óù: ", "MAC")
	--- END OF BLOCK #139 ---

	if 0 < getData("aniCount")
	 then
	JUMP TO BLOCK #140
	else
	JUMP TO BLOCK #151
	end


	--- BLOCK #140 940-949, warpins: 1 ---
	add("¸ºÖØ: +" .. getData("aniCount"), display.COLOR_WHITE)
	--- END OF BLOCK #140 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #151


	--- BLOCK #141 950-951, warpins: 1 ---
	--- END OF BLOCK #141 ---

	if stdMode == 63 then
	JUMP TO BLOCK #142
	else
	JUMP TO BLOCK #150
	end


	--- BLOCK #142 952-954, warpins: 1 ---
	--- END OF BLOCK #142 ---

	if 0 < AC then
	JUMP TO BLOCK #143
	else
	JUMP TO BLOCK #144
	end


	--- BLOCK #143 955-961, warpins: 1 ---
	add("HP: +" .. AC, display.COLOR_GREEN)
	--- END OF BLOCK #143 ---

	FLOW; TARGET BLOCK #144


	--- BLOCK #144 962-964, warpins: 2 ---
	--- END OF BLOCK #144 ---

	if 0 < maxAC then
	JUMP TO BLOCK #145
	else
	JUMP TO BLOCK #146
	end


	--- BLOCK #145 965-971, warpins: 1 ---
	add("MP: +" .. maxAC, display.COLOR_GREEN)
	--- END OF BLOCK #145 ---

	FLOW; TARGET BLOCK #146


	--- BLOCK #146 972-974, warpins: 2 ---
	--- END OF BLOCK #146 ---

	if 0 < maxMAC then
	JUMP TO BLOCK #147
	else
	JUMP TO BLOCK #148
	end


	--- BLOCK #147 975-981, warpins: 1 ---
	addAttr2("ÐÒÔË: +", maxMAC, maxMACN, display.COLOR_WHITE)
	--- END OF BLOCK #147 ---

	FLOW; TARGET BLOCK #148


	--- BLOCK #148 982-984, warpins: 2 ---
	--- END OF BLOCK #148 ---

	if 0 < MAC then
	JUMP TO BLOCK #149
	else
	JUMP TO BLOCK #151
	end


	--- BLOCK #149 985-992, warpins: 1 ---
	add("×çÖä: +" .. MAC, display.COLOR_RED)
	--- END OF BLOCK #149 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #151


	--- BLOCK #150 993-1000, warpins: 1 ---
	addAttr("·ÀÓù: ", "AC")
	addAttr("Ä§Óù: ", "MAC")
	--- END OF BLOCK #150 ---

	FLOW; TARGET BLOCK #151


	--- BLOCK #151 1001-1022, warpins: 13 ---
	addAttr("¹¥»÷: ", "DC")
	addAttr("Ä§·¨: ", "MC")
	addAttr("µÀÊõ: ", "SC")

	local source = getData("source")

	--- END OF BLOCK #151 ---

	slot23 = if checkIn(source, -50, -1)
	 then
	JUMP TO BLOCK #152
	else
	JUMP TO BLOCK #153
	end


	--- BLOCK #152 1023-1030, warpins: 1 ---
	add("ÉñÊ¥: +" .. -source, display.COLOR_WHITE)
	--- END OF BLOCK #152 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #155


	--- BLOCK #153 1031-1037, warpins: 1 ---
	--- END OF BLOCK #153 ---

	slot23 = if checkIn(source, -100, -51)
	 then
	JUMP TO BLOCK #154
	else
	JUMP TO BLOCK #155
	end


	--- BLOCK #154 1038-1045, warpins: 1 ---
	add("ÉñÊ¥: -" .. -source - 50, display.COLOR_RED)
	--- END OF BLOCK #154 ---

	FLOW; TARGET BLOCK #155


	--- BLOCK #155 1046-1047, warpins: 3 ---
	--- END OF BLOCK #155 ---

	if stdMode ~= 52 then
	JUMP TO BLOCK #156
	else
	JUMP TO BLOCK #182
	end


	--- BLOCK #156 1048-1049, warpins: 1 ---
	--- END OF BLOCK #156 ---

	if stdMode ~= 64 then
	JUMP TO BLOCK #157
	else
	JUMP TO BLOCK #182
	end


	--- BLOCK #157 1050-1052, warpins: 1 ---
	addNeed()
	--- END OF BLOCK #157 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #158 1053-1054, warpins: 1 ---
	--- END OF BLOCK #158 ---

	if stdMode == 25 then
	JUMP TO BLOCK #159
	else
	JUMP TO BLOCK #172
	end


	--- BLOCK #159 1055-1059, warpins: 1 ---
	--- END OF BLOCK #159 ---

	slot13 = if not getData("shape")

	 then
	JUMP TO BLOCK #160
	else
	JUMP TO BLOCK #161
	end


	--- BLOCK #160 1060-1060, warpins: 1 ---
	local shape = 0

	--- END OF BLOCK #160 ---

	FLOW; TARGET BLOCK #161


	--- BLOCK #161 1061-1062, warpins: 2 ---
	--- END OF BLOCK #161 ---

	if shape == 9 then
	JUMP TO BLOCK #162
	else
	JUMP TO BLOCK #163
	end


	--- BLOCK #162 1063-1070, warpins: 1 ---
	add("ÈÝÁ¿: " .. duraStr(1))
	--- END OF BLOCK #162 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #163 1071-1072, warpins: 1 ---
	--- END OF BLOCK #163 ---

	if shape ~= 10 then
	JUMP TO BLOCK #164
	else
	JUMP TO BLOCK #165
	end


	--- BLOCK #164 1073-1074, warpins: 1 ---
	--- END OF BLOCK #164 ---

	if shape == 11 then
	JUMP TO BLOCK #165
	else
	JUMP TO BLOCK #166
	end


	--- BLOCK #165 1075-1082, warpins: 2 ---
	add("³Ö¾Ã: " .. duraStr(100))
	--- END OF BLOCK #165 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #166 1083-1084, warpins: 1 ---
	--- END OF BLOCK #166 ---

	if shape == 8 then
	JUMP TO BLOCK #167
	else
	JUMP TO BLOCK #171
	end


	--- BLOCK #167 1085-1089, warpins: 1 ---
	--- END OF BLOCK #167 ---

	if getData("name")
	 ~= "×£¸£¹Þ" then
	JUMP TO BLOCK #168
	else
	JUMP TO BLOCK #169
	end


	--- BLOCK #168 1090-1094, warpins: 1 ---
	--- END OF BLOCK #168 ---

	if getData("name")
	 == "Ä§Áî°ü" then
	JUMP TO BLOCK #169
	else
	JUMP TO BLOCK #170
	end


	--- BLOCK #169 1095-1102, warpins: 2 ---
	add("ÈÝÁ¿: " .. duraStr(100))
	--- END OF BLOCK #169 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #170 1103-1110, warpins: 1 ---
	add("ÈÝÁ¿: " .. duraStr(10))
	--- END OF BLOCK #170 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #171 1111-1118, warpins: 1 ---
	add("ÊýÁ¿: " .. duraStr(100))
	--- END OF BLOCK #171 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #172 1119-1120, warpins: 1 ---
	--- END OF BLOCK #172 ---

	if stdMode == 40 then
	JUMP TO BLOCK #173
	else
	JUMP TO BLOCK #174
	end


	--- BLOCK #173 1121-1127, warpins: 1 ---
	add("Æ·ÖÊ: " .. duraStr())
	--- END OF BLOCK #173 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #174 1128-1129, warpins: 1 ---
	--- END OF BLOCK #174 ---

	if stdMode == 42 then
	JUMP TO BLOCK #175
	else
	JUMP TO BLOCK #176
	end


	--- BLOCK #175 1130-1130, warpins: 1 ---
	--- END OF BLOCK #175 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #176 1131-1132, warpins: 1 ---
	--- END OF BLOCK #176 ---

	if stdMode == 43 then
	JUMP TO BLOCK #177
	else
	JUMP TO BLOCK #179
	end


	--- BLOCK #177 1133-1135, warpins: 1 ---
	--- END OF BLOCK #177 ---

	slot13 = if not params.onlyStdItem then
	JUMP TO BLOCK #178
	else
	JUMP TO BLOCK #182
	end


	--- BLOCK #178 1136-1150, warpins: 1 ---
	add("´¿¶È: " .. math.modf(Word(data.get(data, "dura"))/1000))

	--- END OF BLOCK #178 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #179 1151-1152, warpins: 1 ---
	--- END OF BLOCK #179 ---

	if stdMode == 48 then
	JUMP TO BLOCK #180
	else
	JUMP TO BLOCK #181
	end


	--- BLOCK #180 1153-1153, warpins: 1 ---
	--- END OF BLOCK #180 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #182


	--- BLOCK #181 1154-1155, warpins: 1 ---
	--- END OF BLOCK #181 ---

	if stdMode == 49 then
	JUMP TO BLOCK #182
	else
	JUMP TO BLOCK #182
	end


	--- BLOCK #182 1156-1164, warpins: 32 ---
	local desc = def.items.desc[getData("name")]
	--- END OF BLOCK #182 ---

	slot13 = if desc then
	JUMP TO BLOCK #183
	else
	JUMP TO BLOCK #186
	end


	--- BLOCK #183 1165-1173, warpins: 1 ---
	local strs = string.split(desc, "\\")

	--- END OF BLOCK #183 ---

	for i, v in ipairs(strs)

	LOOP BLOCK #184
	GO OUT TO BLOCK #186


	--- BLOCK #184 1174-1176, warpins: 1 ---
	add(v)
	--- END OF BLOCK #184 ---

	FLOW; TARGET BLOCK #185


	--- BLOCK #185 1177-1178, warpins: 2 ---
	--- END OF BLOCK #185 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #183


	--- BLOCK #186 1179-1181, warpins: 2 ---
	--- END OF BLOCK #186 ---

	slot14 = if params.extend then
	JUMP TO BLOCK #187
	else
	JUMP TO BLOCK #190
	end


	--- BLOCK #187 1182-1185, warpins: 1 ---
	--- END OF BLOCK #187 ---

	for i, v in ipairs(params.extend)

	LOOP BLOCK #188
	GO OUT TO BLOCK #190


	--- BLOCK #188 1186-1190, warpins: 1 ---
	add(v, display.COLOR_RED)

	--- END OF BLOCK #188 ---

	FLOW; TARGET BLOCK #189


	--- BLOCK #189 1191-1192, warpins: 2 ---
	--- END OF BLOCK #189 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #187


	--- BLOCK #190 1193-1198, warpins: 2 ---
	local function release(name)
		--- BLOCK #0 1-103, warpins: 1 ---
		local msgBox, slider = nil
		local count = 0
		msgBox = an.newMsgbox("", function (idx)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if idx == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #3
			end


			--- BLOCK #1 3-6, warpins: 1 ---
			--- END OF BLOCK #1 ---

			if 0 < count then
			JUMP TO BLOCK #2
			else
			JUMP TO BLOCK #3
			end


			--- BLOCK #2 7-15, warpins: 1 ---
			local useCnt = math.min(count, 6)

			local function use()
				--- BLOCK #0 1-13, warpins: 1 ---
				--- END OF BLOCK #0 ---

				slot0 = if g_data.bag:use("eat", data:get("makeIndex"))
				 then
				JUMP TO BLOCK #1
				else
				JUMP TO BLOCK #3
				end


				--- BLOCK #1 14-32, warpins: 1 ---
				net.send({
					CM_EAT,
					recog = data:get("makeIndex")
				})

				useCnt = useCnt - 1

				--- END OF BLOCK #1 ---

				if 0 < useCnt then
				JUMP TO BLOCK #2
				else
				JUMP TO BLOCK #3
				end


				--- BLOCK #2 33-37, warpins: 1 ---
				scheduler.performWithDelayGlobal(use, 0.5)

				--- END OF BLOCK #2 ---

				FLOW; TARGET BLOCK #3


				--- BLOCK #3 38-38, warpins: 3 ---
				return 
				--- END OF BLOCK #3 ---



			end

			use()

			--- END OF BLOCK #2 ---

			FLOW; TARGET BLOCK #3


			--- BLOCK #3 16-16, warpins: 3 ---
			return 
			--- END OF BLOCK #3 ---



		end, {
			disableScroll = true,
			hasCancel = true
		})

		an.newLabel("µ±Ç°ÓÐ" .. data:get("dura")/100 .. "¸ö" .. name, 18, 1):addTo(msgBox.bg):pos(60, 190):anchor(0, 0.5)

		local getout = an.newLabel("È¡³ö0¸ö" .. name .. "(Ò»´Î×î¶àÈ¡6¸ö)", 18, 1):addTo(msgBox.bg):pos(60, 160):anchor(0, 0.5)
		slider = an.newSlider(res.gettex2("pic/common/sliderBg3.png"), nil, res.gettex2("pic/common/sliderBlock3.png"), {
			scale9 = cc.size(280, 31),
			valueChange = function (value)
				--- BLOCK #0 1-26, warpins: 1 ---
				count = math.min(data:get("dura")/100, 6)*value

				getout:setString("È¡³ö" .. math.ceil(count) .. "¸ö" .. name .. "(Ò»´Î×î¶àÈ¡6¸ö)")

				return 
				--- END OF BLOCK #0 ---



			end
		}):add2(msgBox.bg):pos(msgBox.bg:getw()/2, 110):anchor(0.5, 0.5)

		return 
		--- END OF BLOCK #0 ---



	end

	--- END OF BLOCK #190 ---

	if getData("name")
	 == "×£¸£¹Þ" then
	JUMP TO BLOCK #191
	else
	JUMP TO BLOCK #194
	end


	--- BLOCK #191 1199-1201, warpins: 1 ---
	--- END OF BLOCK #191 ---

	if params.from == "bag" then
	JUMP TO BLOCK #192
	else
	JUMP TO BLOCK #194
	end


	--- BLOCK #192 1202-1208, warpins: 1 ---
	--- END OF BLOCK #192 ---

	if 100 <= data.get(data, "dura")

	 then
	JUMP TO BLOCK #193
	else
	JUMP TO BLOCK #194
	end


	--- BLOCK #193 1209-1214, warpins: 1 ---
	btns[#btns + 1] = {
		sprite = "pic/panels/bag/release.png",
		click = function ()
			--- BLOCK #0 1-4, warpins: 1 ---
			release("×£¸£ÓÍ")

			return 
			--- END OF BLOCK #0 ---



		end
	}

	--- END OF BLOCK #193 ---

	FLOW; TARGET BLOCK #194


	--- BLOCK #194 1215-1219, warpins: 4 ---
	--- END OF BLOCK #194 ---

	if getData("name")
	 == "Ä§Áî°ü" then
	JUMP TO BLOCK #195
	else
	JUMP TO BLOCK #198
	end


	--- BLOCK #195 1220-1222, warpins: 1 ---
	--- END OF BLOCK #195 ---

	if params.from == "bag" then
	JUMP TO BLOCK #196
	else
	JUMP TO BLOCK #198
	end


	--- BLOCK #196 1223-1229, warpins: 1 ---
	--- END OF BLOCK #196 ---

	if 100 <= data.get(data, "dura")

	 then
	JUMP TO BLOCK #197
	else
	JUMP TO BLOCK #198
	end


	--- BLOCK #197 1230-1235, warpins: 1 ---
	btns[#btns + 1] = {
		sprite = "pic/panels/bag/release.png",
		click = function ()
			--- BLOCK #0 1-4, warpins: 1 ---
			release("Ä§×åÖ¸ÁîÊé")

			return 
			--- END OF BLOCK #0 ---



		end
	}

	--- END OF BLOCK #197 ---

	FLOW; TARGET BLOCK #198


	--- BLOCK #198 1236-1240, warpins: 4 ---
	--- END OF BLOCK #198 ---

	if getData("name")

	 == "½ðÌõ" then
	JUMP TO BLOCK #199
	else
	JUMP TO BLOCK #201
	end


	--- BLOCK #199 1241-1243, warpins: 1 ---
	--- END OF BLOCK #199 ---

	if params.from == "bag" then
	JUMP TO BLOCK #200
	else
	JUMP TO BLOCK #201
	end


	--- BLOCK #200 1244-1249, warpins: 1 ---
	btns[#btns + 1] = {
		sprite = "pic/panels/bag/dh.png",
		click = function ()
			--- BLOCK #0 1-7, warpins: 1 ---
			an.newMsgbox("È·¶¨Ê¹ÓÃÒ»¸ù½ðÌõ¶Ò»»998000½ð±ÒÂð£¿", function ()
				--- BLOCK #0 1-13, warpins: 1 ---
				--- END OF BLOCK #0 ---

				slot0 = if g_data.bag:use("eat", data:get("makeIndex"))
				 then
				JUMP TO BLOCK #1
				else
				JUMP TO BLOCK #3
				end


				--- BLOCK #1 14-31, warpins: 1 ---
				net.send({
					CM_EAT,
					recog = data:get("makeIndex")
				})
				--- END OF BLOCK #1 ---

				slot0 = if main_scene.ui.panels.bag then
				JUMP TO BLOCK #2
				else
				JUMP TO BLOCK #3
				end


				--- BLOCK #2 32-43, warpins: 1 ---
				main_scene.ui.panels.bag:delItem(data:get("makeIndex"))

				--- END OF BLOCK #2 ---

				FLOW; TARGET BLOCK #3


				--- BLOCK #3 44-44, warpins: 3 ---
				return 
				--- END OF BLOCK #3 ---



			end, {
				center = true
			})

			return 
			--- END OF BLOCK #0 ---



		end
	}

	--- END OF BLOCK #200 ---

	FLOW; TARGET BLOCK #201


	--- BLOCK #201 1250-1254, warpins: 3 ---
	--- END OF BLOCK #201 ---

	if getData("name")
	 ~= "×£¸£¹Þ" then
	JUMP TO BLOCK #202
	else
	JUMP TO BLOCK #204
	end


	--- BLOCK #202 1255-1259, warpins: 1 ---
	--- END OF BLOCK #202 ---

	if getData("name")
	 ~= "ÈªË®¹Þ" then
	JUMP TO BLOCK #203
	else
	JUMP TO BLOCK #204
	end


	--- BLOCK #203 1260-1264, warpins: 1 ---
	--- END OF BLOCK #203 ---

	if getData("name")

	 == "Ä§Áî°ü" then
	JUMP TO BLOCK #204
	else
	JUMP TO BLOCK #206
	end


	--- BLOCK #204 1265-1267, warpins: 3 ---
	--- END OF BLOCK #204 ---

	if params.from == "equip" then
	JUMP TO BLOCK #205
	else
	JUMP TO BLOCK #206
	end


	--- BLOCK #205 1268-1273, warpins: 1 ---
	btns[#btns + 1] = {
		sprite = "pic/panels/bag/collect.png",
		click = function ()
			--- BLOCK #0 1-15, warpins: 1 ---
			net.send({
				CM_DBLCLICKUSEITEM,
				recog = data:get("makeIndex"),
				param = U_BUJUK
			})

			return 
			--- END OF BLOCK #0 ---



		end
	}
	--- END OF BLOCK #205 ---

	FLOW; TARGET BLOCK #206


	--- BLOCK #206 1274-1276, warpins: 3 ---
	--- END OF BLOCK #206 ---

	slot15 = if params.itemLink then
	JUMP TO BLOCK #207
	else
	JUMP TO BLOCK #208
	end


	--- BLOCK #207 1277-1282, warpins: 1 ---
	btns[#btns + 1] = {
		name = "Ìí¼ÓÁ´½Ó",
		click = params.itemLink
	}

	--- END OF BLOCK #207 ---

	FLOW; TARGET BLOCK #208


	--- BLOCK #208 1283-1286, warpins: 2 ---
	local function splitItem()
		--- BLOCK #0 1-75, warpins: 1 ---
		local input = nil
		local msgbox = an.newMsgbox("", function (idx)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if idx == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #9
			end


			--- BLOCK #1 3-10, warpins: 1 ---
			local count = tonumber(input:getString())

			--- END OF BLOCK #1 ---

			slot1 = if count then
			JUMP TO BLOCK #2
			else
			JUMP TO BLOCK #4
			end


			--- BLOCK #2 11-13, warpins: 1 ---
			--- END OF BLOCK #2 ---

			if count >= 0 then
			JUMP TO BLOCK #3
			else
			JUMP TO BLOCK #4
			end


			--- BLOCK #3 14-20, warpins: 1 ---
			--- END OF BLOCK #3 ---

			if data:get("dura")
			 < count then
			JUMP TO BLOCK #4
			else
			JUMP TO BLOCK #5
			end


			--- BLOCK #4 21-27, warpins: 3 ---
			main_scene.ui:tip("ÇëÊäÈëÕýÈ·µÄÊý×Ö£¡")

			--- END OF BLOCK #4 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #9


			--- BLOCK #5 28-43, warpins: 1 ---
			slot2 = net.send
			slot3 = {
				CM_SPLITITEM,
				tag = 0,
				recog = data:get("makeIndex"),
				param = count
			}
			--- END OF BLOCK #5 ---

			if params.from == "heroBag" then
			JUMP TO BLOCK #6
			else
			JUMP TO BLOCK #7
			end


			--- BLOCK #6 44-45, warpins: 1 ---
			slot4 = 1
			--- END OF BLOCK #6 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #8


			--- BLOCK #7 46-46, warpins: 1 ---
			slot4 = 0
			--- END OF BLOCK #7 ---

			FLOW; TARGET BLOCK #8


			--- BLOCK #8 47-53, warpins: 2 ---
			slot3.series = slot4

			slot2(slot3)
			playerorhero:setIsSplliting(true)

			--- END OF BLOCK #8 ---

			FLOW; TARGET BLOCK #9


			--- BLOCK #9 54-54, warpins: 3 ---
			return 
			--- END OF BLOCK #9 ---



		end, {
			disableScroll = true,
			hasCancel = true
		})

		an.newLabel("µ±Ç°¶ÑµþÊýÁ¿Îª " .. data:get("dura") .. ", ÇëÊäÈë²ð·ÖÊýÁ¿", 18, 1):addTo(msgbox.bg):pos(msgbox.bg:getw()/2, 180):anchor(0.5, 0.5)

		input = an.newInput(0, 0, 300, 36, 3, {
			bg = {
				h = 36,
				tex = res.gettex2("pic/scale/edit.png")
			}
		}):addTo(msgbox.bg):pos(msgbox.bg:getw()/2, 140):anchor(0.5, 0.5)

		return 
		--- END OF BLOCK #0 ---



	end

	--- END OF BLOCK #208 ---

	slot16 = if params.from then
	JUMP TO BLOCK #209
	else
	JUMP TO BLOCK #214
	end


	--- BLOCK #209 1287-1289, warpins: 1 ---
	--- END OF BLOCK #209 ---

	if params.from ~= "bag" then
	JUMP TO BLOCK #210
	else
	JUMP TO BLOCK #211
	end


	--- BLOCK #210 1290-1292, warpins: 1 ---
	--- END OF BLOCK #210 ---

	if params.from == "heroBag" then
	JUMP TO BLOCK #211
	else
	JUMP TO BLOCK #214
	end


	--- BLOCK #211 1293-1296, warpins: 2 ---
	--- END OF BLOCK #211 ---

	slot16 = if data.isPileUp()
	 then
	JUMP TO BLOCK #212
	else
	JUMP TO BLOCK #214
	end


	--- BLOCK #212 1297-1303, warpins: 1 ---
	--- END OF BLOCK #212 ---

	if 1 < data.get(data, "dura")

	 then
	JUMP TO BLOCK #213
	else
	JUMP TO BLOCK #214
	end


	--- BLOCK #213 1304-1308, warpins: 1 ---
	btns[#btns + 1] = {
		sprite = "pic/panels/bag/split.png",
		click = splitItem
	}

	--- END OF BLOCK #213 ---

	FLOW; TARGET BLOCK #214


	--- BLOCK #214 1309-1311, warpins: 5 ---
	--- END OF BLOCK #214 ---

	slot16 = if params.from then
	JUMP TO BLOCK #215
	else
	JUMP TO BLOCK #219
	end


	--- BLOCK #215 1312-1314, warpins: 1 ---
	--- END OF BLOCK #215 ---

	if params.from == "storage" then
	JUMP TO BLOCK #216
	else
	JUMP TO BLOCK #219
	end


	--- BLOCK #216 1315-1318, warpins: 1 ---
	--- END OF BLOCK #216 ---

	slot16 = if data.isPileUp()
	 then
	JUMP TO BLOCK #217
	else
	JUMP TO BLOCK #219
	end


	--- BLOCK #217 1319-1325, warpins: 1 ---
	--- END OF BLOCK #217 ---

	if 1 < data.get(data, "dura")

	 then
	JUMP TO BLOCK #218
	else
	JUMP TO BLOCK #219
	end


	--- BLOCK #218 1326-1330, warpins: 1 ---
	btns[#btns + 1] = {
		sprite = "pic/panels/bag/split.png",
		click = splitItem
	}
	--- END OF BLOCK #218 ---

	FLOW; TARGET BLOCK #219


	--- BLOCK #219 1331-1353, warpins: 5 ---
	local bg = display.newScale9Sprite(res.getframe2("pic/scale/scale24.png")):addto(layer):anchor(0, 1)
	local w = 0
	local h = 7
	local space = -2

	--- END OF BLOCK #219 ---

	for i, v in ipairs(btns)


	LOOP BLOCK #220
	GO OUT TO BLOCK #228


	--- BLOCK #220 1354-1362, warpins: 1 ---
	local params = {}
	params.pressImage = res.gettex2("pic/common/btn91.png")
	--- END OF BLOCK #220 ---

	slot26 = if v.name then
	JUMP TO BLOCK #221
	else
	JUMP TO BLOCK #224
	end


	--- BLOCK #221 1363-1366, warpins: 1 ---
	slot26 = {
		nil,
		20,
		1
	}
	--- END OF BLOCK #221 ---

	slot27 = if not v.name then
	JUMP TO BLOCK #222
	else
	JUMP TO BLOCK #223
	end


	--- BLOCK #222 1367-1367, warpins: 1 ---
	slot27 = ""
	--- END OF BLOCK #222 ---

	FLOW; TARGET BLOCK #223


	--- BLOCK #223 1368-1376, warpins: 2 ---
	slot26[1] = slot27
	slot26[4] = {
		color = def.colors.btn30
	}
	params.label = slot26
	--- END OF BLOCK #223 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #226


	--- BLOCK #224 1377-1379, warpins: 1 ---
	--- END OF BLOCK #224 ---

	slot26 = if v.sprite then
	JUMP TO BLOCK #225
	else
	JUMP TO BLOCK #226
	end


	--- BLOCK #225 1380-1384, warpins: 1 ---
	params.sprite = res.gettex2(v.sprite)
	--- END OF BLOCK #225 ---

	FLOW; TARGET BLOCK #226


	--- BLOCK #226 1385-1427, warpins: 3 ---
	local btn = an.newBtn(res.gettex2("pic/common/btn90.png"), function ()
		--- BLOCK #0 1-4, warpins: 1 ---
		v.click()

		return 
		--- END OF BLOCK #0 ---



	end, params):anchor(0.5, 0):pos(w*0.5, h):add2(bg, 999):scale(0.9)
	btns[i] = btn
	w = math.max(w, btn.getw(btn))
	h = h + btn.geth(btn) + space
	--- END OF BLOCK #226 ---

	FLOW; TARGET BLOCK #227


	--- BLOCK #227 1428-1429, warpins: 2 ---
	--- END OF BLOCK #227 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #219


	--- BLOCK #228 1430-1433, warpins: 1 ---
	--- END OF BLOCK #228 ---

	for i=#labels, 1, -1
	LOOP BLOCK #229
	GO OUT TO BLOCK #230

	--- BLOCK #229 1434-1463, warpins: 2 ---
	local v = labels[i]:addto(bg, 99):anchor(0, 0):pos(10, h)
	w = math.max(w, v.getw(v))
	h = h + v.geth(v) + space
	--- END OF BLOCK #229 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #228


	--- BLOCK #230 1464-1469, warpins: 1 ---
	w = w + 20
	h = h + 10

	--- END OF BLOCK #230 ---

	for i, v in ipairs(btns)

	LOOP BLOCK #231
	GO OUT TO BLOCK #233


	--- BLOCK #231 1470-1473, warpins: 1 ---
	v.setPositionX(v, w*0.5)

	--- END OF BLOCK #231 ---

	FLOW; TARGET BLOCK #232


	--- BLOCK #232 1474-1475, warpins: 2 ---
	--- END OF BLOCK #232 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #230


	--- BLOCK #233 1476-1480, warpins: 1 ---
	slot20 = cc.rect
	--- END OF BLOCK #233 ---

	slot21 = if not params.minx then
	JUMP TO BLOCK #234
	else
	JUMP TO BLOCK #235
	end


	--- BLOCK #234 1481-1481, warpins: 1 ---
	slot21 = 0
	--- END OF BLOCK #234 ---

	FLOW; TARGET BLOCK #235


	--- BLOCK #235 1482-1484, warpins: 2 ---
	--- END OF BLOCK #235 ---

	slot22 = if not params.miny then
	JUMP TO BLOCK #236
	else
	JUMP TO BLOCK #237
	end


	--- BLOCK #236 1485-1485, warpins: 1 ---
	slot22 = 0
	--- END OF BLOCK #236 ---

	FLOW; TARGET BLOCK #237


	--- BLOCK #237 1486-1488, warpins: 2 ---
	--- END OF BLOCK #237 ---

	slot23 = if not params.maxx then
	JUMP TO BLOCK #238
	else
	JUMP TO BLOCK #239
	end


	--- BLOCK #238 1489-1490, warpins: 1 ---
	slot23 = display.width
	--- END OF BLOCK #238 ---

	FLOW; TARGET BLOCK #239


	--- BLOCK #239 1491-1493, warpins: 2 ---
	--- END OF BLOCK #239 ---

	slot24 = if not params.maxy then
	JUMP TO BLOCK #240
	else
	JUMP TO BLOCK #241
	end


	--- BLOCK #240 1494-1495, warpins: 1 ---
	slot24 = display.height
	--- END OF BLOCK #240 ---

	FLOW; TARGET BLOCK #241


	--- BLOCK #241 1496-1501, warpins: 2 ---
	local rect = slot20(slot21, slot22, slot23, slot24)
	local p = scenePos
	--- END OF BLOCK #241 ---

	if p.x < rect.x then
	JUMP TO BLOCK #242
	else
	JUMP TO BLOCK #243
	end


	--- BLOCK #242 1502-1503, warpins: 1 ---
	p.x = rect.x
	--- END OF BLOCK #242 ---

	FLOW; TARGET BLOCK #243


	--- BLOCK #243 1504-1508, warpins: 2 ---
	--- END OF BLOCK #243 ---

	if rect.width < p.x + w then
	JUMP TO BLOCK #244
	else
	JUMP TO BLOCK #245
	end


	--- BLOCK #244 1509-1511, warpins: 1 ---
	p.x = rect.width - w
	--- END OF BLOCK #244 ---

	FLOW; TARGET BLOCK #245


	--- BLOCK #245 1512-1515, warpins: 2 ---
	--- END OF BLOCK #245 ---

	if rect.height < p.y then
	JUMP TO BLOCK #246
	else
	JUMP TO BLOCK #247
	end


	--- BLOCK #246 1516-1517, warpins: 1 ---
	p.y = rect.height
	--- END OF BLOCK #246 ---

	FLOW; TARGET BLOCK #247


	--- BLOCK #247 1518-1522, warpins: 2 ---
	--- END OF BLOCK #247 ---

	if p.y - h < rect.y then
	JUMP TO BLOCK #248
	else
	JUMP TO BLOCK #249
	end


	--- BLOCK #248 1523-1525, warpins: 1 ---
	p.y = h + rect.y

	--- END OF BLOCK #248 ---

	FLOW; TARGET BLOCK #249


	--- BLOCK #249 1526-1537, warpins: 2 ---
	bg.size(bg, w, h):pos(p.x, p.y)

	return layer
	--- END OF BLOCK #249 ---

	FLOW; TARGET BLOCK #250


	--- BLOCK #250 1538-1538, warpins: 2 ---
	--- END OF BLOCK #250 ---



end

return info
--- END OF BLOCK #0 ---



