--- BLOCK #0 1-47, warpins: 1 ---
local widgetDef = import("..console.widget._def")
local detail = import("..console.detail")
local iconFunc = import("..console.iconFunc")
local common = import("..common.common")
local magic = import("..common.magic")
local diyBtn = import("..common.diyBtn")
local diy = class("diy", function ()
	--- BLOCK #0 1-3, warpins: 1 ---
	return display.newNode()
	--- END OF BLOCK #0 ---



end)

table.merge(diy, {
	content,
	icons
})

diy.onCleanup = function (self)
	--- BLOCK #0 1-20, warpins: 1 ---
	main_scene.ui.console:showEditBg(false)
	main_scene.ui.console:hideAllRect()
	main_scene.ui.console:endEdit()

	return 
	--- END OF BLOCK #0 ---



end
diy.ready = function (self)
	--- BLOCK #0 1-6, warpins: 1 ---
	--- END OF BLOCK #0 ---

	for k, v in pairs(main_scene.ui.panels)

	LOOP BLOCK #1
	GO OUT TO BLOCK #6


	--- BLOCK #1 7-8, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if k ~= "diy" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #2 9-10, warpins: 1 ---
	--- END OF BLOCK #2 ---

	if k ~= "heroHead" then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #3 11-12, warpins: 1 ---
	--- END OF BLOCK #3 ---

	if k ~= "minimap" then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 13-18, warpins: 1 ---
	main_scene.ui:hidePanel(k)
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 19-20, warpins: 5 ---
	--- END OF BLOCK #5 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #6 21-34, warpins: 1 ---
	main_scene.ui.console:showEditBg(true)
	main_scene.ui.console:startEdit()

	return 
	--- END OF BLOCK #6 ---



end
diy.ctor = function (self, name)
	--- BLOCK #0 1-292, warpins: 1 ---
	self._supportMove = true

	self.setNodeEventEnabled(self, true)

	local bg = res.get2("pic/panels/diy/bg.png"):anchor(0, 0):add2(self)

	self.size(self, bg.getw(bg), bg.geth(bg)):anchor(0, 1):pos(90, display.height - 30)
	display.newSprite(res.gettex2("pic/panels/diy/title.png")):add2(self):anchor(0.5, 0.5):pos(self.getw(self)/2, self.geth(self) - 24)
	an.newBtn(res.gettex2("pic/common/close10.png"), function ()
		--- BLOCK #0 1-15, warpins: 1 ---
		sound.playSound("103")
		main_scene.ui:hidePanel("diySave")
		self:hidePanel()

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/close11.png"),
		size = cc.size(64, 64)
	}):anchor(1, 1):pos(self.getw(self) - 8, self.geth(self) - 8):addto(self):setName("diy_close")

	local hideBtn = nil
	hideBtn = an.newBtn(res.gettex2("pic/panels/diy/hide.png"), function ()
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if hideBtn.lock then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 5-5, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 6-34, warpins: 1 ---
		hideBtn.lock = true

		self.content:hide()
		self:runs({
			cc.ScaleTo:create(0.2, 0.01),
			cc.CallFunc:create(function ()
				--- BLOCK #0 1-11, warpins: 1 ---
				hideBtn.lock = false

				diyBtn.new()
				self:hide()

				return 
				--- END OF BLOCK #0 ---



			end)
		})

		return 
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 35-35, warpins: 2 ---
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/panels/diy/hide.png"),
		spriteOffset = {
			x = -13,
			y = 17
		}
	}):anchor(0.5, 0.5):pos(20, self.geth(self) - 25):add2(self, 1)

	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-11, warpins: 1 ---
		local text = "所有主界面的控件/均可编辑/, /拖动/面板上的/图标/可拖至主界面, /红色区域/代表按钮会/自动对齐/, /其他区域/均可/任意摆放/, /单击/主界面控件可以/编辑详情/, /拖动/可以/摆放位置/, 熟练使用该系统将有助于让你在玛法大陆/叱诧风云/！"
		local array = string.split(text, "/")
		local texts = {}

		--- END OF BLOCK #0 ---

		for i, v in ipairs(array)


		LOOP BLOCK #1
		GO OUT TO BLOCK #5


		--- BLOCK #1 12-14, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if i%2 == 1 then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 15-20, warpins: 1 ---
		texts[#texts + 1] = {
			v
		}
		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #3 21-32, warpins: 1 ---
		texts[#texts + 1] = {
			v,
			cc.c3b(255, 255, 0)
		}

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 33-34, warpins: 3 ---
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #5 35-41, warpins: 1 ---
		an.newMsgbox(texts, nil, {
			fontSize = 16
		})

		return 
		--- END OF BLOCK #5 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/diy/bz.png")
	}):anchor(0, 0.5):pos(26, 42):add2(self, 1)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		main_scene.ui:togglePanel("diySave")

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/diy/dq.png")
	}):anchor(1, 0.5):pos(self.getw(self) - 30, 42):add2(self, 1)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-12, warpins: 1 ---
		local msgbox = nil
		msgbox = an.newMsgbox("请输入想要保存的文件名", function (idx)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if idx == 2 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #5
			end


			--- BLOCK #1 3-14, warpins: 1 ---
			local fileName = msgbox.input:getString()

			--- END OF BLOCK #1 ---

			if 16 >= string.len(fileName)
			 then
			JUMP TO BLOCK #2
			else
			JUMP TO BLOCK #3
			end


			--- BLOCK #2 15-21, warpins: 1 ---
			--- END OF BLOCK #2 ---

			if string.len(fileName)
			 < 1 then
			JUMP TO BLOCK #3
			else
			JUMP TO BLOCK #4
			end


			--- BLOCK #3 22-29, warpins: 2 ---
			main_scene.ui.leftTopTip:show("请输入1-16位名字..")
			--- END OF BLOCK #3 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #5


			--- BLOCK #4 30-38, warpins: 1 ---
			self:saveArchive(msgbox.input:getString())

			--- END OF BLOCK #4 ---

			FLOW; TARGET BLOCK #5


			--- BLOCK #5 39-39, warpins: 3 ---
			return 
			--- END OF BLOCK #5 ---



		end, {
			disableScroll = true,
			input = 20,
			btnTexts = {
				"关闭",
				"保存"
			}
		})

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/diy/cd.png")
	}):anchor(1, 0.5):pos(self.getw(self) - 160, 42):add2(self, 1)
	an.newLabel("按钮可点击或拖至主界面", 18, 1, {
		color = def.colors.labelGray
	}):anchor(0.5, 0.5):pos(self.getw(self)*0.39, 42):add2(self, 1)
	self.ready(self)
	self.loadContent(self)

	return 
	--- END OF BLOCK #0 ---



end
diy.setShow = function (self, x, y)
	--- BLOCK #0 1-38, warpins: 1 ---
	self.runs(self, {
		cc.Place:create(cc.p(x, y)),
		cc.Show:create(),
		cc.ScaleTo:create(0.2, 1),
		cc.CallFunc:create(function ()
			--- BLOCK #0 1-6, warpins: 1 ---
			self.content:show()

			return 
			--- END OF BLOCK #0 ---



		end)
	})

	return 
	--- END OF BLOCK #0 ---



end
diy.loadContent = function (self)
	--- BLOCK #0 1-5, warpins: 1 ---
	self.icons = {}

	--- END OF BLOCK #0 ---

	slot1 = if self.content then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 6-9, warpins: 1 ---
	self.content:removeSelf()

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 10-87, warpins: 2 ---
	self.content = res.get2("pic/panels/diy/bg2.png"):anchor(0.5, 0):pos(self.getw(self)*0.5, 78):add2(self)
	local scroll = an.newScroll(4, 4, self.content:getw() - 8, self.content:geth() - 8):addTo(self.content)

	scroll.setName(scroll, "diyPanel_ScrollView")

	local config = {}
	config.widget = {
		title = "基本控件",
		icons = {}
	}
	config.base = {
		title = "天生技能",
		icons = {}
	}
	config.skill = {
		title = "职业技能",
		icons = {}
	}
	config.hero = {
		title = "英雄",
		icons = {}
	}
	config.prop = {
		title = "道具-快捷键",
		icons = {}
	}
	config.setting = {
		title = "设置-快捷键",
		icons = {}
	}
	config.panel = {
		title = "面板-快捷键",
		icons = {}
	}
	--- END OF BLOCK #2 ---

	if def.gameVersionType ~= "185" then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #3 88-92, warpins: 1 ---
	local cfg = {}

	--- END OF BLOCK #3 ---

	for k, v in pairs(config)


	LOOP BLOCK #4
	GO OUT TO BLOCK #7


	--- BLOCK #4 93-94, warpins: 1 ---
	--- END OF BLOCK #4 ---

	if k ~= "hero" then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 95-95, warpins: 1 ---
	cfg[k] = v
	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 96-97, warpins: 3 ---
	--- END OF BLOCK #6 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #3


	--- BLOCK #7 98-98, warpins: 1 ---
	config = cfg
	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 99-103, warpins: 2 ---
	local keys = {
		"rocker",
		"chat",
		"btnChat",
		"btnVoice",
		"btnAutoRat",
		"btnVoiceJIT",
		"btnPet",
		"btnHide",
		"btnHelper",
		"btnGroup"
	}

	--- END OF BLOCK #8 ---

	for i, v in ipairs(keys)


	LOOP BLOCK #9
	GO OUT TO BLOCK #12


	--- BLOCK #9 104-110, warpins: 1 ---
	local c = widgetDef.getConfig({
		key = v
	})
	--- END OF BLOCK #9 ---

	slot9 = if c then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #10 111-117, warpins: 1 ---
	config.widget.icons[#config.widget.icons + 1] = c

	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 118-119, warpins: 3 ---
	--- END OF BLOCK #11 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #12 120-124, warpins: 1 ---
	--- END OF BLOCK #12 ---

	for i, v in pairs(widgetDef.config)

	LOOP BLOCK #13
	GO OUT TO BLOCK #18


	--- BLOCK #13 125-129, warpins: 1 ---
	--- END OF BLOCK #13 ---

	if type(v)

	 == "table" then
	JUMP TO BLOCK #14
	else
	JUMP TO BLOCK #17
	end


	--- BLOCK #14 130-132, warpins: 1 ---
	--- END OF BLOCK #14 ---

	if v.class == "btnMove" then
	JUMP TO BLOCK #15
	else
	JUMP TO BLOCK #17
	end


	--- BLOCK #15 133-135, warpins: 1 ---
	--- END OF BLOCK #15 ---

	if v.btntype == "base" then
	JUMP TO BLOCK #16
	else
	JUMP TO BLOCK #17
	end


	--- BLOCK #16 136-142, warpins: 1 ---
	config.base.icons[#config.base.icons + 1] = v
	--- END OF BLOCK #16 ---

	FLOW; TARGET BLOCK #17


	--- BLOCK #17 143-144, warpins: 5 ---
	--- END OF BLOCK #17 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #12


	--- BLOCK #18 145-155, warpins: 1 ---
	local keys = def.magic.getMagicIds(g_data.player.job)

	--- END OF BLOCK #18 ---

	for i, v in ipairs(keys)


	LOOP BLOCK #19
	GO OUT TO BLOCK #22


	--- BLOCK #19 156-162, warpins: 1 ---
	local data = def.magic.getMagicConfigByUid(v)
	--- END OF BLOCK #19 ---

	slot10 = if data then
	JUMP TO BLOCK #20
	else
	JUMP TO BLOCK #21
	end


	--- BLOCK #20 163-182, warpins: 1 ---
	local dic = clone(widgetDef.getConfig({
		key = "btnSkillTemp"
	}))
	dic._data = {
		key2 = "btnSkillTemp",
		key = "skill" .. v,
		magicId = v
	}
	config.skill.icons[#config.skill.icons + 1] = dic

	--- END OF BLOCK #20 ---

	FLOW; TARGET BLOCK #21


	--- BLOCK #21 183-184, warpins: 3 ---
	--- END OF BLOCK #21 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #18


	--- BLOCK #22 185-188, warpins: 1 ---
	--- END OF BLOCK #22 ---

	if def.gameVersionType == "185" then
	JUMP TO BLOCK #23
	else
	JUMP TO BLOCK #29
	end


	--- BLOCK #23 189-193, warpins: 1 ---
	--- END OF BLOCK #23 ---

	for i, v in pairs(widgetDef.config)

	LOOP BLOCK #24
	GO OUT TO BLOCK #29


	--- BLOCK #24 194-198, warpins: 1 ---
	--- END OF BLOCK #24 ---

	if type(v)

	 == "table" then
	JUMP TO BLOCK #25
	else
	JUMP TO BLOCK #28
	end


	--- BLOCK #25 199-201, warpins: 1 ---
	--- END OF BLOCK #25 ---

	if v.class == "btnMove" then
	JUMP TO BLOCK #26
	else
	JUMP TO BLOCK #28
	end


	--- BLOCK #26 202-204, warpins: 1 ---
	--- END OF BLOCK #26 ---

	if v.btntype == "hero" then
	JUMP TO BLOCK #27
	else
	JUMP TO BLOCK #28
	end


	--- BLOCK #27 205-211, warpins: 1 ---
	config.hero.icons[#config.hero.icons + 1] = v

	--- END OF BLOCK #27 ---

	FLOW; TARGET BLOCK #28


	--- BLOCK #28 212-213, warpins: 5 ---
	--- END OF BLOCK #28 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #23


	--- BLOCK #29 214-218, warpins: 2 ---
	--- END OF BLOCK #29 ---

	for i, v in pairs(widgetDef.config)

	LOOP BLOCK #30
	GO OUT TO BLOCK #35


	--- BLOCK #30 219-223, warpins: 1 ---
	--- END OF BLOCK #30 ---

	if type(v)

	 == "table" then
	JUMP TO BLOCK #31
	else
	JUMP TO BLOCK #34
	end


	--- BLOCK #31 224-226, warpins: 1 ---
	--- END OF BLOCK #31 ---

	if v.class == "btnMove" then
	JUMP TO BLOCK #32
	else
	JUMP TO BLOCK #34
	end


	--- BLOCK #32 227-229, warpins: 1 ---
	--- END OF BLOCK #32 ---

	if v.btntype == "prop" then
	JUMP TO BLOCK #33
	else
	JUMP TO BLOCK #34
	end


	--- BLOCK #33 230-236, warpins: 1 ---
	config.prop.icons[#config.prop.icons + 1] = v

	--- END OF BLOCK #33 ---

	FLOW; TARGET BLOCK #34


	--- BLOCK #34 237-238, warpins: 5 ---
	--- END OF BLOCK #34 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #29


	--- BLOCK #35 239-243, warpins: 1 ---
	--- END OF BLOCK #35 ---

	for i, v in pairs(widgetDef.config)

	LOOP BLOCK #36
	GO OUT TO BLOCK #43


	--- BLOCK #36 244-248, warpins: 1 ---
	--- END OF BLOCK #36 ---

	if type(v)

	 == "table" then
	JUMP TO BLOCK #37
	else
	JUMP TO BLOCK #42
	end


	--- BLOCK #37 249-251, warpins: 1 ---
	--- END OF BLOCK #37 ---

	if v.class == "btnMove" then
	JUMP TO BLOCK #38
	else
	JUMP TO BLOCK #42
	end


	--- BLOCK #38 252-254, warpins: 1 ---
	--- END OF BLOCK #38 ---

	if v.btntype == "setting" then
	JUMP TO BLOCK #39
	else
	JUMP TO BLOCK #42
	end


	--- BLOCK #39 255-257, warpins: 1 ---
	--- END OF BLOCK #39 ---

	slot10 = if v.job then
	JUMP TO BLOCK #40
	else
	JUMP TO BLOCK #41
	end


	--- BLOCK #40 258-263, warpins: 1 ---
	--- END OF BLOCK #40 ---

	if v.job == g_data.player.job then
	JUMP TO BLOCK #41
	else
	JUMP TO BLOCK #42
	end


	--- BLOCK #41 264-270, warpins: 2 ---
	config.setting.icons[#config.setting.icons + 1] = v

	--- END OF BLOCK #41 ---

	FLOW; TARGET BLOCK #42


	--- BLOCK #42 271-272, warpins: 6 ---
	--- END OF BLOCK #42 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #35


	--- BLOCK #43 273-277, warpins: 1 ---
	--- END OF BLOCK #43 ---

	for i, v in pairs(widgetDef.config)

	LOOP BLOCK #44
	GO OUT TO BLOCK #49


	--- BLOCK #44 278-282, warpins: 1 ---
	--- END OF BLOCK #44 ---

	if type(v)

	 == "table" then
	JUMP TO BLOCK #45
	else
	JUMP TO BLOCK #48
	end


	--- BLOCK #45 283-285, warpins: 1 ---
	--- END OF BLOCK #45 ---

	if v.class == "btnMove" then
	JUMP TO BLOCK #46
	else
	JUMP TO BLOCK #48
	end


	--- BLOCK #46 286-288, warpins: 1 ---
	--- END OF BLOCK #46 ---

	if v.btntype == "panel" then
	JUMP TO BLOCK #47
	else
	JUMP TO BLOCK #48
	end


	--- BLOCK #47 289-295, warpins: 1 ---
	config.panel.icons[#config.panel.icons + 1] = v
	--- END OF BLOCK #47 ---

	FLOW; TARGET BLOCK #48


	--- BLOCK #48 296-297, warpins: 5 ---
	--- END OF BLOCK #48 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #43


	--- BLOCK #49 298-328, warpins: 1 ---
	local titleSpace = 40
	local iconSpace = 80
	local begin = 12
	local iconLineNum = math.modf((self.content:getw() - begin)/iconSpace)

	local function getH()
		--- BLOCK #0 1-5, warpins: 1 ---
		local h = 0

		--- END OF BLOCK #0 ---

		for k, v in pairs(config)

		LOOP BLOCK #1
		GO OUT TO BLOCK #3


		--- BLOCK #1 6-22, warpins: 1 ---
		print(k, #v.icons)

		h = h + titleSpace + math.ceil(#v.icons/iconLineNum)*iconSpace

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 23-24, warpins: 2 ---
		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #3 25-25, warpins: 1 ---
		return h
		--- END OF BLOCK #3 ---



	end

	local h = getH()

	scroll.setScrollSize(scroll, scroll.getw(scroll), h)

	local wNumCount = 0
	local hCount = 0

	local function addTitle(text)
		--- BLOCK #0 1-39, warpins: 1 ---
		an.newLabel(text, 18, 1, {
			color = cc.c3b(255, 255, 0)
		}):anchor(0, 0.5):pos(begin + 10, h - hCount - titleSpace/2):add2(scroll)

		hCount = hCount + titleSpace

		return 
		--- END OF BLOCK #0 ---



	end

	local function addIcon(config, hasNext)
		--- BLOCK #0 1-6, warpins: 1 ---
		local data = {}
		data.key = config.key

		--- END OF BLOCK #0 ---

		slot3 = if config._data then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 7-11, warpins: 1 ---
		table.merge(data, config._data)

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 12-21, warpins: 2 ---
		local files = iconFunc:getFilenames(config, data)
		local filter = nil

		--- END OF BLOCK #2 ---

		if config.class == "btnMove" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #3 22-24, warpins: 1 ---
		--- END OF BLOCK #3 ---

		if config.btntype == "skill" then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #4 25-34, warpins: 1 ---
		--- END OF BLOCK #4 ---

		slot5 = if not g_data.player:getMagic(tonumber(data.magicId))

		 then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 35-39, warpins: 1 ---
		filter = res.getFilter("gray")
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 40-79, warpins: 4 ---
		local tmpIcon = nil
		local x = begin + wNumCount*iconSpace + iconSpace/2
		local y = h - hCount - iconSpace/2

		res.get2("pic/console/iconUnder.png"):pos(x, y):add2(scroll)

		local btn = nil
		slot9 = an.newBtn
		slot10 = res.gettex2(files.bg)

		function slot11()
			--- BLOCK #0 1-37, warpins: 1 ---
			main_scene.ui.console:showRect(nil, data.key)

			local p = btn:convertToWorldSpace(cc.p(btn:centerPos()))

			detail.new(config, data, p.x, p.y, btn:getw(), btn:geth(), "diy")

			return 
			--- END OF BLOCK #0 ---



		end

		slot12 = {
			pressBig = true,
			support = "drag"
		}
		--- END OF BLOCK #6 ---

		slot13 = if files.sprite then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 80-83, warpins: 1 ---
		slot13 = res.gettex2(files.sprite)
		--- END OF BLOCK #7 ---

		FLOW; TARGET BLOCK #8


		--- BLOCK #8 84-87, warpins: 2 ---
		slot12.sprite = slot13
		slot12.filter = filter
		--- END OF BLOCK #8 ---

		if filter == nil then
		JUMP TO BLOCK #9
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #9 88-89, warpins: 1 ---
		slot13 = false
		--- END OF BLOCK #9 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #11


		--- BLOCK #10 90-90, warpins: 1 ---
		slot13 = true
		--- END OF BLOCK #10 ---

		FLOW; TARGET BLOCK #11


		--- BLOCK #11 91-109, warpins: 2 ---
		slot12.filterOpen = slot13
		slot12.call_drag_moving = function (btn, event)
			--- BLOCK #0 1-3, warpins: 1 ---
			--- END OF BLOCK #0 ---

			slot2 = if not tmpIcon then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #4
			end


			--- BLOCK #1 4-40, warpins: 1 ---
			btn.hide(btn)

			tmpIcon = res.get2(files.bg):scale(1.5):add2(self)

			res.get2(files.sprite):add2(tmpIcon):pos(tmpIcon:centerPos())
			--- END OF BLOCK #1 ---

			slot2 = if files.text then
			JUMP TO BLOCK #2
			else
			JUMP TO BLOCK #3
			end


			--- BLOCK #2 41-58, warpins: 1 ---
			res.get2(files.text):add2(tmpIcon):pos(tmpIcon:getw()/2, 10)
			--- END OF BLOCK #2 ---

			FLOW; TARGET BLOCK #3


			--- BLOCK #3 59-63, warpins: 2 ---
			tmpIcon:setName("diy_tmpIcon")

			--- END OF BLOCK #3 ---

			FLOW; TARGET BLOCK #4


			--- BLOCK #4 64-90, warpins: 2 ---
			local p = btn.convertToWorldSpace(btn, cc.p(btn.centerPos(btn)))
			local rect = self:getBoundingBox()

			tmpIcon:pos(p.x - rect.x, p.y - rect.y)
			--- END OF BLOCK #4 ---

			if config.class == "btnMove" then
			JUMP TO BLOCK #5
			else
			JUMP TO BLOCK #6
			end


			--- BLOCK #5 91-111, warpins: 1 ---
			main_scene.ui.console:checkBtnAreaShow(cc.p(tmpIcon:getPositionX() + rect.x, tmpIcon:getPositionY() + rect.y))

			--- END OF BLOCK #5 ---

			FLOW; TARGET BLOCK #6


			--- BLOCK #6 112-112, warpins: 2 ---
			return 
			--- END OF BLOCK #6 ---



		end
		slot12.call_drag_end = function (btn, event)
			--- BLOCK #0 1-26, warpins: 1 ---
			local rect = cc.rect(0, 0, self:getw(), self:geth())

			--- END OF BLOCK #0 ---

			slot3 = if not cc.rectContainsPoint(rect, cc.p(tmpIcon:getPosition()))

			 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #6
			end


			--- BLOCK #1 27-29, warpins: 1 ---
			--- END OF BLOCK #1 ---

			if filter == nil then
			JUMP TO BLOCK #2
			else
			JUMP TO BLOCK #4
			end


			--- BLOCK #2 30-59, warpins: 1 ---
			local rect = self:getBoundingBox()
			data.x = rect.x + tmpIcon:getPositionX()
			data.y = rect.y + tmpIcon:getPositionY()

			--- END OF BLOCK #2 ---

			if main_scene.ui.console:addWidgetByPanel(data, "diy")
			 == "exist" then
			JUMP TO BLOCK #3
			else
			JUMP TO BLOCK #5
			end


			--- BLOCK #3 60-66, warpins: 1 ---
			an.newMsgbox("控件已存在!", nil, {
				center = true
			})
			--- END OF BLOCK #3 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #5


			--- BLOCK #4 67-72, warpins: 1 ---
			an.newMsgbox("控件未激活!", nil, {
				center = true
			})
			--- END OF BLOCK #4 ---

			FLOW; TARGET BLOCK #5


			--- BLOCK #5 73-90, warpins: 3 ---
			btn.show(btn):pos(x, y):scale(0.01):scaleTo(0.1, 1)
			--- END OF BLOCK #5 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #7


			--- BLOCK #6 91-99, warpins: 1 ---
			btn.show(btn):moveTo(0.1, x, y)
			--- END OF BLOCK #6 ---

			FLOW; TARGET BLOCK #7


			--- BLOCK #7 100-113, warpins: 2 ---
			main_scene.ui.console:checkBtnAreaShow(nil, true)
			tmpIcon:removeSelf()

			tmpIcon = nil

			return 
			--- END OF BLOCK #7 ---



		end
		btn = slot9(slot10, slot11, slot12):pos(x, y):add2(scroll)

		--- END OF BLOCK #11 ---

		if config.key == "btnSkillTemp" then
		JUMP TO BLOCK #12
		else
		JUMP TO BLOCK #13
		end


		--- BLOCK #12 110-117, warpins: 1 ---
		btn.setName(btn, "diyPanel_" .. config._data.key)
		--- END OF BLOCK #12 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #14


		--- BLOCK #13 118-123, warpins: 1 ---
		btn.setName(btn, "diyPanel_" .. config.key)
		--- END OF BLOCK #13 ---

		FLOW; TARGET BLOCK #14


		--- BLOCK #14 124-126, warpins: 2 ---
		--- END OF BLOCK #14 ---

		slot9 = if files.text then
		JUMP TO BLOCK #15
		else
		JUMP TO BLOCK #16
		end


		--- BLOCK #15 127-142, warpins: 1 ---
		res.get2(files.text):pos(btn.getw(btn)/2, 10):add2(btn)

		--- END OF BLOCK #15 ---

		FLOW; TARGET BLOCK #16


		--- BLOCK #16 143-149, warpins: 2 ---
		wNumCount = wNumCount + 1
		--- END OF BLOCK #16 ---

		if iconLineNum <= wNumCount then
		JUMP TO BLOCK #17
		else
		JUMP TO BLOCK #19
		end


		--- BLOCK #17 150-151, warpins: 1 ---
		--- END OF BLOCK #17 ---

		slot1 = if hasNext then
		JUMP TO BLOCK #18
		else
		JUMP TO BLOCK #19
		end


		--- BLOCK #18 152-156, warpins: 1 ---
		wNumCount = 0
		hCount = hCount + iconSpace
		--- END OF BLOCK #18 ---

		FLOW; TARGET BLOCK #19


		--- BLOCK #19 157-167, warpins: 3 ---
		self.icons[data.key] = btn

		self:checkSelect(data.key)

		return 
		--- END OF BLOCK #19 ---



	end

	local orders = nil
	--- END OF BLOCK #49 ---

	if def.gameVersionType ~= "185" then
	JUMP TO BLOCK #50
	else
	JUMP TO BLOCK #51
	end


	--- BLOCK #50 329-343, warpins: 1 ---
	orders = {
		config.widget,
		config.base,
		config.skill,
		config.prop,
		config.setting,
		config.panel
	}
	--- END OF BLOCK #50 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #52


	--- BLOCK #51 344-359, warpins: 1 ---
	orders = {
		config.widget,
		config.base,
		config.skill,
		config.hero,
		config.prop,
		config.setting,
		config.panel
	}

	--- END OF BLOCK #51 ---

	FLOW; TARGET BLOCK #52


	--- BLOCK #52 360-363, warpins: 2 ---
	--- END OF BLOCK #52 ---

	for i, v in ipairs(orders)

	LOOP BLOCK #53
	GO OUT TO BLOCK #61


	--- BLOCK #53 364-370, warpins: 1 ---
	addTitle(v.title)
	--- END OF BLOCK #53 ---

	for i2, v2 in ipairs(v.icons)


	LOOP BLOCK #54
	GO OUT TO BLOCK #59


	--- BLOCK #54 371-376, warpins: 1 ---
	slot26 = addIcon
	slot27 = v2
	--- END OF BLOCK #54 ---

	if i2 >= #v.icons then
	JUMP TO BLOCK #55
	else
	JUMP TO BLOCK #56
	end


	--- BLOCK #55 377-378, warpins: 1 ---
	slot28 = false
	--- END OF BLOCK #55 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #57


	--- BLOCK #56 379-379, warpins: 1 ---
	slot28 = true

	--- END OF BLOCK #56 ---

	FLOW; TARGET BLOCK #57


	--- BLOCK #57 380-380, warpins: 2 ---
	slot26(slot27, slot28)

	--- END OF BLOCK #57 ---

	FLOW; TARGET BLOCK #58


	--- BLOCK #58 381-382, warpins: 2 ---
	--- END OF BLOCK #58 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #53


	--- BLOCK #59 383-384, warpins: 1 ---
	hCount = hCount + iconSpace
	wNumCount = 0

	--- END OF BLOCK #59 ---

	FLOW; TARGET BLOCK #60


	--- BLOCK #60 385-386, warpins: 2 ---
	--- END OF BLOCK #60 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #52


	--- BLOCK #61 387-388, warpins: 1 ---
	return 
	--- END OF BLOCK #61 ---



end
diy.checkSelect = function (self, key, console)
	--- BLOCK #0 1-4, warpins: 1 ---
	local btn = self.icons[key]

	--- END OF BLOCK #0 ---

	slot3 = if not btn then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 5-5, warpins: 1 ---
	return 

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 6-8, warpins: 2 ---
	--- END OF BLOCK #2 ---

	slot4 = if not btn.selectMark then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 9-33, warpins: 1 ---
	btn.selectMark = res.get2("pic/common/selectMark.png"):anchor(1, 1):pos(btn.getw(btn) - 20, btn.geth(btn) + 20):add2(btn)
	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 34-35, warpins: 2 ---
	--- END OF BLOCK #4 ---

	slot2 = if not console then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 36-38, warpins: 1 ---
	console = main_scene.ui.console
	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 39-47, warpins: 2 ---
	slot5 = btn.selectMark
	slot4 = btn.selectMark.setVisible

	--- END OF BLOCK #6 ---

	if console.get(console, key)

	 == nil then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 48-49, warpins: 1 ---
	slot6 = false
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #9


	--- BLOCK #8 50-50, warpins: 1 ---
	slot6 = true

	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 51-52, warpins: 2 ---
	slot4(slot5, slot6)

	return 
	--- END OF BLOCK #9 ---



end
diy.saveArchive = function (self, key)
	--- BLOCK #0 1-9, warpins: 1 ---
	local listDatas = cache.getDiy(common.getPlayerName(), key)

	--- END OF BLOCK #0 ---

	slot2 = if listDatas then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 10-17, warpins: 1 ---
	main_scene.ui.leftTopTip:show("不能与现有配置表重名..")

	return 

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 18-27, warpins: 2 ---
	listDatas = cache.getDiy(common.getPlayerName(), "_list")
	--- END OF BLOCK #2 ---

	slot2 = if not listDatas then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 28-28, warpins: 1 ---
	listDatas = {}

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 29-32, warpins: 2 ---
	--- END OF BLOCK #4 ---

	if 7 <= #listDatas then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 33-40, warpins: 1 ---
	main_scene.ui.leftTopTip:show("最多只能保存七个配置表..")

	return 

	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 41-87, warpins: 2 ---
	local timeValue = os.date("%Y-%m-%d")
	listDatas[#listDatas + 1] = {
		key,
		timeValue
	}

	cache.removeDiy(common.getPlayerName(), "_list")
	cache.saveDiy(common.getPlayerName(), "_list", listDatas)
	cache.removeDiy(common.getPlayerName(), key)
	main_scene.ui.console:saveEdit(key)
	main_scene.ui.leftTopTip:show("配置保存成功..")

	return 
	--- END OF BLOCK #6 ---



end

return diy
--- END OF BLOCK #0 ---



