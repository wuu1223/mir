--- BLOCK #0 1-117, warpins: 1 ---
local path = "pic/panels/voice/"
local common = import("..common.common")
local voice = class("voice", function ()
	--- BLOCK #0 1-3, warpins: 1 ---
	return display.newNode()
	--- END OF BLOCK #0 ---



end)

table.merge(voice, {})

voice.ctor = function (self)
	--- BLOCK #0 1-119, warpins: 1 ---
	self._supportMove = true
	local bg = res.get2("pic/panels/voice/bg.png"):anchor(0, 0):add2(self)

	self.size(self, bg.getw(bg), bg.geth(bg)):anchor(0.5, 0.5):center()
	res.get2(path .. "title.png"):add2(bg):pos(bg.getw(bg)/2, bg.geth(bg) - 24)
	an.newBtn(res.gettex2("pic/common/close10.png"), function ()
		--- BLOCK #0 1-9, warpins: 1 ---
		sound.playSound("103")
		self:hidePanel()

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/close11.png"),
		size = cc.size(64, 64)
	}):anchor(1, 1):pos(self.getw(self) - 6, self.geth(self) - 5):addto(self)

	local scroll = an.newScroll(14, 75, 118, 320):add2(self)
	local tabs = {}
	tabs[1] = {
		"public",
		"公 共"
	}
	tabs[2] = {
		"group",
		"组 队"
	}
	tabs[3] = {
		"battleTeam",
		"战 队"
	}
	tabs[4] = {
		"guild",
		"行 会"
	}
	local btns = {}

	local function clickBtn(key)
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if self.channel == key then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 5-5, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 6-11, warpins: 2 ---
		self.channel = key

		--- END OF BLOCK #2 ---

		for k, v in pairs(btns)


		LOOP BLOCK #3
		GO OUT TO BLOCK #8


		--- BLOCK #3 12-17, warpins: 1 ---
		slot7 = v
		slot6 = v.setIsSelect
		--- END OF BLOCK #3 ---

		if k ~= self.channel then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 18-19, warpins: 1 ---
		slot8 = false
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #5 20-20, warpins: 1 ---
		slot8 = true

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 21-21, warpins: 2 ---
		slot6(slot7, slot8)
		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 22-23, warpins: 2 ---
		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #2


		--- BLOCK #8 24-28, warpins: 1 ---
		self:load()

		return 
		--- END OF BLOCK #8 ---



	end

	--- END OF BLOCK #0 ---

	for i, v in ipairs(tabs)


	LOOP BLOCK #1
	GO OUT TO BLOCK #3


	--- BLOCK #1 120-186, warpins: 1 ---
	local btn = an.newBtn(res.gettex2("pic/common/btn60.png"), function ()
		--- BLOCK #0 1-9, warpins: 1 ---
		sound.playSound("103")
		clickBtn(v[1])

		return 
		--- END OF BLOCK #0 ---



	end, {
		support = "scroll",
		sprite = res.gettex2("pic/panels/voice/" .. v[1] .. ".png"),
		select = {
			res.gettex2("pic/common/btn61.png"),
			manual = true
		}
	}):add2(scroll):pos(scroll.getw(scroll)/2, scroll.geth(scroll) - 23 - (i - 1)*52)
	btn.icon = res.get2(path .. "icon.png"):add2(btn):pos(btn.getw(btn) - 15, 15):hide()
	btns[v[1]] = btn
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 187-188, warpins: 2 ---
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #3 189-198, warpins: 1 ---
	self.refershEnterIcon = function ()
		--- BLOCK #0 1-6, warpins: 1 ---
		local enterTab = nil
		--- END OF BLOCK #0 ---

		slot1 = if g_data.voice.roomData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 7-17, warpins: 1 ---
		enterTab = self:channelType2TabKey(voice.getChannelType(g_data.voice.channelType))

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 18-21, warpins: 2 ---
		--- END OF BLOCK #2 ---

		for k, v in pairs(btns)


		LOOP BLOCK #3
		GO OUT TO BLOCK #8


		--- BLOCK #3 22-26, warpins: 1 ---
		slot7 = v.icon
		slot6 = v.icon.setVisible
		--- END OF BLOCK #3 ---

		if k ~= enterTab then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 27-28, warpins: 1 ---
		slot8 = false
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #5 29-29, warpins: 1 ---
		slot8 = true

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 30-30, warpins: 2 ---
		slot6(slot7, slot8)

		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 31-32, warpins: 2 ---
		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #2


		--- BLOCK #8 33-33, warpins: 1 ---
		return 
		--- END OF BLOCK #8 ---



	end

	self.refershEnterIcon()

	local enterTab = nil
	--- END OF BLOCK #3 ---

	slot7 = if g_data.voice.roomData then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 199-208, warpins: 1 ---
	enterTab = self.channelType2TabKey(self, voice.getChannelType(g_data.voice.channelType))
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 209-213, warpins: 2 ---
	self.channel = nil
	slot7 = clickBtn
	--- END OF BLOCK #5 ---

	slot8 = if not enterTab then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 214-214, warpins: 1 ---
	slot8 = "public"

	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 215-217, warpins: 2 ---
	slot7(slot8)

	return 
	--- END OF BLOCK #7 ---



end
voice.channelType2TabKey = function (self, channelType)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	if channelType == "ctGuild" then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-5, warpins: 1 ---
	return "guild"
	--- END OF BLOCK #1 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #6


	--- BLOCK #2 6-7, warpins: 1 ---
	--- END OF BLOCK #2 ---

	if channelType == "ctCorps" then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 8-10, warpins: 1 ---
	return "battleTeam"
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #6


	--- BLOCK #4 11-12, warpins: 1 ---
	--- END OF BLOCK #4 ---

	if channelType == "ctGroup" then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 13-14, warpins: 1 ---
	return "group"
	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 15-16, warpins: 4 ---
	return "public"
	--- END OF BLOCK #6 ---



end
voice.load = function (self)
	--- BLOCK #0 1-5, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if g_data.voice.roomData then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #1 6-13, warpins: 1 ---
	local channelType = voice.getChannelType(g_data.voice.channelType)

	--- END OF BLOCK #1 ---

	if channelType ~= "ctPublic" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 14-15, warpins: 1 ---
	--- END OF BLOCK #2 ---

	if channelType == "ctPersonal" then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 16-18, warpins: 2 ---
	--- END OF BLOCK #3 ---

	if self.channel ~= "public" then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #4 19-20, warpins: 2 ---
	--- END OF BLOCK #4 ---

	if channelType == "ctGuild" then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 21-23, warpins: 1 ---
	--- END OF BLOCK #5 ---

	if self.channel ~= "guild" then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #6 24-25, warpins: 2 ---
	--- END OF BLOCK #6 ---

	if channelType == "ctCorps" then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 26-28, warpins: 1 ---
	--- END OF BLOCK #7 ---

	if self.channel ~= "battleTeam" then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #8 29-30, warpins: 2 ---
	--- END OF BLOCK #8 ---

	if channelType == "ctGroup" then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #9 31-33, warpins: 1 ---
	--- END OF BLOCK #9 ---

	if self.channel == "group" then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #10 34-37, warpins: 4 ---
	self.loadMemberList(self)

	return 

	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 38-40, warpins: 4 ---
	--- END OF BLOCK #11 ---

	slot1 = if self.content then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #13
	end


	--- BLOCK #12 41-46, warpins: 1 ---
	self.content:removeSelf()

	self.content = nil

	--- END OF BLOCK #12 ---

	FLOW; TARGET BLOCK #13


	--- BLOCK #13 47-49, warpins: 2 ---
	--- END OF BLOCK #13 ---

	if self.channel == "public" then
	JUMP TO BLOCK #14
	else
	JUMP TO BLOCK #15
	end


	--- BLOCK #14 50-56, warpins: 1 ---
	net.send({
		CM_QUERY_CHANNEL_LIST
	})

	--- END OF BLOCK #14 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #23


	--- BLOCK #15 57-60, warpins: 1 ---
	local param = nil
	--- END OF BLOCK #15 ---

	if self.channel == "group" then
	JUMP TO BLOCK #16
	else
	JUMP TO BLOCK #17
	end


	--- BLOCK #16 61-62, warpins: 1 ---
	param = 4
	--- END OF BLOCK #16 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #22


	--- BLOCK #17 63-65, warpins: 1 ---
	--- END OF BLOCK #17 ---

	if self.channel == "guild" then
	JUMP TO BLOCK #18
	else
	JUMP TO BLOCK #19
	end


	--- BLOCK #18 66-67, warpins: 1 ---
	param = 2
	--- END OF BLOCK #18 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #22


	--- BLOCK #19 68-70, warpins: 1 ---
	--- END OF BLOCK #19 ---

	if self.channel == "battleTeam" then
	JUMP TO BLOCK #20
	else
	JUMP TO BLOCK #21
	end


	--- BLOCK #20 71-72, warpins: 1 ---
	param = 3

	--- END OF BLOCK #20 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #22


	--- BLOCK #21 73-77, warpins: 1 ---
	assert(false, "invalid self.channel.")

	return 

	--- END OF BLOCK #21 ---

	FLOW; TARGET BLOCK #22


	--- BLOCK #22 78-84, warpins: 4 ---
	net.send({
		CM_QUERY_CHANNEL_MEMBERS,
		param = param
	})

	--- END OF BLOCK #22 ---

	FLOW; TARGET BLOCK #23


	--- BLOCK #23 85-85, warpins: 2 ---
	return 
	--- END OF BLOCK #23 ---



end
voice.exitChannel = function (self, exitType)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if self.content then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-9, warpins: 1 ---
	self.content:removeSelf()

	self.content = nil

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 10-11, warpins: 2 ---
	--- END OF BLOCK #2 ---

	if exitType ~= 4 then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 12-14, warpins: 1 ---
	self.load(self)
	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 15-18, warpins: 2 ---
	self.refershEnterIcon(self)

	return 
	--- END OF BLOCK #4 ---



end
voice.recvChannelList = function (self, msg, buf, bufLen)
	--- BLOCK #0 1-6, warpins: 1 ---
	self.channelList = {}
	--- END OF BLOCK #0 ---

	for i=1, msg.param, 1
	LOOP BLOCK #1
	GO OUT TO BLOCK #2

	--- BLOCK #1 7-23, warpins: 2 ---
	self.channelList[#self.channelList + 1], buf, bufLen = getRecord("TClientChannelInfo"):decode(buf, bufLen, true)

	--- END OF BLOCK #1 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #2 24-26, warpins: 1 ---
	--- END OF BLOCK #2 ---

	if self.channel == "public" then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 27-29, warpins: 1 ---
	self.loadChannelList(self)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 30-30, warpins: 2 ---
	return 
	--- END OF BLOCK #4 ---



end
voice.recvMemberList = function (self, msg, buf, bufLen, channelType, isEnter)
	--- BLOCK #0 1-6, warpins: 1 ---
	local channelTypeStr = voice.getChannelType(channelType)
	--- END OF BLOCK #0 ---

	if channelTypeStr ~= "ctPublic" then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 7-8, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if channelTypeStr == "ctPersonal" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 9-11, warpins: 2 ---
	--- END OF BLOCK #2 ---

	if self.channel ~= "public" then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #3 12-13, warpins: 2 ---
	--- END OF BLOCK #3 ---

	if channelTypeStr == "ctGuild" then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 14-16, warpins: 1 ---
	--- END OF BLOCK #4 ---

	if self.channel ~= "guild" then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #5 17-18, warpins: 2 ---
	--- END OF BLOCK #5 ---

	if channelTypeStr == "ctCorps" then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 19-21, warpins: 1 ---
	--- END OF BLOCK #6 ---

	if self.channel ~= "battleTeam" then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #7 22-23, warpins: 2 ---
	--- END OF BLOCK #7 ---

	if channelTypeStr == "ctGroup" then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #8 24-26, warpins: 1 ---
	--- END OF BLOCK #8 ---

	if self.channel ~= "group" then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #9 27-28, warpins: 2 ---
	slot7 = false
	--- END OF BLOCK #9 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #11


	--- BLOCK #10 29-29, warpins: 4 ---
	local recvIsCurTab = true

	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 30-31, warpins: 2 ---
	--- END OF BLOCK #11 ---

	slot5 = if isEnter then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #12 32-36, warpins: 1 ---
	self.refershEnterIcon(self)
	--- END OF BLOCK #12 ---

	slot7 = if recvIsCurTab then
	JUMP TO BLOCK #13
	else
	JUMP TO BLOCK #23
	end


	--- BLOCK #13 37-40, warpins: 1 ---
	self.loadMemberList(self)

	--- END OF BLOCK #13 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #23


	--- BLOCK #14 41-42, warpins: 1 ---
	--- END OF BLOCK #14 ---

	slot7 = if not recvIsCurTab then
	JUMP TO BLOCK #15
	else
	JUMP TO BLOCK #16
	end


	--- BLOCK #15 43-43, warpins: 1 ---
	return 
	--- END OF BLOCK #15 ---

	FLOW; TARGET BLOCK #16


	--- BLOCK #16 44-48, warpins: 2 ---
	--- END OF BLOCK #16 ---

	if channelType == g_data.voice.channelType then
	JUMP TO BLOCK #17
	else
	JUMP TO BLOCK #18
	end


	--- BLOCK #17 49-49, warpins: 1 ---
	return 

	--- END OF BLOCK #17 ---

	FLOW; TARGET BLOCK #18


	--- BLOCK #18 50-52, warpins: 2 ---
	--- END OF BLOCK #18 ---

	if msg.recog ~= 0 then
	JUMP TO BLOCK #19
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #19 53-59, warpins: 1 ---
	self.loadMemberErr(self, msg.recog, channelType, channelTypeStr)

	--- END OF BLOCK #19 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #23


	--- BLOCK #20 60-77, warpins: 1 ---
	local roomData = nil
	local members = {}
	roomData, buf, bufLen = getRecord("TClientChannelHeadInfo"):decode(buf, bufLen, true)
	--- END OF BLOCK #20 ---

	for i=1, msg.param, 1
	LOOP BLOCK #21
	GO OUT TO BLOCK #22

	--- BLOCK #21 78-92, warpins: 2 ---
	members[#members + 1], buf, bufLen = getRecord("TClientMemberInfo"):decode(buf, bufLen, true)

	--- END OF BLOCK #21 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #20


	--- BLOCK #22 93-99, warpins: 1 ---
	self.loadMemberList(self, true, channelType, roomData, members)

	--- END OF BLOCK #22 ---

	FLOW; TARGET BLOCK #23


	--- BLOCK #23 100-100, warpins: 4 ---
	return 
	--- END OF BLOCK #23 ---



end
voice.requestEnter = function (self, id, channelType, password)
	--- BLOCK #0 1-9, warpins: 1 ---
	slot4 = net.send
	slot5 = {
		CM_CHANNEL_ENTER,
		recog = id,
		param = channelType
	}
	--- END OF BLOCK #0 ---

	slot6 = if password then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 10-11, warpins: 1 ---
	slot6 = {
		password
	}

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 12-13, warpins: 2 ---
	slot4(slot5, slot6)

	return 
	--- END OF BLOCK #2 ---



end
voice.loadChannelList = function (self)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if self.content then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-7, warpins: 1 ---
	self.content:removeSelf()

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 8-307, warpins: 2 ---
	self.content = display.newNode():add2(self)

	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png")):size(85, 42):anchor(0, 0):pos(142, 361):add2(self.content)
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png")):size(148, 42):anchor(0, 0):pos(226, 361):add2(self.content)
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png")):size(80, 42):anchor(0, 0):pos(373, 361):add2(self.content)
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png")):size(174, 42):anchor(0, 0):pos(452, 361):add2(self.content)
	an.newLabel("频道ID", 20, 1, {
		color = def.colors.labelTitle
	}):pos(154, 370):add2(self.content)
	an.newLabel("频道名", 20, 1, {
		color = def.colors.labelTitle
	}):pos(268, 370):add2(self.content)
	an.newLabel("人数", 20, 1, {
		color = def.colors.labelTitle
	}):pos(390, 370):add2(self.content)
	an.newLabel("频道创建者", 20, 1, {
		color = def.colors.labelTitle
	}):pos(490, 370):add2(self.content)

	local filterStr = ""
	local contentNode = nil

	local function load()
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if contentNode then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-7, warpins: 1 ---
		contentNode:removeSelf()

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 8-36, warpins: 2 ---
		contentNode = display.newNode():add2(self.content)
		local curSelect, selectSpr = nil
		local cnt = 0
		local lineh = 38
		local scroll = an.newScroll(142, 68, 484, 292):add2(contentNode)

		local function add(idx, v, isPrivate)
			--- BLOCK #0 1-47, warpins: 1 ---
			local line = nil

			local function clickFunc()
				--- BLOCK #0 1-3, warpins: 1 ---
				--- END OF BLOCK #0 ---

				slot0 = if not selectSpr then
				JUMP TO BLOCK #1
				else
				JUMP TO BLOCK #2
				end


				--- BLOCK #1 4-41, warpins: 1 ---
				local tmpSize = cc.size(line:getContentSize().width + 6, line:getContentSize().height + 6)
				selectSpr = res.get2("pic/panels/voice/shine.png"):pos(-5, 0):size(tmpSize):anchor(0, 1):add2(scroll)

				--- END OF BLOCK #1 ---

				FLOW; TARGET BLOCK #2


				--- BLOCK #2 42-44, warpins: 2 ---
				--- END OF BLOCK #2 ---

				slot0 = if curSelect then
				JUMP TO BLOCK #3
				else
				JUMP TO BLOCK #4
				end


				--- BLOCK #3 45-49, warpins: 1 ---
				--- END OF BLOCK #3 ---

				if curSelect.idx ~= idx then
				JUMP TO BLOCK #4
				else
				JUMP TO BLOCK #5
				end


				--- BLOCK #4 50-70, warpins: 2 ---
				selectSpr:pos(line:getPositionX() - 5, line:getPositionY())

				curSelect = {
					idx = idx,
					data = v,
					isPrivate = isPrivate
				}

				--- END OF BLOCK #4 ---

				FLOW; TARGET BLOCK #5


				--- BLOCK #5 71-71, warpins: 2 ---
				return 
				--- END OF BLOCK #5 ---



			end

			line = display.newNode():size(scroll:getw(), lineh):anchor(0, 1):pos(0, scroll:geth() - idx*lineh):add2(scroll):enableClick(clickFunc, {
				support = "scroll"
			})
			slot5 = display.newScale9Sprite
			slot6 = res.getframe2
			slot7 = "pic/scale/scale"
			--- END OF BLOCK #0 ---

			if idx%2 == 0 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 48-49, warpins: 1 ---
			slot8 = 19
			--- END OF BLOCK #1 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #3


			--- BLOCK #2 50-50, warpins: 1 ---
			slot8 = 18

			--- END OF BLOCK #2 ---

			FLOW; TARGET BLOCK #3


			--- BLOCK #3 51-71, warpins: 2 ---
			slot5(slot6(slot7 .. slot8 .. ".png")):anchor(0, 0):size(line.getContentSize(line)):add2(line)
			--- END OF BLOCK #3 ---

			slot2 = if isPrivate then
			JUMP TO BLOCK #4
			else
			JUMP TO BLOCK #5
			end


			--- BLOCK #4 72-119, warpins: 1 ---
			res.get2("pic/common/lock.png"):pos(20, line.geth(line)/2):add2(line)
			an.newLabel(v.get(v, "publicID"), 20, 1, {
				color = def.colors.labelGray
			}):anchor(0, 0.5):pos(40, line.geth(line)/2):add2(line)
			--- END OF BLOCK #4 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #6


			--- BLOCK #5 120-150, warpins: 1 ---
			an.newLabel(v.get(v, "publicID"), 20, 1, {
				color = def.colors.labelGray
			}):anchor(0.5, 0.5):pos(47, line.geth(line)/2):add2(line)
			--- END OF BLOCK #5 ---

			FLOW; TARGET BLOCK #6


			--- BLOCK #6 151-251, warpins: 2 ---
			an.newLabel(v.get(v, "name"), 20, 1, {
				color = def.colors.labelGray
			}):anchor(0.5, 0.5):pos(157, line.geth(line)/2):add2(line)
			an.newLabel(v.get(v, "memberCount") .. "/" .. v.get(v, "maxMem"), 20, 1, {
				color = def.colors.labelGray
			}):anchor(0.5, 0.5):pos(270, line.geth(line)/2):add2(line)
			an.newLabel(v.get(v, "creatorName"), 20, 1, {
				color = def.colors.labelGray
			}):anchor(0.5, 0.5):pos(400, line.geth(line)/2):add2(line)
			--- END OF BLOCK #6 ---

			if idx == 0 then
			JUMP TO BLOCK #7
			else
			JUMP TO BLOCK #8
			end


			--- BLOCK #7 252-253, warpins: 1 ---
			clickFunc()

			--- END OF BLOCK #7 ---

			FLOW; TARGET BLOCK #8


			--- BLOCK #8 254-255, warpins: 2 ---
			return 
			--- END OF BLOCK #8 ---



		end

		--- END OF BLOCK #2 ---

		for k, v in pairs(self.channelList)


		LOOP BLOCK #3
		GO OUT TO BLOCK #13


		--- BLOCK #3 37-45, warpins: 1 ---
		local channelType = voice.getChannelType(v.get(v, "channelType"))

		--- END OF BLOCK #3 ---

		if channelType ~= "ctPublic" then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 46-47, warpins: 1 ---
		--- END OF BLOCK #4 ---

		if channelType == "ctPersonal" then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #12
		end


		--- BLOCK #5 48-50, warpins: 2 ---
		--- END OF BLOCK #5 ---

		if filterStr ~= "" then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #6 51-66, warpins: 1 ---
		--- END OF BLOCK #6 ---

		slot12 = if not string.find(string.lower(v.get(v, "name")), string.lower(filterStr))
		 then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 67-84, warpins: 1 ---
		--- END OF BLOCK #7 ---

		slot12 = if string.find(string.lower(v.get(v, "publicID")) .. "", string.lower(filterStr))

		 then
		JUMP TO BLOCK #8
		else
		JUMP TO BLOCK #12
		end


		--- BLOCK #8 85-89, warpins: 3 ---
		slot12 = add
		slot13 = cnt
		slot14 = v
		--- END OF BLOCK #8 ---

		if channelType ~= "ctPersonal" then
		JUMP TO BLOCK #9
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #9 90-91, warpins: 1 ---
		slot15 = false
		--- END OF BLOCK #9 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #11


		--- BLOCK #10 92-92, warpins: 1 ---
		slot15 = true

		--- END OF BLOCK #10 ---

		FLOW; TARGET BLOCK #11


		--- BLOCK #11 93-94, warpins: 2 ---
		slot12(slot13, slot14, slot15)

		cnt = cnt + 1

		--- END OF BLOCK #11 ---

		FLOW; TARGET BLOCK #12


		--- BLOCK #12 95-96, warpins: 4 ---
		--- END OF BLOCK #12 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #2


		--- BLOCK #13 97-99, warpins: 1 ---
		--- END OF BLOCK #13 ---

		if 0 < cnt then
		JUMP TO BLOCK #14
		else
		JUMP TO BLOCK #15
		end


		--- BLOCK #14 100-137, warpins: 1 ---
		an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
			--- BLOCK #0 1-3, warpins: 1 ---
			--- END OF BLOCK #0 ---

			slot0 = if curSelect then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #5
			end


			--- BLOCK #1 4-9, warpins: 1 ---
			local function go()
				--- BLOCK #0 1-4, warpins: 1 ---
				--- END OF BLOCK #0 ---

				slot0 = if curSelect.isPrivate then
				JUMP TO BLOCK #1
				else
				JUMP TO BLOCK #2
				end


				--- BLOCK #1 5-69, warpins: 1 ---
				local msgbox = nil
				msgbox = an.newMsgbox("", function (idx)
					--- BLOCK #0 1-3, warpins: 1 ---
					--- END OF BLOCK #0 ---

					if idx <= 0 then
					JUMP TO BLOCK #1
					else
					JUMP TO BLOCK #2
					end


					--- BLOCK #1 4-4, warpins: 1 ---
					return 

					--- END OF BLOCK #1 ---

					FLOW; TARGET BLOCK #2


					--- BLOCK #2 5-13, warpins: 2 ---
					--- END OF BLOCK #2 ---

					slot1 = if not tonumber(msgbox.pwInput:getString())
					 then
					JUMP TO BLOCK #3
					else
					JUMP TO BLOCK #4
					end


					--- BLOCK #3 14-20, warpins: 1 ---
					an.newMsgbox("密码只能是6位以内数字", nil, {
						center = true
					})

					return 

					--- END OF BLOCK #3 ---

					FLOW; TARGET BLOCK #4


					--- BLOCK #4 21-42, warpins: 2 ---
					self:requestEnter(curSelect.data:get("ID"), curSelect.data:get("channelType"), msgbox.pwInput:getString())

					return 
					--- END OF BLOCK #4 ---



				end, {
					hasCancel = true,
					title = res.gettex2(path .. "title_enter.png")
				})
				msgbox.pwInput = an.newInput(0, 0, 236, 40, 6, {
					label = {
						"",
						20,
						1
					},
					bg = {
						tex = res.gettex2("pic/scale/scale16.png"),
						offset = {
							-10,
							2
						}
					},
					tip = {
						"输入六位以内数字密码",
						20,
						1,
						{
							color = cc.c3b(128, 128, 128)
						}
					}
				}):add2(msgbox.bg):pos(msgbox.bg:getw()/2, msgbox.bg:geth()/2)

				return 

				--- END OF BLOCK #1 ---

				FLOW; TARGET BLOCK #2


				--- BLOCK #2 70-85, warpins: 1 ---
				self:requestEnter(curSelect.data:get("ID"), curSelect.data:get("channelType"))
				--- END OF BLOCK #2 ---

				FLOW; TARGET BLOCK #3


				--- BLOCK #3 86-86, warpins: 2 ---
				--- END OF BLOCK #3 ---



			end

			--- END OF BLOCK #1 ---

			slot1 = if g_data.voice.roomData then
			JUMP TO BLOCK #2
			else
			JUMP TO BLOCK #3
			end


			--- BLOCK #2 10-25, warpins: 1 ---
			an.newMsgbox(string.format("你确定离开当前频道并进入(%s)吗?", curSelect.data:get("name")), function (idx)
				--- BLOCK #0 1-2, warpins: 1 ---
				--- END OF BLOCK #0 ---

				if idx == 1 then
				JUMP TO BLOCK #1
				else
				JUMP TO BLOCK #2
				end


				--- BLOCK #1 3-4, warpins: 1 ---
				go()

				--- END OF BLOCK #1 ---

				FLOW; TARGET BLOCK #2


				--- BLOCK #2 5-5, warpins: 2 ---
				return 
				--- END OF BLOCK #2 ---



			end, {
				center = true,
				hasCancel = true
			})
			--- END OF BLOCK #2 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #4


			--- BLOCK #3 26-27, warpins: 1 ---
			go()

			--- END OF BLOCK #3 ---

			FLOW; TARGET BLOCK #4


			--- BLOCK #4 28-28, warpins: 2 ---
			--- END OF BLOCK #4 ---

			FLOW; TARGET BLOCK #5


			--- BLOCK #5 29-29, warpins: 2 ---
			return 
			--- END OF BLOCK #5 ---



		end, {
			sprite = res.gettex2("pic/panels/voice/enter.png"),
			pressImage = res.gettex2("pic/common/btn21.png")
		}):add2(contentNode):anchor(1, 0):pos(self:getw() - 126, 16)
		--- END OF BLOCK #14 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #18


		--- BLOCK #15 138-140, warpins: 1 ---
		--- END OF BLOCK #15 ---

		if filterStr == "" then
		JUMP TO BLOCK #16
		else
		JUMP TO BLOCK #17
		end


		--- BLOCK #16 141-166, warpins: 1 ---
		an.newLabel("当前服务器暂无创建频道", 24, 1, {
			color = def.colors.labelGray
		}):anchor(0.5, 0.5):pos(383, 230):add2(contentNode)
		--- END OF BLOCK #16 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #18


		--- BLOCK #17 167-195, warpins: 1 ---
		an.newLabel(string.format("未找到符合(%s)的频道", filterStr), 24, 1, {
			color = def.colors.labelGray
		}):anchor(0.5, 0.5):pos(383, 230):add2(contentNode)

		--- END OF BLOCK #17 ---

		FLOW; TARGET BLOCK #18


		--- BLOCK #18 196-197, warpins: 3 ---
		return 
		--- END OF BLOCK #18 ---



	end

	load()

	local filterInput = nil
	filterInput = an.newInput(0, 0, 236, 40, 7, {
		label = {
			"",
			20,
			1
		},
		bg = {
			tex = res.gettex2("pic/scale/scale16.png"),
			offset = {
				-10,
				2
			}
		},
		tip = {
			"输入ID或频道名",
			20,
			1,
			{
				color = cc.c3b(128, 128, 128)
			}
		},
		stop_call = function ()
			--- BLOCK #0 1-8, warpins: 1 ---
			filterStr = filterInput:getString()

			load()

			return 
			--- END OF BLOCK #0 ---



		end
	}):add2(self.content):anchor(0, 0):pos(25, 16):add(res.get2(path .. "search.png"):pos(210, 20))
	local createVoice = nil

	function createVoice()
		--- BLOCK #0 1-221, warpins: 1 ---
		local msgbox = nil
		msgbox = an.newMsgbox("", function (idx)
			--- BLOCK #0 1-3, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if idx <= 0 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 4-4, warpins: 1 ---
			return 

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 5-11, warpins: 1 ---
			--- END OF BLOCK #2 ---

			if msgbox.nameInput:getString()
			 == "" then
			JUMP TO BLOCK #3
			else
			JUMP TO BLOCK #4
			end


			--- BLOCK #3 12-19, warpins: 1 ---
			an.newMsgbox("频道名字不能为空", function ()
				--- BLOCK #0 1-3, warpins: 1 ---
				createVoice()

				return 
				--- END OF BLOCK #0 ---



			end, {
				center = true
			})

			return 

			--- END OF BLOCK #3 ---

			FLOW; TARGET BLOCK #4


			--- BLOCK #4 20-30, warpins: 2 ---
			--- END OF BLOCK #4 ---

			slot1 = if not def.wordfilter.check(msgbox.nameInput:getString())
			 then
			JUMP TO BLOCK #5
			else
			JUMP TO BLOCK #6
			end


			--- BLOCK #5 31-38, warpins: 1 ---
			an.newMsgbox("频道名字包含敏感字符", function ()
				--- BLOCK #0 1-3, warpins: 1 ---
				createVoice()

				return 
				--- END OF BLOCK #0 ---



			end, {
				center = true
			})

			return 

			--- END OF BLOCK #5 ---

			FLOW; TARGET BLOCK #6


			--- BLOCK #6 39-45, warpins: 2 ---
			--- END OF BLOCK #6 ---

			if msgbox.pwInput:getString()
			 ~= "" then
			JUMP TO BLOCK #7
			else
			JUMP TO BLOCK #9
			end


			--- BLOCK #7 46-54, warpins: 1 ---
			--- END OF BLOCK #7 ---

			slot1 = if not tonumber(msgbox.pwInput:getString())
			 then
			JUMP TO BLOCK #8
			else
			JUMP TO BLOCK #9
			end


			--- BLOCK #8 55-62, warpins: 1 ---
			an.newMsgbox("密码只能是6位以内数字", function ()
				--- BLOCK #0 1-3, warpins: 1 ---
				createVoice()

				return 
				--- END OF BLOCK #0 ---



			end, {
				center = true
			})

			return 

			--- END OF BLOCK #8 ---

			FLOW; TARGET BLOCK #9


			--- BLOCK #9 63-71, warpins: 3 ---
			local mem = tonumber(msgbox.memInput:getString())

			--- END OF BLOCK #9 ---

			slot1 = if mem then
			JUMP TO BLOCK #10
			else
			JUMP TO BLOCK #12
			end


			--- BLOCK #10 72-74, warpins: 1 ---
			--- END OF BLOCK #10 ---

			if mem >= 2 then
			JUMP TO BLOCK #11
			else
			JUMP TO BLOCK #12
			end


			--- BLOCK #11 75-77, warpins: 1 ---
			--- END OF BLOCK #11 ---

			if 200 < mem then
			JUMP TO BLOCK #12
			else
			JUMP TO BLOCK #13
			end


			--- BLOCK #12 78-85, warpins: 3 ---
			an.newMsgbox("成员人数只能是 2 ~ 200数字", function ()
				--- BLOCK #0 1-3, warpins: 1 ---
				createVoice()

				return 
				--- END OF BLOCK #0 ---



			end, {
				center = true
			})

			return 

			--- END OF BLOCK #12 ---

			FLOW; TARGET BLOCK #13


			--- BLOCK #13 86-107, warpins: 2 ---
			slot2 = net.send
			slot3 = {
				CM_CHANNEL_CREATE
			}
			slot4 = nil
			slot5 = getRecord
			slot6 = "TCnlCreateParam"
			slot7 = {
				channelName = msgbox.nameInput:getString()
			}

			--- END OF BLOCK #13 ---

			if msgbox.pwInput:getString()

			 == "" then
			JUMP TO BLOCK #14
			else
			JUMP TO BLOCK #15
			end


			--- BLOCK #14 108-109, warpins: 1 ---
			slot8 = 0
			--- END OF BLOCK #14 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #16


			--- BLOCK #15 110-110, warpins: 1 ---
			slot8 = 1
			--- END OF BLOCK #15 ---

			FLOW; TARGET BLOCK #16


			--- BLOCK #16 111-121, warpins: 2 ---
			slot7.needPw = slot8
			slot7.pw = msgbox.pwInput:getString()
			slot7.memberMax = mem

			slot2(slot3, slot4, slot5(slot6, slot7))

			return 
			--- END OF BLOCK #16 ---

			FLOW; TARGET BLOCK #17


			--- BLOCK #17 122-122, warpins: 2 ---
			--- END OF BLOCK #17 ---



		end, {
			hasCancel = true,
			title = res.gettex2(path .. "title_create.png")
		})

		an.newLabel("频道名", 20, 1, {
			color = def.colors.colorGrayYellow
		}):add2(msgbox.bg):anchor(0, 0.5):pos(40, 200)
		an.newLabel("密码(可选)", 20, 1, {
			color = def.colors.colorGrayYellow
		}):add2(msgbox.bg):anchor(0, 0.5):pos(40, 150)
		an.newLabel("最大人数", 20, 1, {
			color = def.colors.colorGrayYellow
		}):add2(msgbox.bg):anchor(0, 0.5):pos(40, 100)

		msgbox.nameInput = an.newInput(0, 0, 236, 40, 7, {
			label = {
				common.getPlayerName() .. "的频道",
				20,
				1
			},
			bg = {
				tex = res.gettex2("pic/scale/scale16.png"),
				offset = {
					-10,
					2
				}
			},
			tip = {
				"最多七个字",
				20,
				1,
				{
					color = cc.c3b(128, 128, 128)
				}
			}
		}):add2(msgbox.bg):pos(280, 200)
		msgbox.pwInput = an.newInput(0, 0, 236, 40, 6, {
			label = {
				"",
				20,
				1
			},
			bg = {
				tex = res.gettex2("pic/scale/scale16.png"),
				offset = {
					-10,
					2
				}
			},
			tip = {
				"6位数字",
				20,
				1,
				{
					color = cc.c3b(128, 128, 128)
				}
			}
		}):add2(msgbox.bg):pos(280, 150)
		msgbox.memInput = an.newInput(0, 0, 236, 40, 3, {
			label = {
				"20",
				20,
				1
			},
			bg = {
				tex = res.gettex2("pic/scale/scale16.png"),
				offset = {
					-10,
					2
				}
			},
			tip = {
				"2 ~ 200(默认20)",
				20,
				1,
				{
					color = cc.c3b(128, 128, 128)
				}
			}
		}):add2(msgbox.bg):pos(280, 100)

		return 
		--- END OF BLOCK #0 ---



	end

	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")
		createVoice()

		return 
		--- END OF BLOCK #0 ---



	end, {
		sprite = res.gettex2("pic/panels/voice/create.png"),
		pressImage = res.gettex2("pic/common/btn21.png")
	}):add2(self.content):anchor(1, 0):pos(self.getw(self) - 18, 16)

	return 
	--- END OF BLOCK #2 ---



end
voice.loadMemberErr = function (self, code, channelType, channelTypeStr)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot4 = if self.content then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-7, warpins: 1 ---
	self.content:removeSelf()

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 8-18, warpins: 2 ---
	self.content = display.newNode():add2(self)
	local tipstr = nil
	--- END OF BLOCK #2 ---

	if code == -28 then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #3 19-20, warpins: 1 ---
	--- END OF BLOCK #3 ---

	if channelTypeStr == "ctCorps" then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 21-22, warpins: 1 ---
	tipstr = "你当前还未加入任何战队."
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #5 23-24, warpins: 1 ---
	--- END OF BLOCK #5 ---

	if channelTypeStr == "ctGuild" then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 25-26, warpins: 1 ---
	tipstr = "你当前还未加入任何行会."
	--- END OF BLOCK #6 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #7 27-28, warpins: 1 ---
	--- END OF BLOCK #7 ---

	if channelTypeStr == "ctGroup" then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #8 29-30, warpins: 1 ---
	tipstr = "你当前还没有编组."

	--- END OF BLOCK #8 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #9 31-31, warpins: 1 ---
	return 

	--- END OF BLOCK #9 ---

	FLOW; TARGET BLOCK #10


	--- BLOCK #10 32-57, warpins: 3 ---
	an.newLabel(tipstr, 24, 1, {
		color = def.colors.labelGray
	}):anchor(0.5, 0.5):pos(383, 230):add2(self.content)
	--- END OF BLOCK #10 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #13


	--- BLOCK #11 58-59, warpins: 1 ---
	--- END OF BLOCK #11 ---

	if code == -29 then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #13
	end


	--- BLOCK #12 60-120, warpins: 1 ---
	an.newLabel("频道未创建", 24, 1, {
		color = def.colors.labelGray
	}):anchor(0.5, 0.5):pos(383, 230):add2(self.content)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-10, warpins: 1 ---
		sound.playSound("103")

		local function go()
			--- BLOCK #0 1-7, warpins: 1 ---
			self:requestEnter(nil, channelType)

			return 
			--- END OF BLOCK #0 ---



		end

		--- END OF BLOCK #0 ---

		slot1 = if g_data.voice.roomData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 11-17, warpins: 1 ---
		an.newMsgbox("你确定离开当前频道并创建频道吗?", function (idx)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if idx == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-4, warpins: 1 ---
			go()

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 5-5, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			hasCancel = true
		})
		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #3


		--- BLOCK #2 18-19, warpins: 1 ---
		go()

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 20-21, warpins: 2 ---
		return 
		--- END OF BLOCK #3 ---



	end, {
		clickSpace = 2,
		sprite = res.gettex2("pic/panels/voice/create.png"),
		pressImage = res.gettex2("pic/common/btn21.png")
	}):add2(self.content):anchor(1, 0):pos(self.getw(self) - 18, 16)

	--- END OF BLOCK #12 ---

	FLOW; TARGET BLOCK #13


	--- BLOCK #13 121-122, warpins: 3 ---
	return 
	--- END OF BLOCK #13 ---

	FLOW; TARGET BLOCK #14


	--- BLOCK #14 123-123, warpins: 2 ---
	--- END OF BLOCK #14 ---



end
voice.loadMemberList = function (self, isPreview, channelType, roomData, members)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot5 = if self.content then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-7, warpins: 1 ---
	self.content:removeSelf()

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 8-18, warpins: 2 ---
	self.content = display.newNode():add2(self)
	slot5 = self.content
	--- END OF BLOCK #2 ---

	slot1 = if isPreview then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 19-20, warpins: 1 ---
	slot6 = "members_preview"
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #5


	--- BLOCK #4 21-21, warpins: 1 ---
	slot6 = "members"
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 22-24, warpins: 2 ---
	slot5.type = slot6
	--- END OF BLOCK #5 ---

	slot1 = if not isPreview then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 25-35, warpins: 1 ---
	members = g_data.voice.members
	roomData = g_data.voice.roomData
	channelType = g_data.voice.channelType
	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 36-43, warpins: 2 ---
	local onMicNames = {}
	local title = nil
	local channelTypeStr = voice.getChannelType(channelType)
	--- END OF BLOCK #7 ---

	if channelTypeStr ~= "ctPublic" then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #8 44-45, warpins: 1 ---
	--- END OF BLOCK #8 ---

	if channelTypeStr == "ctPersonal" then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #9 46-59, warpins: 2 ---
	title = string.format("%s (ID: %d)", roomData.get(roomData, "name"), roomData.get(roomData, "publicID"))

	--- END OF BLOCK #9 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #20


	--- BLOCK #10 60-61, warpins: 1 ---
	--- END OF BLOCK #10 ---

	if channelTypeStr == "ctGuild" then
	JUMP TO BLOCK #11
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #11 62-68, warpins: 1 ---
	--- END OF BLOCK #11 ---

	slot6 = if not g_data.guild:getGuildName()

	 then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #13
	end


	--- BLOCK #12 69-69, warpins: 1 ---
	title = ""

	--- END OF BLOCK #12 ---

	FLOW; TARGET BLOCK #13


	--- BLOCK #13 70-70, warpins: 2 ---
	--- END OF BLOCK #13 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #20


	--- BLOCK #14 71-72, warpins: 1 ---
	--- END OF BLOCK #14 ---

	if channelTypeStr == "ctCorps" then
	JUMP TO BLOCK #15
	else
	JUMP TO BLOCK #18
	end


	--- BLOCK #15 73-79, warpins: 1 ---
	--- END OF BLOCK #15 ---

	slot6 = if not g_data.guild:getClanName()

	 then
	JUMP TO BLOCK #16
	else
	JUMP TO BLOCK #17
	end


	--- BLOCK #16 80-80, warpins: 1 ---
	title = ""
	--- END OF BLOCK #16 ---

	FLOW; TARGET BLOCK #17


	--- BLOCK #17 81-81, warpins: 2 ---
	--- END OF BLOCK #17 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #20


	--- BLOCK #18 82-83, warpins: 1 ---
	--- END OF BLOCK #18 ---

	if channelTypeStr == "ctGroup" then
	JUMP TO BLOCK #19
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #19 84-90, warpins: 1 ---
	title = g_data.player:getLeaderName() .. "的队伍"

	--- END OF BLOCK #19 ---

	FLOW; TARGET BLOCK #20


	--- BLOCK #20 91-551, warpins: 5 ---
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png")):size(485, 42):anchor(0, 0):pos(141, 361):add2(self.content)
	an.newLabel(title, 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(383, 383):add2(self.content)

	local adminNode = display.newNode():size(223, 172):add2(self.content):pos(141, 191)

	display.newScale9Sprite(res.getframe2("pic/scale/scale21.png")):size(adminNode.getContentSize(adminNode)):anchor(0, 0):add2(adminNode)
	res.get2(path .. "tab_bg.png"):add2(adminNode):pos(adminNode.getw(adminNode)/2, adminNode.geth(adminNode) - 14)
	an.newLabel("管理员", 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(adminNode.getw(adminNode)/2, adminNode.geth(adminNode) - 14):add2(adminNode)

	local adminScroll = an.newScroll(4, 50, adminNode.getw(adminNode) - 8, 94):add2(adminNode)
	local adminLists = {}
	local commandMode = an.newBtn(res.gettex2("pic/common/btn150.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if isPreview then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-17, warpins: 2 ---
		--- END OF BLOCK #2 ---

		if g_data.voice.roomData:get("mode")

		 == 1 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 18-18, warpins: 1 ---
		return 

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 19-27, warpins: 2 ---
		--- END OF BLOCK #4 ---

		if g_data.voice.playerData:get("isAdmin")
		 == 0 then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 28-34, warpins: 1 ---
		main_scene.ui:tip("只有管理员才能更改模式.")

		return 

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 35-49, warpins: 2 ---
		net.send({
			CM_CHANNEL_CHANGE_MODE,
			param = 1,
			recog = g_data.voice.roomData:get("ID")
		})

		return 
		--- END OF BLOCK #6 ---



	end, {
		clickSpace = 2,
		select = {
			res.gettex2("pic/common/btn151.png"),
			manual = true
		},
		label = {
			"指挥模式",
			20,
			1,
			{
				color = def.colors.btn20,
				sc = def.colors.btn20s
			}
		}
	}):add2(adminNode):pos(60, 25)
	local freeMode = an.newBtn(res.gettex2("pic/common/btn150.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if isPreview then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-17, warpins: 2 ---
		--- END OF BLOCK #2 ---

		if g_data.voice.roomData:get("mode")

		 == 0 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 18-18, warpins: 1 ---
		return 

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 19-27, warpins: 2 ---
		--- END OF BLOCK #4 ---

		if g_data.voice.playerData:get("isAdmin")
		 == 0 then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 28-34, warpins: 1 ---
		main_scene.ui:tip("只有管理员才能更改模式.")

		return 

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 35-49, warpins: 2 ---
		net.send({
			CM_CHANNEL_CHANGE_MODE,
			param = 0,
			recog = g_data.voice.roomData:get("ID")
		})

		return 
		--- END OF BLOCK #6 ---



	end, {
		clickSpace = 2,
		select = {
			res.gettex2("pic/common/btn151.png"),
			manual = true
		},
		label = {
			"自由模式",
			20,
			1,
			{
				color = def.colors.btn20,
				sc = def.colors.btn20s
			}
		}
	}):add2(adminNode):pos(adminNode.getw(adminNode) - 60, 25)
	local logNode = display.newNode():size(223, 123):add2(self.content):pos(141, 67)

	display.newScale9Sprite(res.getframe2("pic/scale/scale21.png")):size(logNode.getContentSize(logNode)):anchor(0, 0):add2(logNode)
	res.get2(path .. "tab_bg.png"):add2(logNode):pos(logNode.getw(logNode)/2, logNode.geth(logNode) - 14)
	an.newLabel("频道信息", 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(logNode.getw(logNode)/2, logNode.geth(logNode) - 14):add2(logNode)

	local logMax = 30
	local logScroll = an.newScroll(4, 4, logNode.getw(logNode) - 8, logNode.geth(logNode) - 35, {
		labelM = {
			20,
			1,
			params = {
				maxLine = logMax
			}
		}
	}):add2(logNode)
	local membersNode = display.newNode():size(260, 296):add2(self.content):pos(365, 67)

	display.newScale9Sprite(res.getframe2("pic/scale/scale21.png")):size(membersNode.getContentSize(membersNode)):anchor(0, 0):add2(membersNode)
	res.get2(path .. "tab_bg.png"):add2(membersNode):pos(membersNode.getw(membersNode)/2, membersNode.geth(membersNode) - 14)

	local membersCnt = an.newLabel("成员", 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(membersNode.getw(membersNode)/2, membersNode.geth(membersNode) - 14):add2(membersNode)
	local membersScroll = an.newScroll(4, 4, membersNode.getw(membersNode) - 8, membersNode.geth(membersNode) - 35):add2(membersNode)
	local membersLists = {}
	local memberSelectSpr, memberSelectData = nil

	--- END OF BLOCK #20 ---

	slot1 = if isPreview then
	JUMP TO BLOCK #21
	else
	JUMP TO BLOCK #22
	end


	--- BLOCK #21 552-595, warpins: 1 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-10, warpins: 1 ---
		sound.playSound("103")

		local function go()
			--- BLOCK #0 1-7, warpins: 1 ---
			self:requestEnter(nil, channelType)

			return 
			--- END OF BLOCK #0 ---



		end

		--- END OF BLOCK #0 ---

		slot1 = if g_data.voice.roomData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 11-21, warpins: 1 ---
		an.newMsgbox(string.format("你确定离开当前频道并进入(%s)吗?", title), function (idx)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if idx == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-4, warpins: 1 ---
			go()

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 5-5, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})
		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #3


		--- BLOCK #2 22-23, warpins: 1 ---
		go()

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 24-25, warpins: 2 ---
		return 
		--- END OF BLOCK #3 ---



	end, {
		clickSpace = 2,
		pressImage = res.gettex2("pic/common/btn21.png"),
		label = {
			"进入频道",
			20,
			1,
			{
				color = def.colors.btn20,
				sc = def.colors.btn20s
			}
		}
	}):add2(self.content):anchor(1, 0):pos(self.getw(self) - 12, 20)
	--- END OF BLOCK #21 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #23


	--- BLOCK #22 596-667, warpins: 1 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-13, warpins: 1 ---
		sound.playSound("103")
		--- END OF BLOCK #0 ---

		if g_data.voice.playerData:get("isAdmin")
		 == 0 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 14-20, warpins: 1 ---
		main_scene.ui:tip("你不是管理员")

		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 21-23, warpins: 1 ---
		--- END OF BLOCK #2 ---

		slot0 = if not memberSelectData then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 24-30, warpins: 1 ---
		main_scene.ui:tip("你还未选中成员")

		return 

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 31-91, warpins: 1 ---
		local node = display.newNode():size(110, 110):pos(414, 58):add2(self.content)

		display.newScale9Sprite("pic/scale/scale21.png"):size(node.getContentSize(node)):anchor(0, 0):add2(node)
		common.enablePopStyle(node, true)

		slot1 = an.newBtn
		slot2 = res.gettex2("pic/common/btn150.png")

		function slot3()
			--- BLOCK #0 1-11, warpins: 1 ---
			sound.playSound("103")
			node:removeSelf()

			--- END OF BLOCK #0 ---

			slot0 = if not memberSelectData then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 12-12, warpins: 1 ---
			return 

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 13-40, warpins: 2 ---
			net.send({
				CM_CHANNEL_CHANGE_MUTE,
				recog = g_data.voice.roomData:get("ID"),
				param = (memberSelectData.data:get("isMute") + 1)%2
			}, {
				memberSelectData.name
			})

			return 
			--- END OF BLOCK #2 ---



		end

		slot4 = {}
		slot5 = res.gettex2
		slot6 = "pic/panels/voice/"

		--- END OF BLOCK #4 ---

		if memberSelectData.data:get("isMute")

		 == 0 then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 92-93, warpins: 1 ---
		slot7 = "notalk"
		--- END OF BLOCK #5 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #7


		--- BLOCK #6 94-94, warpins: 1 ---
		slot7 = "cantalk"
		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 95-149, warpins: 2 ---
		slot4.sprite = slot5(slot6 .. slot7 .. ".png")
		slot4.pressImage = res.gettex2("pic/common/btn151.png")

		slot1(slot2, slot3, slot4):add2(node):pos(node.getw(node)/2, 80)
		an.newBtn(res.gettex2("pic/common/btn150.png"), function ()
			--- BLOCK #0 1-11, warpins: 1 ---
			sound.playSound("103")
			node:removeSelf()

			--- END OF BLOCK #0 ---

			slot0 = if not memberSelectData then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 12-12, warpins: 1 ---
			return 

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 13-31, warpins: 2 ---
			net.send({
				CM_CHANNEL_KICK_OUT,
				recog = g_data.voice.roomData:get("ID")
			}, {
				memberSelectData.name
			})

			return 
			--- END OF BLOCK #2 ---



		end, {
			sprite = res.gettex2("pic/panels/voice/kick.png"),
			pressImage = res.gettex2("pic/common/btn151.png")
		}):add2(node):pos(node.getw(node)/2, 28)

		return 
		--- END OF BLOCK #7 ---

		FLOW; TARGET BLOCK #8


		--- BLOCK #8 150-150, warpins: 2 ---
		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 151-151, warpins: 2 ---
		--- END OF BLOCK #9 ---



	end, {
		sprite = res.gettex2("pic/panels/voice/operator.png"),
		pressImage = res.gettex2("pic/common/btn21.png")
	}):add2(self.content):anchor(1, 0):pos(self.getw(self) - 126, 16)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-11, warpins: 1 ---
		sound.playSound("103")
		net.send({
			CM_CHANNEL_EXIT
		})

		return 
		--- END OF BLOCK #0 ---



	end, {
		clickSpace = 2,
		sprite = res.gettex2("pic/panels/voice/exit.png"),
		pressImage = res.gettex2("pic/common/btn21.png")
	}):add2(self.content):anchor(1, 0):pos(self.getw(self) - 18, 16)

	--- END OF BLOCK #22 ---

	FLOW; TARGET BLOCK #23


	--- BLOCK #23 668-698, warpins: 2 ---
	self.content.addLog = function (text)
		--- BLOCK #0 1-2, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if not text then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 3-3, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 4-31, warpins: 2 ---
		logScroll.labelM:nextLine():addLabel(text, def.colors.labelGray)
		logScroll:setScrollOffset(0, logScroll:getScrollSize().height - logScroll:geth())

		return 
		--- END OF BLOCK #2 ---



	end
	self.content.refershMode = function ()
		--- BLOCK #0 1-10, warpins: 1 ---
		local mode = roomData:get("mode")
		slot2 = freeMode
		slot1 = freeMode.setIsSelect
		--- END OF BLOCK #0 ---

		if mode ~= 0 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 11-12, warpins: 1 ---
		slot3 = false
		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #3


		--- BLOCK #2 13-13, warpins: 1 ---
		slot3 = true

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 14-19, warpins: 2 ---
		slot1(slot2, slot3)

		slot2 = commandMode
		slot1 = commandMode.setIsSelect
		--- END OF BLOCK #3 ---

		if mode ~= 1 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 20-21, warpins: 1 ---
		slot3 = false
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #5 22-22, warpins: 1 ---
		slot3 = true

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 23-24, warpins: 2 ---
		slot1(slot2, slot3)

		return 
		--- END OF BLOCK #6 ---



	end
	self.content.refershMemberCnt = function ()
		--- BLOCK #0 1-5, warpins: 1 ---
		local cnt = 0

		--- END OF BLOCK #0 ---

		for i, v in ipairs(members)

		LOOP BLOCK #1
		GO OUT TO BLOCK #4


		--- BLOCK #1 6-11, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if v.get(v, "isAdmin")

		 == 0 then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 12-12, warpins: 1 ---
		cnt = cnt + 1

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 13-14, warpins: 3 ---
		--- END OF BLOCK #3 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #4 15-24, warpins: 1 ---
		membersCnt:setString(string.format("成员(%d)", cnt))

		return 
		--- END OF BLOCK #4 ---



	end
	self.content.addMember = function (v)
		--- BLOCK #0 1-6, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if v.get(v, "isAdmin")

		 ~= 1 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 7-8, warpins: 1 ---
		slot1 = false
		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #3


		--- BLOCK #2 9-9, warpins: 1 ---
		local isAdmin = true
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 10-12, warpins: 2 ---
		local lists, scroll, lineh = nil
		--- END OF BLOCK #3 ---

		slot1 = if isAdmin then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 13-18, warpins: 1 ---
		lineh = 32
		scroll = adminScroll
		lists = adminLists
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #5 19-23, warpins: 1 ---
		lineh = 38
		scroll = membersScroll
		lists = membersLists
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 24-30, warpins: 2 ---
		local name = v.get(v, "name")

		--- END OF BLOCK #6 ---

		slot6 = if lists[name] then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 31-31, warpins: 1 ---
		return 

		--- END OF BLOCK #7 ---

		FLOW; TARGET BLOCK #8


		--- BLOCK #8 32-97, warpins: 1 ---
		local curCnt = table.nums(lists)
		local line = display.newNode():size(scroll.getw(scroll), lineh):anchor(0, 1):pos(0, scroll.geth(scroll) - curCnt*lineh):add2(scroll)

		an.newLabel(v.get(v, "name"), 20, 1, {
			color = def.colors.labelGray
		}):anchor(0, 0.5):pos(10, line.geth(line)/2):add2(line, 1)

		--- END OF BLOCK #8 ---

		slot1 = if not isAdmin then
		JUMP TO BLOCK #9
		else
		JUMP TO BLOCK #13
		end


		--- BLOCK #9 98-105, warpins: 1 ---
		slot8 = display.newScale9Sprite
		slot9 = res.getframe2
		slot10 = "pic/scale/scale"
		--- END OF BLOCK #9 ---

		if curCnt%2 == 0 then
		JUMP TO BLOCK #10
		else
		JUMP TO BLOCK #11
		end


		--- BLOCK #10 106-107, warpins: 1 ---
		slot11 = 19
		--- END OF BLOCK #10 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #12


		--- BLOCK #11 108-108, warpins: 1 ---
		slot11 = 18

		--- END OF BLOCK #11 ---

		FLOW; TARGET BLOCK #12


		--- BLOCK #12 109-132, warpins: 2 ---
		slot8(slot9(slot10 .. slot11 .. ".png")):anchor(0, 0):size(line.getContentSize(line)):add2(line)
		line.enableClick(line, function ()
			--- BLOCK #0 1-3, warpins: 1 ---
			--- END OF BLOCK #0 ---

			slot0 = if isPreview then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 4-4, warpins: 1 ---
			return 

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 5-13, warpins: 2 ---
			--- END OF BLOCK #2 ---

			if g_data.voice.playerData:get("isAdmin")

			 == 0 then
			JUMP TO BLOCK #3
			else
			JUMP TO BLOCK #4
			end


			--- BLOCK #3 14-14, warpins: 1 ---
			return 

			--- END OF BLOCK #3 ---

			FLOW; TARGET BLOCK #4


			--- BLOCK #4 15-17, warpins: 2 ---
			--- END OF BLOCK #4 ---

			slot0 = if not memberSelectSpr then
			JUMP TO BLOCK #5
			else
			JUMP TO BLOCK #6
			end


			--- BLOCK #5 18-55, warpins: 1 ---
			local tmpSize = cc.size(line:getContentSize().width + 6, line:getContentSize().height + 6)
			memberSelectSpr = res.get2("pic/panels/voice/shine_frame.png"):pos(-6, 0):size(tmpSize):anchor(0, 1):add2(scroll)

			--- END OF BLOCK #5 ---

			FLOW; TARGET BLOCK #6


			--- BLOCK #6 56-58, warpins: 2 ---
			--- END OF BLOCK #6 ---

			slot0 = if memberSelectData then
			JUMP TO BLOCK #7
			else
			JUMP TO BLOCK #8
			end


			--- BLOCK #7 59-63, warpins: 1 ---
			--- END OF BLOCK #7 ---

			if memberSelectData.name ~= name then
			JUMP TO BLOCK #8
			else
			JUMP TO BLOCK #9
			end


			--- BLOCK #8 64-86, warpins: 2 ---
			memberSelectSpr:pos(line:getPositionX() - 6, line:getPositionY()):show()

			memberSelectData = {
				name = name,
				data = v
			}

			--- END OF BLOCK #8 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #10


			--- BLOCK #9 87-91, warpins: 1 ---
			memberSelectSpr:hide()

			memberSelectData = nil

			--- END OF BLOCK #9 ---

			FLOW; TARGET BLOCK #10


			--- BLOCK #10 92-92, warpins: 2 ---
			return 
			--- END OF BLOCK #10 ---



		end, {
			support = "scroll"
		})

		--- END OF BLOCK #12 ---

		FLOW; TARGET BLOCK #13


		--- BLOCK #13 133-141, warpins: 2 ---
		line.setState = function (state)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if state ~= "mute" then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-4, warpins: 1 ---
			--- END OF BLOCK #1 ---

			if state == "saying" then
			JUMP TO BLOCK #2
			else
			JUMP TO BLOCK #5
			end


			--- BLOCK #2 5-8, warpins: 2 ---
			--- END OF BLOCK #2 ---

			slot1 = if not line.icon then
			JUMP TO BLOCK #3
			else
			JUMP TO BLOCK #4
			end


			--- BLOCK #3 9-35, warpins: 1 ---
			line.icon = res.get2(path .. state .. ".png"):add2(line):pos(line:getw() - 30, line:geth()/2)

			--- END OF BLOCK #3 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #7


			--- BLOCK #4 36-51, warpins: 1 ---
			line.icon:setTex(res.gettex2(path .. state .. ".png")):show()
			--- END OF BLOCK #4 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #7


			--- BLOCK #5 52-55, warpins: 1 ---
			--- END OF BLOCK #5 ---

			slot1 = if line.icon then
			JUMP TO BLOCK #6
			else
			JUMP TO BLOCK #7
			end


			--- BLOCK #6 56-60, warpins: 1 ---
			line.icon:hide()

			--- END OF BLOCK #6 ---

			FLOW; TARGET BLOCK #7


			--- BLOCK #7 61-61, warpins: 4 ---
			return 
			--- END OF BLOCK #7 ---



		end
		slot8 = line.setState

		--- END OF BLOCK #13 ---

		if v.get(v, "isMute")

		 == 1 then
		JUMP TO BLOCK #14
		else
		JUMP TO BLOCK #15
		end


		--- BLOCK #14 142-143, warpins: 1 ---
		slot9 = "mute"
		--- END OF BLOCK #14 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #18


		--- BLOCK #15 144-147, warpins: 1 ---
		--- END OF BLOCK #15 ---

		slot9 = if onMicNames[name] then
		JUMP TO BLOCK #16
		else
		JUMP TO BLOCK #17
		end


		--- BLOCK #16 148-149, warpins: 1 ---
		slot9 = "saying"
		--- END OF BLOCK #16 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #18


		--- BLOCK #17 150-150, warpins: 1 ---
		slot9 = "normal"

		--- END OF BLOCK #17 ---

		FLOW; TARGET BLOCK #18


		--- BLOCK #18 151-154, warpins: 3 ---
		slot8(slot9)

		lists[name] = line

		return 
		--- END OF BLOCK #18 ---

		FLOW; TARGET BLOCK #19


		--- BLOCK #19 155-155, warpins: 2 ---
		--- END OF BLOCK #19 ---



	end
	self.content.delMember = function (name)
		--- BLOCK #0 1-10, warpins: 1 ---
		local function del(lists, scroll)
			--- BLOCK #0 1-4, warpins: 1 ---
			local line = lists[name]

			--- END OF BLOCK #0 ---

			slot2 = if not line then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 5-5, warpins: 1 ---
			return 

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 6-14, warpins: 2 ---
			line.removeSelf(line)

			lists[name] = nil
			--- END OF BLOCK #2 ---

			slot3 = if memberSelectData then
			JUMP TO BLOCK #3
			else
			JUMP TO BLOCK #6
			end


			--- BLOCK #3 15-19, warpins: 1 ---
			--- END OF BLOCK #3 ---

			if memberSelectData.name == name then
			JUMP TO BLOCK #4
			else
			JUMP TO BLOCK #6
			end


			--- BLOCK #4 20-23, warpins: 1 ---
			memberSelectData = nil

			--- END OF BLOCK #4 ---

			slot3 = if memberSelectSpr then
			JUMP TO BLOCK #5
			else
			JUMP TO BLOCK #6
			end


			--- BLOCK #5 24-27, warpins: 1 ---
			memberSelectSpr:hide()

			--- END OF BLOCK #5 ---

			FLOW; TARGET BLOCK #6


			--- BLOCK #6 28-33, warpins: 4 ---
			local curCnt = 0
			local lineh = nil

			--- END OF BLOCK #6 ---

			for k, v in pairs(lists)


			LOOP BLOCK #7
			GO OUT TO BLOCK #15


			--- BLOCK #7 34-35, warpins: 1 ---
			--- END OF BLOCK #7 ---

			slot4 = if not lineh then
			JUMP TO BLOCK #8
			else
			JUMP TO BLOCK #9
			end


			--- BLOCK #8 36-39, warpins: 1 ---
			lineh = v.geth(v)

			--- END OF BLOCK #8 ---

			FLOW; TARGET BLOCK #9


			--- BLOCK #9 40-51, warpins: 2 ---
			v.pos(v, 0, scroll.geth(scroll) - curCnt*lineh)
			--- END OF BLOCK #9 ---

			slot10 = if memberSelectData then
			JUMP TO BLOCK #10
			else
			JUMP TO BLOCK #13
			end


			--- BLOCK #10 52-55, warpins: 1 ---
			--- END OF BLOCK #10 ---

			if memberSelectData.name == v then
			JUMP TO BLOCK #11
			else
			JUMP TO BLOCK #13
			end


			--- BLOCK #11 56-58, warpins: 1 ---
			--- END OF BLOCK #11 ---

			slot10 = if memberSelectSpr then
			JUMP TO BLOCK #12
			else
			JUMP TO BLOCK #13
			end


			--- BLOCK #12 59-65, warpins: 1 ---
			memberSelectSpr:pos(v.getPosition(v))

			--- END OF BLOCK #12 ---

			FLOW; TARGET BLOCK #13


			--- BLOCK #13 66-66, warpins: 4 ---
			curCnt = curCnt + 1

			--- END OF BLOCK #13 ---

			FLOW; TARGET BLOCK #14


			--- BLOCK #14 67-68, warpins: 2 ---
			--- END OF BLOCK #14 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #6


			--- BLOCK #15 69-70, warpins: 1 ---
			return true
			--- END OF BLOCK #15 ---



		end

		onMicNames[name] = nil

		--- END OF BLOCK #0 ---

		slot2 = if not del(adminLists, adminScroll)

		 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 11-14, warpins: 1 ---
		slot2 = del(membersLists, membersScroll)

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 15-16, warpins: 2 ---
		return slot2
		--- END OF BLOCK #2 ---



	end
	self.content.stateChanged = function (v)
		--- BLOCK #0 1-8, warpins: 1 ---
		local name = v.get(v, "name")
		--- END OF BLOCK #0 ---

		slot2 = if not adminLists[name] then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 9-10, warpins: 1 ---
		local line = membersLists[name]
		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 11-12, warpins: 2 ---
		--- END OF BLOCK #2 ---

		slot2 = if line then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #3 13-19, warpins: 1 ---
		slot3 = line.setState

		--- END OF BLOCK #3 ---

		if v.get(v, "isMute")

		 == 1 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 20-21, warpins: 1 ---
		slot4 = "mute"
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #8


		--- BLOCK #5 22-25, warpins: 1 ---
		--- END OF BLOCK #5 ---

		slot4 = if onMicNames[name] then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #6 26-27, warpins: 1 ---
		slot4 = "saying"
		--- END OF BLOCK #6 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #8


		--- BLOCK #7 28-28, warpins: 1 ---
		slot4 = "normal"

		--- END OF BLOCK #7 ---

		FLOW; TARGET BLOCK #8


		--- BLOCK #8 29-29, warpins: 3 ---
		slot3(slot4)

		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 30-30, warpins: 2 ---
		return 
		--- END OF BLOCK #9 ---



	end
	self.content.refreshOnMicNames = function ()
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if yaya.isonMic then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 5-11, warpins: 1 ---
		self.content.addOnMicMember(common.getPlayerName())
		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 12-15, warpins: 2 ---
		--- END OF BLOCK #2 ---

		for k, v in pairs(onMicNames)


		LOOP BLOCK #3
		GO OUT TO BLOCK #7


		--- BLOCK #3 16-18, warpins: 1 ---
		--- END OF BLOCK #3 ---

		slot5 = if v.mark then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 19-21, warpins: 1 ---
		v.mark = nil
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #5 22-30, warpins: 1 ---
		local data = v.data
		onMicNames[k] = nil

		self.content.stateChanged(data)

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 31-32, warpins: 3 ---
		--- END OF BLOCK #6 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #2


		--- BLOCK #7 33-33, warpins: 1 ---
		return 
		--- END OF BLOCK #7 ---



	end
	self.content.addOnMicMember = function (name)
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot1 = if onMicNames[name] then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 5-9, warpins: 1 ---
		onMicNames[name].mark = true
		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #2 10-17, warpins: 1 ---
		local data = g_data.voice:getMember(name)
		--- END OF BLOCK #2 ---

		slot1 = if data then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 18-26, warpins: 1 ---
		onMicNames[name] = {
			mark = true,
			data = data
		}

		self.content.stateChanged(data)

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 27-27, warpins: 3 ---
		return 
		--- END OF BLOCK #4 ---



	end

	self.content.refershMode()
	--- END OF BLOCK #23 ---

	for i, v in ipairs(members)

	LOOP BLOCK #24
	GO OUT TO BLOCK #26


	--- BLOCK #24 699-702, warpins: 1 ---
	self.content.addMember(v)
	--- END OF BLOCK #24 ---

	FLOW; TARGET BLOCK #25


	--- BLOCK #25 703-704, warpins: 2 ---
	--- END OF BLOCK #25 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #23


	--- BLOCK #26 705-709, warpins: 1 ---
	self.content.refershMemberCnt()

	--- END OF BLOCK #26 ---

	slot1 = if isPreview then
	JUMP TO BLOCK #27
	else
	JUMP TO BLOCK #31
	end


	--- BLOCK #27 710-718, warpins: 1 ---
	slot22 = self.content.addLog
	slot23 = "当前频道为: "

	--- END OF BLOCK #27 ---

	if roomData.get(roomData, "mode")

	 == 0 then
	JUMP TO BLOCK #28
	else
	JUMP TO BLOCK #29
	end


	--- BLOCK #28 719-720, warpins: 1 ---
	slot24 = "自由模式"
	--- END OF BLOCK #28 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #30


	--- BLOCK #29 721-721, warpins: 1 ---
	slot24 = "指挥模式"

	--- END OF BLOCK #29 ---

	FLOW; TARGET BLOCK #30


	--- BLOCK #30 722-724, warpins: 2 ---
	slot22(slot23 .. slot24)

	--- END OF BLOCK #30 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #34


	--- BLOCK #31 725-734, warpins: 1 ---
	local logs = g_data.voice:getLastLog(logMax)

	--- END OF BLOCK #31 ---

	for i=#logs, 1, -1
	LOOP BLOCK #32
	GO OUT TO BLOCK #33

	--- BLOCK #32 735-739, warpins: 2 ---
	self.content.addLog(logs[i])
	--- END OF BLOCK #32 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #31


	--- BLOCK #33 740-762, warpins: 1 ---
	self.content:runForever(transition.sequence({
		cc.DelayTime:create(1),
		cc.CallFunc:create(self.content.refreshOnMicNames)
	}))

	--- END OF BLOCK #33 ---

	FLOW; TARGET BLOCK #34


	--- BLOCK #34 763-764, warpins: 2 ---
	return 
	--- END OF BLOCK #34 ---



end
voice.modeChanged = function (self, log)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if self.content then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-7, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if self.content.type ~= "members" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 8-8, warpins: 2 ---
	return 

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 9-16, warpins: 2 ---
	self.content.refershMode()
	self.content.addLog(log)

	return 
	--- END OF BLOCK #3 ---



end
voice.memberJoin = function (self, v, log)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot3 = if self.content then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-7, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if self.content.type ~= "members" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 8-8, warpins: 2 ---
	return 

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 9-20, warpins: 2 ---
	self.content.addMember(v)
	self.content.refershMemberCnt()
	self.content.addLog(log)

	return 
	--- END OF BLOCK #3 ---



end
voice.memberExit = function (self, name, log)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot3 = if self.content then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-7, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if self.content.type ~= "members" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 8-8, warpins: 2 ---
	return 

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 9-20, warpins: 2 ---
	self.content.delMember(name)
	self.content.refershMemberCnt()
	self.content.addLog(log)

	return 
	--- END OF BLOCK #3 ---



end
voice.setIsMute = function (self, v, log)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot3 = if self.content then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-7, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if self.content.type ~= "members" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 8-8, warpins: 2 ---
	return 

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 9-17, warpins: 2 ---
	self.content.stateChanged(v)
	self.content.addLog(log)

	return 
	--- END OF BLOCK #3 ---



end
voice.setIsAdmin = function (self, v, log)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot3 = if self.content then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-7, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if self.content.type ~= "members" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 8-8, warpins: 2 ---
	return 

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 9-27, warpins: 2 ---
	self.content.delMember(v.get(v, "name"))
	self.content.addMember(v)
	self.content.refershMemberCnt()
	self.content.addLog(log)

	return 
	--- END OF BLOCK #3 ---



end
voice.addOnMicMember = function (self, name)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if self.content then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-7, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if self.content.type ~= "members" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 8-8, warpins: 2 ---
	return 

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 9-13, warpins: 2 ---
	self.content.addOnMicMember(name)

	return 
	--- END OF BLOCK #3 ---



end
local codes = {}
codes.OP_CHANNEL_OK = {
	0,
	"成功"
}
codes.OP_ERR_CHANNEL_EXIST = {
	-1,
	"已有频道, 请先退出再创建。"
}
codes.OP_ERR_CHANNEL_FULL = {
	-2,
	"[创建频道] 频道数量已满"
}
codes.OP_ERR_CHANNEL_CREATE_LIMIT_LEVEL = {
	-3,
	"[创建频道] 需要35级才可创建频道"
}
codes.OP_ERR_CHANNEL_CREATE_ALREADY_JOININ = {
	-4,
	"[创建频道] 已经进入频道"
}
codes.OP_ERR_CHANNEL_CREATE_INPUT_UNVALID = {
	-5,
	"[创建频道] 输入密码需为数字"
}
codes.OP_ERR_CHANNEL_CREATE_INPUT_UNVALID2 = {
	-6,
	"[创建频道] 输入人数需在范围内"
}
codes.OP_ERR_CHANNEL_ENTER_NOT_EXIST = {
	-7,
	"[进入频道] 频道不存在"
}
codes.OP_ERR_CHANNEL_ENTER_NOT_MATCH = {
	-8,
	"[进入频道] 密码不正确或其它错误"
}
codes.OP_ERR_CHANNEL_ENTER_OBJ_UNVALID = {
	-9,
	"[进入频道] 频道（行会或战队或队伍）不存在"
}
codes.OP_ERR_CHANNEL_ENTER_FULL_MEMBER = {
	-10,
	"[进入频道] 该频道成员已满。"
}
codes.OP_ERR_CHANNEL_EXIT_NOT_EXIST = {
	-11,
	"[退出频道] 频道不存在"
}
codes.OP_ERR_CHANNEL_EXIT_NOT_MEMBER = {
	-12,
	"[退出频道] 不是该频道成员"
}
codes.OP_ERR_CHANNEL_EXIT_NOT_INCHANNEL = {
	-13,
	"[退出频道] 您不在频道中（如果是踢玩家时的退出 则是该玩家不在频道中）"
}
codes.OP_ERR_CHANNEL_SWITCH_NOT_AUTH = {
	-14,
	"[切换频道] 只有管理员才可操作"
}
codes.OP_ERR_CHANNEL_SWITCH_NOT_MEMBER = {
	-15,
	"[切换频道] 不是该频道成员"
}
codes.OP_ERR_CHANNEL_SWITCH_NOT_EXIST = {
	-16,
	"[切换频道] 频道不存在"
}
codes.OP_ERR_CHANNEL_KICKOUT_NOT_AUTH = {
	-17,
	"[踢出成员] 只有管理员才可操作"
}
codes.OP_ERR_CHANNEL_KICKOUT_NOT_MEMBER = {
	-18,
	"[踢出成员] 不是该频道成员"
}
codes.OP_ERR_CHANNEL_KICKOUT_NOT_MEMBER_SEC = {
	-19,
	"[踢出成员] 对方不是该频道成员"
}
codes.OP_ERR_CHANNEL_KICKOUT_NOT_EXIST = {
	-20,
	"[踢出成员] 频道不存在"
}
codes.OP_ERR_CHANNEL_KICKOUT_NOT_AUTH_ADMIN = {
	-21,
	"[踢出成员] 不能将管理员踢出"
}
codes.OP_ERR_CHANNEL_MUTE_NOT_AUTH = {
	-22,
	"[成员禁言] 只有管理员才可操作"
}
codes.OP_ERR_CHANNEL_MUTE_NOT_EXIST = {
	-23,
	"[成员禁言] 频道不存在"
}
codes.OP_ERR_CHANNEL_MUTE_NOT_MEMBER = {
	-24,
	"[成员禁言] 不是该频道成员"
}
codes.OP_ERR_CHANNEL_MUTE_NOT_MEMBER_SEC = {
	-25,
	"[成员禁言] 对方不是该频道成员"
}
codes.OP_ERR_CHANNEL_MUTE_NOT_AUTH_ADMIN = {
	-26,
	"[成员禁言] 不能将管理员禁言"
}
codes.OP_ERR_CHANNEL_NAME_NOT_FIND = {
	-27,
	"玩家名错误或不在线"
}
codes.OP_ERR_CHANNEL_MEMBERLIST_OBJ_UNVALID = {
	-28,
	"频道不存在"
}
codes.OP_ERR_CHANNEL_MEMBERLIST_NOT_CREATE = {
	-29,
	"频道未创建"
}
codes.OP_ERR_CHANNEL_SYSTEM_BUSY = {
	-30,
	"系统繁忙, 请稍后再试"
}
codes.OP_ERR_CHANNEL_UNKNOWN = {
	-99,
	"未知错误"
}
voice.handleCode = function (code)
	--- BLOCK #0 1-4, warpins: 1 ---
	--- END OF BLOCK #0 ---

	for k, v in pairs(codes)


	LOOP BLOCK #1
	GO OUT TO BLOCK #4


	--- BLOCK #1 5-7, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if v[1] == code then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 8-10, warpins: 1 ---
	return k, v[2]
	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 11-12, warpins: 3 ---
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #4 13-13, warpins: 1 ---
	return 
	--- END OF BLOCK #4 ---



end
local channelTypes = {
	[0] = "ctPublic",
	"ctPersonal",
	"ctGuild",
	"ctCorps",
	"ctGroup"
}
voice.getChannelType = function (value)
	--- BLOCK #0 1-4, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if not channelTypes[value] then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 5-5, warpins: 1 ---
	slot1 = "unknow"

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 6-6, warpins: 2 ---
	return slot1
	--- END OF BLOCK #2 ---



end

return voice
--- END OF BLOCK #0 ---



