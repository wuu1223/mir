--- BLOCK #0 1-128, warpins: 1 ---
local common = import("..common.common")
local chatPos = import("..common.chatPos")
local chatPic = import("..common.chatPic")
local chatItem = import("..common.chatItem")
local guild = class("guild", function ()
	--- BLOCK #0 1-3, warpins: 1 ---
	return display.newNode()
	--- END OF BLOCK #0 ---



end)
local tmpGuildPrivilege = def.guild.guildPrivilege

table.merge(guild, {
	home,
	members,
	content,
	tabNode,
	leaderControl,
	friends,
	needClean,
	info,
	oldOffsetY,
	guilds
})

guild.ctor = function (self)
	--- BLOCK #0 1-135, warpins: 1 ---
	self._supportMove = true
	self.needClean = {}
	local bg = display.newSprite(res.gettex2("pic/common/black_2.png")):anchor(0, 0):add2(self)
	self.bg = bg

	self.size(self, 641, 455):anchor(0.5, 0.5):center()

	self.title = display.newSprite(res.gettex2("pic/panels/guild/clan.png")):anchor(0.5, 0.5):pos(self.getw(self)*0.5, self.geth(self) - 25):add2(self, 2)

	an.newBtn(res.gettex2("pic/common/close10.png"), function ()
		--- BLOCK #0 1-9, warpins: 1 ---
		sound.playSound("103")
		self:hidePanel()

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/close11.png"),
		size = cc.size(64, 64)
	}):anchor(1, 1):pos(self.getw(self) - 9, self.geth(self) - 8):addto(self, 2)

	self.nodeContent = display.newNode():addto(self)

	self.nodeContent:size(self.getw(self), self.geth(self)):anchor(0, 0)

	local texts = {
		"clan",
		"tguild"
	}
	local titlePic = {
		clan = "clan",
		tguild = "guild"
	}
	local tabs = {}

	local function click(btn)
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot1 = if self.showGuildListNode then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 5-5, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 6-13, warpins: 2 ---
		sound.playSound("103")
		--- END OF BLOCK #2 ---

		for i, v in ipairs(tabs)

		LOOP BLOCK #3
		GO OUT TO BLOCK #7


		--- BLOCK #3 14-15, warpins: 1 ---
		--- END OF BLOCK #3 ---

		if v == btn then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 16-33, warpins: 1 ---
		self.title:setTex(res.gettex2("pic/panels/guild/" .. titlePic[v.page] .. ".png"))
		v.select(v)
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #5 34-36, warpins: 1 ---
		v.unselect(v)

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 37-38, warpins: 3 ---
		--- END OF BLOCK #6 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #2


		--- BLOCK #7 39-43, warpins: 1 ---
		--- END OF BLOCK #7 ---

		if btn.page ~= self.page then
		JUMP TO BLOCK #8
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #8 44-51, warpins: 1 ---
		self.filterString = nil

		self:showContent(btn.page)

		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 52-52, warpins: 2 ---
		return 
		--- END OF BLOCK #9 ---



	end

	--- END OF BLOCK #0 ---

	for i, v in ipairs(texts)


	LOOP BLOCK #1
	GO OUT TO BLOCK #4


	--- BLOCK #1 136-202, warpins: 1 ---
	tabs[i] = an.newBtn(res.gettex2("pic/common/btn110.png"), click, {
		support = "easy",
		sprite = res.gettex2("pic/panels/guild/" .. v .. "_n.png"),
		select = {
			res.gettex2("pic/common/btn111.png"),
			manual = true
		}
	}):add2(self):anchor(1, 1):pos(0, self.geth(self) - 36 - (i - 1)*70)

	tabs[i].sprite:pos(tabs[i]:getw()/2 + 3, tabs[i]:geth()/2 + 12)

	tabs[i].page = v

	--- END OF BLOCK #1 ---

	if texts[1] == v then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 203-210, warpins: 1 ---
	tabs[i]:select()
	self.showContent(self, v)

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 211-212, warpins: 3 ---
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #4 213-214, warpins: 1 ---
	return 
	--- END OF BLOCK #4 ---



end
guild.onEnter = function (self)
	--- BLOCK #0 1-4, warpins: 1 ---
	print("guild:onEnter()")

	return 
	--- END OF BLOCK #0 ---



end
guild.onExit = function (self)
	--- BLOCK #0 1-4, warpins: 1 ---
	print("guild:onExit()")

	return 
	--- END OF BLOCK #0 ---



end
guild.clickCheck = function (self, time)
	--- BLOCK #0 1-7, warpins: 1 ---
	slot3 = g_data.client
	slot2 = g_data.client.checkLastTime
	slot4 = "guild"
	--- END OF BLOCK #0 ---

	slot5 = if not time then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 8-8, warpins: 1 ---
	slot5 = 3

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 9-11, warpins: 2 ---
	--- END OF BLOCK #2 ---

	slot2 = if not slot2(slot3, slot4, slot5)
	 then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 12-25, warpins: 1 ---
	main_scene.ui:tip("²Ù×÷Ì«¿ì, ÇëÖØÊÔ.", cc.c3b(255, 255, 0))

	return false

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 26-34, warpins: 2 ---
	g_data.client:setLastTime("guild", true)

	return true
	--- END OF BLOCK #4 ---



end
guild.cleanSubNode = function (self)
	--- BLOCK #0 1-5, warpins: 1 ---
	--- END OF BLOCK #0 ---

	if 0 < #self.needClean then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #1 6-9, warpins: 1 ---
	--- END OF BLOCK #1 ---

	for i, v in ipairs(self.needClean)

	LOOP BLOCK #2
	GO OUT TO BLOCK #4


	--- BLOCK #2 10-12, warpins: 1 ---
	v.removeSelf(v)

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 13-14, warpins: 2 ---
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #1


	--- BLOCK #4 15-21, warpins: 2 ---
	self.acInput = nil
	self.needClean = {}
	self.chatViewGuild = nil

	return 
	--- END OF BLOCK #4 ---



end
guild.showContent = function (self, page, ...)
	--- BLOCK #0 1-4, warpins: 1 ---
	self.page = page

	--- END OF BLOCK #0 ---

	slot2 = if self.content then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 5-10, warpins: 1 ---
	self.content:removeSelf()

	self.subContent = nil
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 11-30, warpins: 2 ---
	self.content = display.newNode():addto(self)

	self.content:size(self.getw(self), self.geth(self))
	--- END OF BLOCK #2 ---

	if page == "tguild" then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #3 31-35, warpins: 1 ---
	--- END OF BLOCK #3 ---

	slot2 = if g_data.guild.guildInfo then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 36-49, warpins: 1 ---
	self.bg:setTex(res.gettex2("pic/common/black_0.png"))
	self.showContentGuild(self, self.content, ...)
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #16


	--- BLOCK #5 50-62, warpins: 1 ---
	self.bg:setTex(res.gettex2("pic/common/black_2.png"))
	--- END OF BLOCK #5 ---

	slot2 = if not g_data.guild.getguildList then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 63-68, warpins: 1 ---
	net.send({
		CM_GILD_LIST,
		param = 0,
		tag = 7
	})
	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 69-73, warpins: 2 ---
	--- END OF BLOCK #7 ---

	slot2 = if not g_data.guild.guildInfo then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #8 74-79, warpins: 1 ---
	net.send({
		CM_PLAYER_GILD
	})

	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 80-86, warpins: 2 ---
	g_data.guild.getguildList = false
	self.subpage = nil

	--- END OF BLOCK #9 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #16


	--- BLOCK #10 87-88, warpins: 1 ---
	--- END OF BLOCK #10 ---

	if page == "clan" then
	JUMP TO BLOCK #11
	else
	JUMP TO BLOCK #16
	end


	--- BLOCK #11 89-93, warpins: 1 ---
	--- END OF BLOCK #11 ---

	slot2 = if g_data.guild.clanInfo then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #13
	end


	--- BLOCK #12 94-107, warpins: 1 ---
	self.bg:setTex(res.gettex2("pic/common/black_0.png"))
	self.showContentClan(self, self.content, ...)
	--- END OF BLOCK #12 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #16


	--- BLOCK #13 108-120, warpins: 1 ---
	self.bg:setTex(res.gettex2("pic/common/black_2.png"))
	--- END OF BLOCK #13 ---

	slot2 = if not g_data.guild.getCorpsList then
	JUMP TO BLOCK #14
	else
	JUMP TO BLOCK #15
	end


	--- BLOCK #14 121-126, warpins: 1 ---
	net.send({
		CM_CORPS_LIST,
		param = 0,
		tag = 7
	})

	--- END OF BLOCK #14 ---

	FLOW; TARGET BLOCK #15


	--- BLOCK #15 127-132, warpins: 2 ---
	g_data.guild.getCorpsList = false
	self.subpage = nil

	--- END OF BLOCK #15 ---

	FLOW; TARGET BLOCK #16


	--- BLOCK #16 133-133, warpins: 5 ---
	return 
	--- END OF BLOCK #16 ---



end
guild.uirefushContent = function (self, page)
	--- BLOCK #0 1-4, warpins: 1 ---
	self.page = page

	--- END OF BLOCK #0 ---

	slot2 = if self.content then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 5-10, warpins: 1 ---
	self.content:removeSelf()

	self.subContent = nil
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 11-30, warpins: 2 ---
	self.content = display.newNode():addto(self)

	self.content:size(self.getw(self), self.geth(self))
	--- END OF BLOCK #2 ---

	if page == "tguild" then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #3 31-35, warpins: 1 ---
	--- END OF BLOCK #3 ---

	slot2 = if g_data.guild.guildInfo then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 36-48, warpins: 1 ---
	self.bg:setTex(res.gettex2("pic/common/black_0.png"))
	self.showContentGuild(self, self.content)
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #5 49-67, warpins: 1 ---
	self.bg:setTex(res.gettex2("pic/common/black_2.png"))
	self.showContentGuildNil(self, self.content)

	g_data.guild.getguildList = false
	self.subpage = nil

	--- END OF BLOCK #5 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #6 68-69, warpins: 1 ---
	--- END OF BLOCK #6 ---

	if page == "clan" then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #7 70-74, warpins: 1 ---
	--- END OF BLOCK #7 ---

	slot2 = if g_data.guild.clanInfo then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #8 75-87, warpins: 1 ---
	self.bg:setTex(res.gettex2("pic/common/black_0.png"))
	self.showContentClan(self, self.content)
	--- END OF BLOCK #8 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #9 88-105, warpins: 1 ---
	self.bg:setTex(res.gettex2("pic/common/black_2.png"))
	self.showContentClanNil(self, self.content)

	g_data.guild.getCorpsList = false
	self.subpage = nil

	--- END OF BLOCK #9 ---

	FLOW; TARGET BLOCK #10


	--- BLOCK #10 106-106, warpins: 5 ---
	return 
	--- END OF BLOCK #10 ---



end
guild.showContentClanNil = function (self, parent, ...)
	--- BLOCK #0 1-35, warpins: 1 ---
	local back1 = display.newScale9Sprite(res.getframe2("pic/scale/scale16.png"), 0, 0, cc.size(614, 336)):anchor(0, 0):pos(14, 64):add2(parent)
	local width = {
		150,
		150,
		150,
		60,
		96
	}
	local Titlelabel = {
		"Õ½¶ÓÃû",
		"¶Ó³¤Ãû",
		"¶Ó³¤ÐÐ»á",
		"ÈËÊý",
		"×´Ì¬"
	}
	local posOffset = 4

	--- END OF BLOCK #0 ---

	for i, v in ipairs(width)

	LOOP BLOCK #1
	GO OUT TO BLOCK #3


	--- BLOCK #1 36-97, warpins: 1 ---
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png"), 0, 0, cc.size(v + 2, 42)):anchor(0.5, 0.5):pos(posOffset + v*0.5, back1.geth(back1) - 23):add2(back1)
	an.newLabel(Titlelabel[i], 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(posOffset + v*0.5, back1.geth(back1) - 23):add2(back1)

	posOffset = posOffset + v
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 98-99, warpins: 2 ---
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #3 100-105, warpins: 1 ---
	local dataList = g_data.guild.corpsList

	--- END OF BLOCK #3 ---

	if #dataList == 0 then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 106-137, warpins: 1 ---
	an.newLabel("µ±Ç°ÎÞÕ½¶Ó", 24, 1, {
		color = def.colors.labelGray
	}):anchor(0.5, 0.5):pos(back1.getw(back1)/2, back1.geth(back1)/2):add2(back1, 2)

	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 138-206, warpins: 2 ---
	local infoView = an.newScroll(4, 4, 608, 288):add2(back1)
	local h = 42

	infoView.setScrollSize(infoView, 608, math.max(288, #dataList*h))
	infoView.enableTouch(infoView, false)
	infoView.enableClick(infoView, function ()
		--- BLOCK #0 1-1, warpins: 1 ---
		return 
		--- END OF BLOCK #0 ---



	end)

	local selectPic, selectData, sqBtn = nil
	sqBtn = an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-22, warpins: 1 ---
		self.curSelectCorps = selectData:get("corpsID")

		--- END OF BLOCK #2 ---

		if g_data.guild.curApplyclan == self.curSelectCorps then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 23-36, warpins: 1 ---
		an.newMsgbox("ÊÇ·ñÈ¡Ïû¶ÔÕ½¶Ó " .. selectData:get("corpsName") .. " µÄÉêÇëÂð£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-15, warpins: 1 ---
			net.send({
				CM_CORPS_CANCEL_JOIN
			}, nil, {
				{
					"ID",
					self.curSelectCorps
				}
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 16-16, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})
		--- END OF BLOCK #3 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #5


		--- BLOCK #4 37-52, warpins: 1 ---
		net.send({
			CM_CORPS_GET_RECRUIT_CONDITION
		}, nil, {
			{
				"ID",
				selectData:get("corpsID")
			}
		})

		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 53-53, warpins: 2 ---
		return 
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 54-54, warpins: 2 ---
		--- END OF BLOCK #6 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/jrzd.png")
	}):add2(parent):anchor(0.5, 0.5):pos(580, 38)

	--- END OF BLOCK #5 ---

	for i, v in ipairs(dataList)


	LOOP BLOCK #6
	GO OUT TO BLOCK #23


	--- BLOCK #6 207-213, warpins: 1 ---
	slot17 = display.newScale9Sprite
	slot18 = res.getframe2
	--- END OF BLOCK #6 ---

	if i%2 == 0 then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 214-215, warpins: 1 ---
	slot19 = "pic/scale/scale18.png"
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #9


	--- BLOCK #8 216-216, warpins: 1 ---
	slot19 = "pic/scale/scale19.png"
	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 217-399, warpins: 2 ---
	local cell = slot17(slot18(slot19), 0, 0, cc.size(608, h)):anchor(0, 0):pos(0, infoView.getScrollSize(infoView).height - i*h):add2(infoView)
	local info = {}
	local label = g_data.player:fixStrLen(v.get(v, "corpsName"), 8)
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(75, h*0.5)
	label = g_data.player:fixStrLen(v.get(v, "captainName"), 8)
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(225, h*0.5)
	label = g_data.player:fixStrLen(v.get(v, "gildName"), 8)
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(375, h*0.5)
	label = v.get(v, "memberCount")
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(480, h*0.5)

	--- END OF BLOCK #9 ---

	slot20 = if g_data.guild.curApplyclan then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #12
	end


	--- BLOCK #10 400-408, warpins: 1 ---
	--- END OF BLOCK #10 ---

	if v.get(v, "corpsID")

	 == g_data.guild.curApplyclan then
	JUMP TO BLOCK #11
	else
	JUMP TO BLOCK #12
	end


	--- BLOCK #11 409-410, warpins: 1 ---
	label = "ÉêÇëÖÐ"
	--- END OF BLOCK #11 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #13


	--- BLOCK #12 411-411, warpins: 2 ---
	label = ""
	--- END OF BLOCK #12 ---

	FLOW; TARGET BLOCK #13


	--- BLOCK #13 412-470, warpins: 2 ---
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(554, h*0.5)

	cell.setTouchEnabled(cell, true)
	cell.setTouchSwallowEnabled(cell, false)
	cell.addNodeEventListener(cell, cc.NODE_TOUCH_EVENT, function (event)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if event.name == "began" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-9, warpins: 1 ---
		cell.offsetBeginY = event.y

		return true

		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #16


		--- BLOCK #2 10-12, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if event.name == "ended" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #16
		end


		--- BLOCK #3 13-23, warpins: 1 ---
		local offsetY = event.y - cell.offsetBeginY

		--- END OF BLOCK #3 ---

		if math.abs(offsetY)
		 <= 5 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #16
		end


		--- BLOCK #4 24-26, warpins: 1 ---
		--- END OF BLOCK #4 ---

		slot2 = if selectPic then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #5 27-31, warpins: 1 ---
		--- END OF BLOCK #5 ---

		for i, v in ipairs(selectPic.info)

		LOOP BLOCK #6
		GO OUT TO BLOCK #8


		--- BLOCK #6 32-37, warpins: 1 ---
		v.setColor(v, def.colors.cellNor)
		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 38-39, warpins: 2 ---
		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #5


		--- BLOCK #8 40-44, warpins: 1 ---
		selectPic:removeSelf()

		selectPic = nil
		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 45-82, warpins: 2 ---
		selectData = v
		selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(608, h)):anchor(0, 0):pos(0, 0):add2(cell)
		selectPic.info = info

		--- END OF BLOCK #9 ---

		for i, v in ipairs(info)

		LOOP BLOCK #10
		GO OUT TO BLOCK #12


		--- BLOCK #10 83-88, warpins: 1 ---
		v.setColor(v, def.colors.cellSel)
		--- END OF BLOCK #10 ---

		FLOW; TARGET BLOCK #11


		--- BLOCK #11 89-90, warpins: 2 ---
		--- END OF BLOCK #11 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #9


		--- BLOCK #12 91-95, warpins: 1 ---
		--- END OF BLOCK #12 ---

		slot2 = if g_data.guild.curApplyclan then
		JUMP TO BLOCK #13
		else
		JUMP TO BLOCK #15
		end


		--- BLOCK #13 96-105, warpins: 1 ---
		--- END OF BLOCK #13 ---

		if v:get("corpsID")
		 == g_data.guild.curApplyclan then
		JUMP TO BLOCK #14
		else
		JUMP TO BLOCK #15
		end


		--- BLOCK #14 106-115, warpins: 1 ---
		sqBtn.sprite:setTex(res.gettex2("pic/panels/guild/qxsq.png"))
		--- END OF BLOCK #14 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #16


		--- BLOCK #15 116-124, warpins: 2 ---
		sqBtn.sprite:setTex(res.gettex2("pic/panels/guild/jrzd.png"))

		--- END OF BLOCK #15 ---

		FLOW; TARGET BLOCK #16


		--- BLOCK #16 125-125, warpins: 5 ---
		return 
		--- END OF BLOCK #16 ---



	end)

	local listener = cc.EventListenerCustom:create("UpdateNilClanState", function ()
		--- BLOCK #0 1-5, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if g_data.guild.curApplyclan then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #1 6-15, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if v:get("corpsID")
		 == g_data.guild.curApplyclan then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 16-22, warpins: 1 ---
		info[5]:setString("ÉêÇëÖÐ")
		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #3 23-28, warpins: 2 ---
		info[5]:setString("")
		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 29-40, warpins: 2 ---
		--- END OF BLOCK #4 ---

		if v:get("corpsID")
		 == selectData:get("corpsID")
		 then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #5 41-50, warpins: 1 ---
		--- END OF BLOCK #5 ---

		if g_data.guild.curApplyclan == v:get("corpsID")
		 then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #6 51-60, warpins: 1 ---
		sqBtn.sprite:setTex(res.gettex2("pic/panels/guild/qxsq.png"))
		--- END OF BLOCK #6 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #8


		--- BLOCK #7 61-69, warpins: 1 ---
		sqBtn.sprite:setTex(res.gettex2("pic/panels/guild/jrzd.png"))

		--- END OF BLOCK #7 ---

		FLOW; TARGET BLOCK #8


		--- BLOCK #8 70-70, warpins: 3 ---
		return 
		--- END OF BLOCK #8 ---



	end)

	cell.getEventDispatcher(cell):addEventListenerWithSceneGraphPriority(listener, cell)

	--- END OF BLOCK #13 ---

	if i == 1 then
	JUMP TO BLOCK #14
	else
	JUMP TO BLOCK #21
	end


	--- BLOCK #14 471-505, warpins: 1 ---
	selectData = v
	selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(608, h)):anchor(0, 0):pos(0, 0):add2(cell)
	selectPic.info = info

	--- END OF BLOCK #14 ---

	for i, v in ipairs(info)

	LOOP BLOCK #15
	GO OUT TO BLOCK #17


	--- BLOCK #15 506-511, warpins: 1 ---
	v.setColor(v, def.colors.cellSel)
	--- END OF BLOCK #15 ---

	FLOW; TARGET BLOCK #16


	--- BLOCK #16 512-513, warpins: 2 ---
	--- END OF BLOCK #16 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #14


	--- BLOCK #17 514-518, warpins: 1 ---
	--- END OF BLOCK #17 ---

	slot21 = if g_data.guild.curApplyclan then
	JUMP TO BLOCK #18
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #18 519-527, warpins: 1 ---
	--- END OF BLOCK #18 ---

	if v.get(v, "corpsID")
	 == g_data.guild.curApplyclan then
	JUMP TO BLOCK #19
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #19 528-536, warpins: 1 ---
	sqBtn.sprite:setTex(res.gettex2("pic/panels/guild/qxsq.png"))
	--- END OF BLOCK #19 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #21


	--- BLOCK #20 537-544, warpins: 2 ---
	sqBtn.sprite:setTex(res.gettex2("pic/panels/guild/jrzd.png"))

	--- END OF BLOCK #20 ---

	FLOW; TARGET BLOCK #21


	--- BLOCK #21 545-546, warpins: 3 ---
	--- END OF BLOCK #21 ---

	FLOW; TARGET BLOCK #22


	--- BLOCK #22 547-548, warpins: 2 ---
	--- END OF BLOCK #22 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #5


	--- BLOCK #23 549-561, warpins: 1 ---
	local filterInput = nil
	slot13 = an.newInput
	slot14 = 0
	slot15 = 0
	slot16 = 196
	slot17 = 40
	slot18 = 7
	slot19 = {}
	slot20 = {
		nil,
		20,
		1
	}
	--- END OF BLOCK #23 ---

	slot21 = if not self.filterString then
	JUMP TO BLOCK #24
	else
	JUMP TO BLOCK #25
	end


	--- BLOCK #24 562-562, warpins: 1 ---
	slot21 = ""
	--- END OF BLOCK #24 ---

	FLOW; TARGET BLOCK #25


	--- BLOCK #25 563-715, warpins: 2 ---
	slot20[1] = slot21
	slot19.label = slot20
	slot19.bg = {
		tex = res.gettex2("pic/scale/scale16.png"),
		offset = {
			-10,
			2
		}
	}
	slot19.tip = {
		"ÊäÈëÕ½¶Ó¹Ø¼ü×Ö      ",
		20,
		1,
		{
			color = cc.c3b(128, 128, 128)
		}
	}
	slot19.stop_call = function ()
		--- BLOCK #0 1-6, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if filterInput:getString()
		 == "" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 7-16, warpins: 1 ---
		net.send({
			CM_CORPS_LIST,
			param = 0,
			tag = 7
		})

		self.filterString = nil

		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 17-35, warpins: 2 ---
		self.filterString = filterInput:getString()

		net.send({
			CM_FIND_CORPS_BYNAME
		}, {
			filterInput:getString()
		})

		return 
		--- END OF BLOCK #2 ---



	end
	filterInput = slot13(slot14, slot15, slot16, slot17, slot18, slot19):add2(parent):anchor(0, 0):pos(25, 14):add(res.get2("pic/panels/voice/search.png"):pos(170, 20))

	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-12, warpins: 1 ---
		sound.playSound("103")

		slot0 = g_data.guild.page
		--- END OF BLOCK #0 ---

		slot1 = if g_data.guild.serach then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 13-14, warpins: 1 ---
		slot1 = 0
		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #3


		--- BLOCK #2 15-15, warpins: 1 ---
		slot1 = 1
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 16-24, warpins: 2 ---
		local page = slot0 + slot1

		net.send({
			CM_CORPS_LIST,
			tag = 7,
			param = page
		})

		return 
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/xyy.png")
	}):add2(parent):anchor(0.5, 0.5):pos(480, 38)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-11, warpins: 1 ---
		sound.playSound("103")

		local page = g_data.guild.page - 1

		--- END OF BLOCK #0 ---

		if page < 0 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 12-17, warpins: 1 ---
		self:showError(30)

		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 18-20, warpins: 2 ---
		--- END OF BLOCK #2 ---

		if page < 0 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 21-22, warpins: 1 ---
		page = 0

		--- END OF BLOCK #3 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #4 23-30, warpins: 2 ---
		net.send({
			CM_CORPS_LIST,
			tag = 7,
			param = page
		})

		return 
		--- END OF BLOCK #4 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/syy.png")
	}):add2(parent):anchor(0.5, 0.5):pos(380, 38)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-9, warpins: 1 ---
		sound.playSound("103")
		--- END OF BLOCK #0 ---

		if g_data.guild.page == 0 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #1 10-14, warpins: 1 ---
		--- END OF BLOCK #1 ---

		slot0 = if not g_data.guild.serach then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 15-20, warpins: 1 ---
		self:showError(30)

		return 

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 21-27, warpins: 3 ---
		net.send({
			CM_CORPS_LIST,
			param = 0,
			tag = 7
		})

		return 
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/sy.png")
	}):add2(parent):anchor(0.5, 0.5):pos(280, 38)

	return 
	--- END OF BLOCK #25 ---



end
guild.recruitCondition = function (self, msg, buf, bufLen)
	--- BLOCK #0 1-11, warpins: 1 ---
	print(getRecordSize("TRecruitCondition"), bufLen)
	--- END OF BLOCK #0 ---

	if getRecordSize("TRecruitCondition")

	 ~= bufLen then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 12-12, warpins: 1 ---
	return 
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 13-17, warpins: 1 ---
	--- END OF BLOCK #2 ---

	slot4 = if not g_data.guild.clanInfo then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #3 18-20, warpins: 1 ---
	--- END OF BLOCK #3 ---

	slot4 = if not self.curSelectCorps then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #4 21-21, warpins: 1 ---
	return 

	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 22-22, warpins: 0 ---
	--- END OF BLOCK #5 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #6


	--- BLOCK #6 23-42, warpins: 3 ---
	local value = getRecord("TRecruitCondition")

	net.record(value, buf, bufLen)
	dump(value)

	local box, inputNotice, inputLevel = nil
	local toggleBtns = {}

	--- END OF BLOCK #6 ---

	slot9 = if not value.get(value, "job")

	 then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 43-43, warpins: 1 ---
	local localJob = 0
	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 44-57, warpins: 2 ---
	local selectJob = {}

	--- END OF BLOCK #8 ---

	if ycFunction:band(ycFunction:rshift(localJob, 0), 1)

	 ~= 1 then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #9 58-59, warpins: 1 ---
	slot11 = false
	--- END OF BLOCK #9 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #11


	--- BLOCK #10 60-60, warpins: 1 ---
	slot11 = true
	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 61-74, warpins: 2 ---
	selectJob[1] = slot11

	--- END OF BLOCK #11 ---

	if ycFunction:band(ycFunction:rshift(localJob, 1), 1)

	 ~= 1 then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #13
	end


	--- BLOCK #12 75-76, warpins: 1 ---
	slot11 = false
	--- END OF BLOCK #12 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #14


	--- BLOCK #13 77-77, warpins: 1 ---
	slot11 = true
	--- END OF BLOCK #13 ---

	FLOW; TARGET BLOCK #14


	--- BLOCK #14 78-91, warpins: 2 ---
	selectJob[2] = slot11

	--- END OF BLOCK #14 ---

	if ycFunction:band(ycFunction:rshift(localJob, 2), 1)

	 ~= 1 then
	JUMP TO BLOCK #15
	else
	JUMP TO BLOCK #16
	end


	--- BLOCK #15 92-93, warpins: 1 ---
	slot11 = false
	--- END OF BLOCK #15 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #17


	--- BLOCK #16 94-94, warpins: 1 ---
	slot11 = true
	--- END OF BLOCK #16 ---

	FLOW; TARGET BLOCK #17


	--- BLOCK #17 95-148, warpins: 2 ---
	selectJob[3] = slot11
	box = an.newMsgbox("", function (isOk)
		--- BLOCK #0 1-2, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if isOk == 1 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #29
		end


		--- BLOCK #1 3-10, warpins: 1 ---
		print("ÉêÇë¼ÓÈë")

		--- END OF BLOCK #1 ---

		slot1 = if g_data.guild.clanInfo then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #2 11-18, warpins: 1 ---
		local count = tonumber(inputLevel:getString())

		--- END OF BLOCK #2 ---

		slot1 = if count then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 19-21, warpins: 1 ---
		--- END OF BLOCK #3 ---

		if count < 0 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 22-28, warpins: 2 ---
		main_scene.ui:tip("ÇëÊäÈëÕýÈ·µÄÊý×Ö£¡")

		return 

		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 29-33, warpins: 1 ---
		local job = 0
		--- END OF BLOCK #5 ---

		for i=1, 3, 1
		LOOP BLOCK #6
		GO OUT TO BLOCK #9

		--- BLOCK #6 34-37, warpins: 2 ---
		--- END OF BLOCK #6 ---

		slot7 = if selectJob[i] then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 38-52, warpins: 1 ---
		job = job + ycFunction:lshift(1, i - 1)

		print(ycFunction:lshift(1, i - 1))

		--- END OF BLOCK #7 ---

		FLOW; TARGET BLOCK #8


		--- BLOCK #8 53-53, warpins: 2 ---
		--- END OF BLOCK #8 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #5


		--- BLOCK #9 54-91, warpins: 1 ---
		local tmpValue = getRecord("TRecruitCondition")

		tmpValue.set(tmpValue, "notice", inputNotice:getString())
		tmpValue.set(tmpValue, "level", tonumber(inputLevel:getString()))
		tmpValue.set(tmpValue, "job", job)
		dump(tmpValue)
		net.send({
			CM_CORPS_SET_RECRUIT_CONDITION
		}, nil, tmpValue)

		--- END OF BLOCK #9 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #29


		--- BLOCK #10 92-100, warpins: 1 ---
		local dataList = g_data.guild.corpsList
		local target = ""
		local preName, willName = nil

		--- END OF BLOCK #10 ---

		for i, v in ipairs(dataList)

		LOOP BLOCK #11
		GO OUT TO BLOCK #17


		--- BLOCK #11 101-105, warpins: 1 ---
		--- END OF BLOCK #11 ---

		slot10 = if g_data.guild.curApplyclan then
		JUMP TO BLOCK #12
		else
		JUMP TO BLOCK #14
		end


		--- BLOCK #12 106-114, warpins: 1 ---
		--- END OF BLOCK #12 ---

		if v.get(v, "corpsID")

		 == g_data.guild.curApplyclan then
		JUMP TO BLOCK #13
		else
		JUMP TO BLOCK #14
		end


		--- BLOCK #13 115-119, warpins: 1 ---
		preName = v.get(v, "corpsName")

		--- END OF BLOCK #13 ---

		FLOW; TARGET BLOCK #14


		--- BLOCK #14 120-127, warpins: 3 ---
		--- END OF BLOCK #14 ---

		if v.get(v, "corpsID")

		 == self.curSelectCorps then
		JUMP TO BLOCK #15
		else
		JUMP TO BLOCK #16
		end


		--- BLOCK #15 128-132, warpins: 1 ---
		willName = v.get(v, "corpsName")

		--- END OF BLOCK #15 ---

		FLOW; TARGET BLOCK #16


		--- BLOCK #16 133-134, warpins: 3 ---
		--- END OF BLOCK #16 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #17 135-139, warpins: 1 ---
		--- END OF BLOCK #17 ---

		slot5 = if g_data.guild.curApplyclan then
		JUMP TO BLOCK #18
		else
		JUMP TO BLOCK #27
		end


		--- BLOCK #18 140-152, warpins: 1 ---
		print("g_data.guild.curApplyclan", g_data.guild.curApplyclan)

		--- END OF BLOCK #18 ---

		if g_data.guild.curApplyclan == self.curSelectCorps then
		JUMP TO BLOCK #19
		else
		JUMP TO BLOCK #22
		end


		--- BLOCK #19 153-154, warpins: 1 ---
		--- END OF BLOCK #19 ---

		slot3 = if not preName then
		JUMP TO BLOCK #20
		else
		JUMP TO BLOCK #21
		end


		--- BLOCK #20 155-155, warpins: 1 ---
		preName = ""
		--- END OF BLOCK #20 ---

		FLOW; TARGET BLOCK #21


		--- BLOCK #21 156-160, warpins: 2 ---
		target = "ÄúÈ·¶¨È¡Ïû¶Ô" .. preName .. " Õ½¶ÓµÄÉêÇëÂð£¿"
		--- END OF BLOCK #21 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #28


		--- BLOCK #22 161-162, warpins: 1 ---
		--- END OF BLOCK #22 ---

		slot3 = if not preName then
		JUMP TO BLOCK #23
		else
		JUMP TO BLOCK #24
		end


		--- BLOCK #23 163-163, warpins: 1 ---
		preName = ""
		--- END OF BLOCK #23 ---

		FLOW; TARGET BLOCK #24


		--- BLOCK #24 164-165, warpins: 2 ---
		--- END OF BLOCK #24 ---

		slot4 = if not willName then
		JUMP TO BLOCK #25
		else
		JUMP TO BLOCK #26
		end


		--- BLOCK #25 166-166, warpins: 1 ---
		willName = ""
		--- END OF BLOCK #25 ---

		FLOW; TARGET BLOCK #26


		--- BLOCK #26 167-173, warpins: 2 ---
		target = "ÄúÈ·¶¨¼ÓÈë " .. willName .. ",È¡Ïû¶Ô" .. preName .. " Õ½¶ÓµÄÉêÇëÂð£¿"
		--- END OF BLOCK #26 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #28


		--- BLOCK #27 174-177, warpins: 1 ---
		target = "ÄúÈ·¶¨ÉêÇë¼ÓÈë " .. willName .. " Õ½¶ÓÂð£¿"

		--- END OF BLOCK #27 ---

		FLOW; TARGET BLOCK #28


		--- BLOCK #28 178-183, warpins: 3 ---
		an.newMsgbox(target, function (isOk)
			--- BLOCK #0 1-14, warpins: 1 ---
			local level = g_data.player.ability:get("level")

			--- END OF BLOCK #0 ---

			if self.curSelectCorps == g_data.guild.curApplyclan then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #3
			end


			--- BLOCK #1 15-21, warpins: 1 ---
			--- END OF BLOCK #1 ---

			if level < value:get("level")
			 then
			JUMP TO BLOCK #2
			else
			JUMP TO BLOCK #3
			end


			--- BLOCK #2 22-28, warpins: 1 ---
			main_scene.ui:tip("ÄúµÄµÈ¼¶¹ýµÍ")

			return 

			--- END OF BLOCK #2 ---

			FLOW; TARGET BLOCK #3


			--- BLOCK #3 29-30, warpins: 3 ---
			--- END OF BLOCK #3 ---

			if isOk == 1 then
			JUMP TO BLOCK #4
			else
			JUMP TO BLOCK #8
			end


			--- BLOCK #4 31-40, warpins: 1 ---
			slot2 = net.send
			slot3 = {}
			--- END OF BLOCK #4 ---

			if self.curSelectCorps == g_data.guild.curApplyclan then
			JUMP TO BLOCK #5
			else
			JUMP TO BLOCK #6
			end


			--- BLOCK #5 41-43, warpins: 1 ---
			--- END OF BLOCK #5 ---

			slot4 = if not CM_CORPS_CANCEL_JOIN then
			JUMP TO BLOCK #6
			else
			JUMP TO BLOCK #7
			end


			--- BLOCK #6 44-44, warpins: 2 ---
			slot4 = CM_CORPS_REQUEST_JOIN
			--- END OF BLOCK #6 ---

			FLOW; TARGET BLOCK #7


			--- BLOCK #7 45-53, warpins: 2 ---
			slot3[1] = slot4

			slot2(slot3, nil, {
				{
					"ID",
					self.curSelectCorps
				}
			})

			--- END OF BLOCK #7 ---

			FLOW; TARGET BLOCK #8


			--- BLOCK #8 54-54, warpins: 2 ---
			return 
			--- END OF BLOCK #8 ---



		end, {
			center = true,
			hasCancel = true
		})

		--- END OF BLOCK #28 ---

		FLOW; TARGET BLOCK #29


		--- BLOCK #29 184-184, warpins: 3 ---
		return 
		--- END OF BLOCK #29 ---

		FLOW; TARGET BLOCK #30


		--- BLOCK #30 185-185, warpins: 2 ---
		--- END OF BLOCK #30 ---



	end, {
		disableScroll = true,
		center = true,
		hasCancel = true
	})
	local base = display.newScale9Sprite(res.getframe2("pic/scale/scale16.png"), 0, 0, cc.size(box.bg:getw() - 40, 40)):anchor(0.5, 0.5):pos(box.bg:getw()/2, box.bg:geth() - 80):add2(box.bg, 2)

	--- END OF BLOCK #17 ---

	slot12 = if not g_data.guild.clanInfo then
	JUMP TO BLOCK #18
	else
	JUMP TO BLOCK #19
	end


	--- BLOCK #18 149-180, warpins: 1 ---
	an.newLabel(value.get(value, "notice"), 20, 1, {
		color = def.colors.labelGray
	}):addTo(base):anchor(0, 0.5):pos(10, base.geth(base)/2)

	--- END OF BLOCK #18 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #20


	--- BLOCK #19 181-215, warpins: 1 ---
	inputNotice = an.newInput(10, base.geth(base)/2, box.bg:getw() - 40, 40, 18, {
		tip = {
			"µã»÷±à¼­¹«¸æ(×î¶à18¸ö×Ö)",
			20,
			1
		},
		label = {
			value.get(value, "notice"),
			20
		}
	}):addTo(base):anchor(0, 0.5)
	--- END OF BLOCK #19 ---

	FLOW; TARGET BLOCK #20


	--- BLOCK #20 216-250, warpins: 2 ---
	base = display.newScale9Sprite(res.getframe2("pic/scale/scale16.png"), 0, 0, cc.size(40, 40)):anchor(0.5, 0.5):pos(148, 150):add2(box.bg, 2)

	--- END OF BLOCK #20 ---

	slot12 = if not g_data.guild.clanInfo then
	JUMP TO BLOCK #21
	else
	JUMP TO BLOCK #22
	end


	--- BLOCK #21 251-314, warpins: 1 ---
	an.newLabel("µÈ¼¶ÏÞÖÆ:            ¼¶ÒÔÉÏ", 20, 1, {
		color = def.colors.labelGray
	}):add2(box.bg, 2):anchor(0, 0.5):pos(30, 150)
	an.newLabel("" .. value.get(value, "level"), 20, 1, {
		color = def.colors.labelGray
	}):add2(base, 2):anchor(0.5, 0.5):pos(base.getw(base)*0.5, base.geth(base)*0.5)
	--- END OF BLOCK #21 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #23


	--- BLOCK #22 315-371, warpins: 1 ---
	an.newLabel("µÈ¼¶ÏÞÖÆ:           ¼¶ÒÔÉÏ", 20, 1, {
		color = def.colors.labelGray
	}):add2(box.bg, 2):anchor(0, 0.5):pos(30, 150)

	inputLevel = an.newInput(8, base.geth(base)/2, 40, 40, 2, {
		label = {
			"" .. value.get(value, "level"),
			20
		}
	}):addTo(base):anchor(0, 0.5)

	--- END OF BLOCK #22 ---

	FLOW; TARGET BLOCK #23


	--- BLOCK #23 372-403, warpins: 2 ---
	an.newLabel("Ö°ÒµÏÞÖÆ:", 20, 1, {
		color = def.colors.labelGray
	}):add2(box.bg, 2):anchor(0, 0.5):pos(30, 100)

	local function click(idx)
		--- BLOCK #0 1-13, warpins: 1 ---
		selectJob[idx] = not selectJob[idx]

		toggleBtns[idx]:setIsSelect(selectJob[idx])

		return 
		--- END OF BLOCK #0 ---



	end

	local textList = {
		"Õ½Ê¿",
		"·¨Ê¦",
		"µÀÊ¿"
	}
	--- END OF BLOCK #23 ---

	for i=1, #textList, 1
	LOOP BLOCK #24
	GO OUT TO BLOCK #27

	--- BLOCK #24 404-443, warpins: 2 ---
	local btn = an.newBtn(res.gettex2("pic/common/toggle10.png"), function ()
		--- BLOCK #0 1-4, warpins: 1 ---
		click(i)

		return 
		--- END OF BLOCK #0 ---



	end, {
		support = "easy",
		select = {
			res.gettex2("pic/common/toggle11.png"),
			manual = true
		}
	}):anchor(0.5, 0.5):pos(i*90 + 60, 100):add2(box.bg)

	btn.setIsSelect(btn, selectJob[i])
	--- END OF BLOCK #24 ---

	slot19 = if not g_data.guild.clanInfo then
	JUMP TO BLOCK #25
	else
	JUMP TO BLOCK #26
	end


	--- BLOCK #25 444-447, warpins: 1 ---
	btn.setTouchEnabled(btn, false)

	--- END OF BLOCK #25 ---

	FLOW; TARGET BLOCK #26


	--- BLOCK #26 448-481, warpins: 2 ---
	toggleBtns[#toggleBtns + 1] = btn

	an.newLabel(textList[i], 20, 1, {
		color = cc.c3b(255, 255, 255)
	}):anchor(0.5, 0.5):pos(i*90 + 104, 100):add2(box.bg)

	--- END OF BLOCK #26 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #23


	--- BLOCK #27 482-483, warpins: 1 ---
	return 
	--- END OF BLOCK #27 ---

	FLOW; TARGET BLOCK #28


	--- BLOCK #28 484-484, warpins: 2 ---
	--- END OF BLOCK #28 ---

	FLOW; TARGET BLOCK #29


	--- BLOCK #29 485-485, warpins: 2 ---
	--- END OF BLOCK #29 ---



end
guild.showContentGuildNil = function (self, parent, ...)
	--- BLOCK #0 1-35, warpins: 1 ---
	local back1 = display.newScale9Sprite(res.getframe2("pic/scale/scale16.png"), 0, 0, cc.size(614, 336)):anchor(0, 0):pos(14, 64):add2(parent)
	local width = {
		200,
		200,
		124,
		82
	}
	local Titlelabel = {
		"ÐÐ»áÃû",
		"»á³¤Ãû",
		"Õ½¶ÓÊý",
		"×´Ì¬"
	}
	local posOffset = 4

	--- END OF BLOCK #0 ---

	for i, v in ipairs(width)

	LOOP BLOCK #1
	GO OUT TO BLOCK #3


	--- BLOCK #1 36-97, warpins: 1 ---
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png"), 0, 0, cc.size(v + 2, 42)):anchor(0.5, 0.5):pos(posOffset + v*0.5, back1.geth(back1) - 23):add2(back1)
	an.newLabel(Titlelabel[i], 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(posOffset + v*0.5, back1.geth(back1) - 23):add2(back1)

	posOffset = posOffset + v
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 98-99, warpins: 2 ---
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #3 100-106, warpins: 1 ---
	local dataList = g_data.guild.guildList

	local function pageViewEvent(sender, eventType)
		--- BLOCK #0 1-5, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if eventType == ccui.PageViewEventType.turning then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 6-17, warpins: 1 ---
		local pageInfo = string.format("page %d", pageView:getCurPageIdx() + 1)

		print(pageInfo)

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 18-18, warpins: 2 ---
		return 
		--- END OF BLOCK #2 ---



	end

	--- END OF BLOCK #3 ---

	if #dataList == 0 then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 107-138, warpins: 1 ---
	an.newLabel("µ±Ç°ÎÞÐÐ»á", 24, 1, {
		color = def.colors.labelGray
	}):anchor(0.5, 0.5):pos(back1.getw(back1)/2, back1.geth(back1)/2):add2(back1, 2)

	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 139-207, warpins: 2 ---
	local infoView = an.newScroll(4, 4, 608, 288):add2(back1)
	local h = 42

	infoView.setScrollSize(infoView, 608, math.max(288, #dataList*h))
	infoView.enableTouch(infoView, false)
	infoView.enableClick(infoView, function ()
		--- BLOCK #0 1-1, warpins: 1 ---
		return 
		--- END OF BLOCK #0 ---



	end)

	local selectPic, selectData, sqBtn = nil
	sqBtn = an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")
		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-14, warpins: 1 ---
		main_scene.ui:tip("ÇëÏÈÑ¡ÔñÐÐ»á!")

		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 15-21, warpins: 1 ---
		--- END OF BLOCK #2 ---

		slot0 = if not g_data.guild:isLeader()
		 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 22-28, warpins: 1 ---
		main_scene.ui:tip("·ÇÕ½¶Ó¶Ó³¤²»ÄÜÉêÇë¼ÓÈëÐÐ»á!")

		return 

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 29-44, warpins: 1 ---
		self.curApplyguild = selectData:get("guildID")
		local dataList = g_data.guild.guildList
		local target = ""
		local preName, willName = nil

		--- END OF BLOCK #4 ---

		for i, v in ipairs(dataList)

		LOOP BLOCK #5
		GO OUT TO BLOCK #11


		--- BLOCK #5 45-49, warpins: 1 ---
		--- END OF BLOCK #5 ---

		slot9 = if g_data.guild.curApplyguild then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #6 50-58, warpins: 1 ---
		--- END OF BLOCK #6 ---

		if v.get(v, "guildID")

		 == g_data.guild.curApplyguild then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 59-63, warpins: 1 ---
		preName = v.get(v, "gildName")

		--- END OF BLOCK #7 ---

		FLOW; TARGET BLOCK #8


		--- BLOCK #8 64-71, warpins: 3 ---
		--- END OF BLOCK #8 ---

		if v.get(v, "guildID")

		 == self.curApplyguild then
		JUMP TO BLOCK #9
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #9 72-76, warpins: 1 ---
		willName = v.get(v, "gildName")

		--- END OF BLOCK #9 ---

		FLOW; TARGET BLOCK #10


		--- BLOCK #10 77-78, warpins: 3 ---
		--- END OF BLOCK #10 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #11 79-83, warpins: 1 ---
		--- END OF BLOCK #11 ---

		slot4 = if g_data.guild.curApplyguild then
		JUMP TO BLOCK #12
		else
		JUMP TO BLOCK #21
		end


		--- BLOCK #12 84-96, warpins: 1 ---
		print("g_data.guild.curApplyclan", g_data.guild.curApplyguild)

		--- END OF BLOCK #12 ---

		if g_data.guild.curApplyguild == self.curApplyguild then
		JUMP TO BLOCK #13
		else
		JUMP TO BLOCK #16
		end


		--- BLOCK #13 97-98, warpins: 1 ---
		--- END OF BLOCK #13 ---

		slot2 = if not preName then
		JUMP TO BLOCK #14
		else
		JUMP TO BLOCK #15
		end


		--- BLOCK #14 99-99, warpins: 1 ---
		preName = ""
		--- END OF BLOCK #14 ---

		FLOW; TARGET BLOCK #15


		--- BLOCK #15 100-104, warpins: 2 ---
		target = "ÄúÈ·¶¨È¡Ïû¶ÔÐÐ»á " .. preName .. " µÄÉêÇëÂð£¿"
		--- END OF BLOCK #15 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #22


		--- BLOCK #16 105-106, warpins: 1 ---
		--- END OF BLOCK #16 ---

		slot2 = if not preName then
		JUMP TO BLOCK #17
		else
		JUMP TO BLOCK #18
		end


		--- BLOCK #17 107-107, warpins: 1 ---
		preName = ""
		--- END OF BLOCK #17 ---

		FLOW; TARGET BLOCK #18


		--- BLOCK #18 108-109, warpins: 2 ---
		--- END OF BLOCK #18 ---

		slot3 = if not willName then
		JUMP TO BLOCK #19
		else
		JUMP TO BLOCK #20
		end


		--- BLOCK #19 110-110, warpins: 1 ---
		willName = ""
		--- END OF BLOCK #19 ---

		FLOW; TARGET BLOCK #20


		--- BLOCK #20 111-117, warpins: 2 ---
		target = "ÄúÈ·¶¨¼ÓÈë " .. willName .. ",È¡Ïû¶ÔÐÐ»á " .. preName .. " µÄÉêÇëÂð£¿"
		--- END OF BLOCK #20 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #22


		--- BLOCK #21 118-121, warpins: 1 ---
		target = "ÄúÈ·¶¨ÉêÇë¼ÓÈëÐÐ»á " .. willName .. " Âð£¿"

		--- END OF BLOCK #21 ---

		FLOW; TARGET BLOCK #22


		--- BLOCK #22 122-128, warpins: 3 ---
		an.newMsgbox(target, function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #4
			end


			--- BLOCK #1 3-9, warpins: 1 ---
			--- END OF BLOCK #1 ---

			if self.curApplyguild == g_data.guild.curApplyguild then
			JUMP TO BLOCK #2
			else
			JUMP TO BLOCK #3
			end


			--- BLOCK #2 10-16, warpins: 1 ---
			net.send({
				CM_GILD_CANCEL_JOIN
			})
			--- END OF BLOCK #2 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #4


			--- BLOCK #3 17-32, warpins: 1 ---
			net.send({
				CM_GILD_REQUEST_JOIN
			}, nil, {
				{
					"ID",
					selectData:get("guildID")
				}
			})

			--- END OF BLOCK #3 ---

			FLOW; TARGET BLOCK #4


			--- BLOCK #4 33-33, warpins: 3 ---
			return 
			--- END OF BLOCK #4 ---



		end, {
			center = true,
			hasCancel = true
		})

		return 
		--- END OF BLOCK #22 ---

		FLOW; TARGET BLOCK #23


		--- BLOCK #23 129-129, warpins: 2 ---
		--- END OF BLOCK #23 ---

		FLOW; TARGET BLOCK #24


		--- BLOCK #24 130-130, warpins: 2 ---
		--- END OF BLOCK #24 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/jrhh.png")
	}):add2(parent):anchor(0.5, 0.5):pos(580, 38)

	--- END OF BLOCK #5 ---

	for i, v in ipairs(dataList)


	LOOP BLOCK #6
	GO OUT TO BLOCK #23


	--- BLOCK #6 208-215, warpins: 1 ---
	local info = {}
	slot19 = display.newScale9Sprite
	slot20 = res.getframe2
	--- END OF BLOCK #6 ---

	if i%2 == 0 then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 216-217, warpins: 1 ---
	slot21 = "pic/scale/scale18.png"
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #9


	--- BLOCK #8 218-218, warpins: 1 ---
	slot21 = "pic/scale/scale19.png"
	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 219-361, warpins: 2 ---
	local cell = slot19(slot20(slot21), 0, 0, cc.size(608, h)):anchor(0, 0):pos(0, infoView.getScrollSize(infoView).height - i*h):add2(infoView)
	local label = g_data.player:fixStrLen(v.get(v, "gildName"), 8)
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(100, h*0.5)
	label = g_data.player:fixStrLen(v.get(v, "presidentName"), 8)
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(300, h*0.5)
	label = v.get(v, "corpsCount")
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(460, h*0.5)

	--- END OF BLOCK #9 ---

	slot21 = if g_data.guild.curApplyguild then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #12
	end


	--- BLOCK #10 362-370, warpins: 1 ---
	--- END OF BLOCK #10 ---

	if v.get(v, "guildID")

	 == g_data.guild.curApplyguild then
	JUMP TO BLOCK #11
	else
	JUMP TO BLOCK #12
	end


	--- BLOCK #11 371-372, warpins: 1 ---
	label = "ÉêÇëÖÐ"
	--- END OF BLOCK #11 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #13


	--- BLOCK #12 373-373, warpins: 2 ---
	label = ""
	--- END OF BLOCK #12 ---

	FLOW; TARGET BLOCK #13


	--- BLOCK #13 374-432, warpins: 2 ---
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(556, h*0.5)

	cell.setTouchEnabled(cell, true)
	cell.setTouchSwallowEnabled(cell, false)
	cell.addNodeEventListener(cell, cc.NODE_TOUCH_EVENT, function (event)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if event.name == "began" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-9, warpins: 1 ---
		cell.offsetBeginY = event.y

		return true

		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #16


		--- BLOCK #2 10-12, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if event.name == "ended" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #16
		end


		--- BLOCK #3 13-23, warpins: 1 ---
		local offsetY = event.y - cell.offsetBeginY

		--- END OF BLOCK #3 ---

		if math.abs(offsetY)
		 <= 5 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #16
		end


		--- BLOCK #4 24-26, warpins: 1 ---
		--- END OF BLOCK #4 ---

		slot2 = if selectPic then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #5 27-31, warpins: 1 ---
		--- END OF BLOCK #5 ---

		for i, v in ipairs(selectPic.info)

		LOOP BLOCK #6
		GO OUT TO BLOCK #8


		--- BLOCK #6 32-37, warpins: 1 ---
		v.setColor(v, def.colors.cellNor)
		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 38-39, warpins: 2 ---
		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #5


		--- BLOCK #8 40-44, warpins: 1 ---
		selectPic:removeSelf()

		selectPic = nil
		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 45-82, warpins: 2 ---
		selectData = v
		selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(608, h)):anchor(0, 0):pos(0, 0):add2(cell)
		selectPic.info = info

		--- END OF BLOCK #9 ---

		for i, v in ipairs(info)

		LOOP BLOCK #10
		GO OUT TO BLOCK #12


		--- BLOCK #10 83-88, warpins: 1 ---
		v.setColor(v, def.colors.cellSel)
		--- END OF BLOCK #10 ---

		FLOW; TARGET BLOCK #11


		--- BLOCK #11 89-90, warpins: 2 ---
		--- END OF BLOCK #11 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #9


		--- BLOCK #12 91-95, warpins: 1 ---
		--- END OF BLOCK #12 ---

		slot2 = if g_data.guild.curApplyguild then
		JUMP TO BLOCK #13
		else
		JUMP TO BLOCK #15
		end


		--- BLOCK #13 96-105, warpins: 1 ---
		--- END OF BLOCK #13 ---

		if v:get("guildID")
		 == g_data.guild.curApplyguild then
		JUMP TO BLOCK #14
		else
		JUMP TO BLOCK #15
		end


		--- BLOCK #14 106-115, warpins: 1 ---
		sqBtn.sprite:setTex(res.gettex2("pic/panels/guild/qxsq.png"))
		--- END OF BLOCK #14 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #16


		--- BLOCK #15 116-124, warpins: 2 ---
		sqBtn.sprite:setTex(res.gettex2("pic/panels/guild/jrhh.png"))

		--- END OF BLOCK #15 ---

		FLOW; TARGET BLOCK #16


		--- BLOCK #16 125-125, warpins: 5 ---
		return 
		--- END OF BLOCK #16 ---



	end)

	local listener = cc.EventListenerCustom:create("UpdateNilGuildState", function ()
		--- BLOCK #0 1-5, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if g_data.guild.curApplyguild then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #1 6-15, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if v:get("guildID")
		 == g_data.guild.curApplyguild then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 16-22, warpins: 1 ---
		info[4]:setString("ÉêÇëÖÐ")
		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #3 23-28, warpins: 2 ---
		info[4]:setString("")
		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 29-40, warpins: 2 ---
		--- END OF BLOCK #4 ---

		if v:get("guildID")
		 == selectData:get("guildID")
		 then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #5 41-50, warpins: 1 ---
		--- END OF BLOCK #5 ---

		if g_data.guild.curApplyguild == v:get("guildID")
		 then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #6 51-60, warpins: 1 ---
		sqBtn.sprite:setTex(res.gettex2("pic/panels/guild/qxsq.png"))
		--- END OF BLOCK #6 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #8


		--- BLOCK #7 61-69, warpins: 1 ---
		sqBtn.sprite:setTex(res.gettex2("pic/panels/guild/jrhh.png"))

		--- END OF BLOCK #7 ---

		FLOW; TARGET BLOCK #8


		--- BLOCK #8 70-70, warpins: 3 ---
		return 
		--- END OF BLOCK #8 ---



	end)

	cell.getEventDispatcher(cell):addEventListenerWithSceneGraphPriority(listener, cell)

	--- END OF BLOCK #13 ---

	if i == 1 then
	JUMP TO BLOCK #14
	else
	JUMP TO BLOCK #21
	end


	--- BLOCK #14 433-467, warpins: 1 ---
	selectData = v
	selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(608, h)):anchor(0, 0):pos(0, 0):add2(cell)
	selectPic.info = info

	--- END OF BLOCK #14 ---

	for i, v in ipairs(info)

	LOOP BLOCK #15
	GO OUT TO BLOCK #17


	--- BLOCK #15 468-473, warpins: 1 ---
	v.setColor(v, def.colors.cellSel)
	--- END OF BLOCK #15 ---

	FLOW; TARGET BLOCK #16


	--- BLOCK #16 474-475, warpins: 2 ---
	--- END OF BLOCK #16 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #14


	--- BLOCK #17 476-480, warpins: 1 ---
	--- END OF BLOCK #17 ---

	slot22 = if g_data.guild.curApplyguild then
	JUMP TO BLOCK #18
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #18 481-489, warpins: 1 ---
	--- END OF BLOCK #18 ---

	if v.get(v, "guildID")
	 == g_data.guild.curApplyguild then
	JUMP TO BLOCK #19
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #19 490-498, warpins: 1 ---
	sqBtn.sprite:setTex(res.gettex2("pic/panels/guild/qxsq.png"))
	--- END OF BLOCK #19 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #21


	--- BLOCK #20 499-506, warpins: 2 ---
	sqBtn.sprite:setTex(res.gettex2("pic/panels/guild/jrhh.png"))

	--- END OF BLOCK #20 ---

	FLOW; TARGET BLOCK #21


	--- BLOCK #21 507-508, warpins: 3 ---
	--- END OF BLOCK #21 ---

	FLOW; TARGET BLOCK #22


	--- BLOCK #22 509-510, warpins: 2 ---
	--- END OF BLOCK #22 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #5


	--- BLOCK #23 511-523, warpins: 1 ---
	local filterInput = nil
	slot14 = an.newInput
	slot15 = 0
	slot16 = 0
	slot17 = 196
	slot18 = 40
	slot19 = 7
	slot20 = {}
	slot21 = {
		nil,
		20,
		1
	}
	--- END OF BLOCK #23 ---

	slot22 = if not self.filterString then
	JUMP TO BLOCK #24
	else
	JUMP TO BLOCK #25
	end


	--- BLOCK #24 524-524, warpins: 1 ---
	slot22 = ""
	--- END OF BLOCK #24 ---

	FLOW; TARGET BLOCK #25


	--- BLOCK #25 525-677, warpins: 2 ---
	slot21[1] = slot22
	slot20.label = slot21
	slot20.bg = {
		tex = res.gettex2("pic/scale/scale16.png"),
		offset = {
			-10,
			2
		}
	}
	slot20.tip = {
		"ÊäÈëÐÐ»á¹Ø¼ü×Ö      ",
		20,
		1,
		{
			color = cc.c3b(128, 128, 128)
		}
	}
	slot20.stop_call = function ()
		--- BLOCK #0 1-6, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if filterInput:getString()

		 == "" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 7-16, warpins: 1 ---
		self.filterString = nil

		net.send({
			CM_GILD_LIST,
			param = 0,
			tag = 7
		})

		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 17-35, warpins: 2 ---
		self.filterString = filterInput:getString()

		net.send({
			CM_FIND_GILD_BYNAME
		}, {
			filterInput:getString()
		})

		return 
		--- END OF BLOCK #2 ---



	end
	filterInput = slot14(slot15, slot16, slot17, slot18, slot19, slot20):add2(parent):anchor(0, 0):pos(25, 14):add(res.get2("pic/panels/voice/search.png"):pos(170, 20))

	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-12, warpins: 1 ---
		sound.playSound("103")

		slot0 = g_data.guild.page
		--- END OF BLOCK #0 ---

		slot1 = if g_data.guild.serach then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 13-14, warpins: 1 ---
		slot1 = 0
		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #3


		--- BLOCK #2 15-15, warpins: 1 ---
		slot1 = 1
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 16-24, warpins: 2 ---
		local page = slot0 + slot1

		net.send({
			CM_GILD_LIST,
			tag = 7,
			param = page
		})

		return 
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/xyy.png")
	}):add2(parent):anchor(0.5, 0.5):pos(480, 38)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-11, warpins: 1 ---
		sound.playSound("103")

		local page = g_data.guild.page - 1

		--- END OF BLOCK #0 ---

		if page < 0 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #1 12-16, warpins: 1 ---
		--- END OF BLOCK #1 ---

		slot1 = if not g_data.guild.serach then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 17-22, warpins: 1 ---
		self:showError(30)

		return 

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 23-25, warpins: 3 ---
		--- END OF BLOCK #3 ---

		if page < 0 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 26-27, warpins: 1 ---
		page = 0

		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #5


		--- BLOCK #5 28-35, warpins: 2 ---
		net.send({
			CM_GILD_LIST,
			tag = 7,
			param = page
		})

		return 
		--- END OF BLOCK #5 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/syy.png")
	}):add2(parent):anchor(0.5, 0.5):pos(380, 38)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-9, warpins: 1 ---
		sound.playSound("103")
		--- END OF BLOCK #0 ---

		if g_data.guild.page == 0 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #1 10-14, warpins: 1 ---
		--- END OF BLOCK #1 ---

		slot0 = if not g_data.guild.serach then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 15-20, warpins: 1 ---
		self:showError(30)

		return 

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 21-27, warpins: 3 ---
		net.send({
			CM_GILD_LIST,
			param = 0,
			tag = 7
		})

		return 
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/sy.png")
	}):add2(parent):anchor(0.5, 0.5):pos(280, 38)

	return 
	--- END OF BLOCK #25 ---



end
guild.showContentClan = function (self, parent, ...)
	--- BLOCK #0 1-7, warpins: 1 ---
	local texts = {
		"clanmain",
		"clanmem",
		"clanjobs",
		"clanlog"
	}
	local tabs = {}

	local function click(btn)
		--- BLOCK #0 1-8, warpins: 1 ---
		sound.playSound("103")
		--- END OF BLOCK #0 ---

		for i, v in ipairs(tabs)

		LOOP BLOCK #1
		GO OUT TO BLOCK #7


		--- BLOCK #1 9-10, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if v == btn then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 11-14, warpins: 1 ---
		v.select(v)
		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #3 15-17, warpins: 1 ---
		v.unselect(v)

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 18-22, warpins: 2 ---
		--- END OF BLOCK #4 ---

		if btn.page ~= self.subpage then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 23-32, warpins: 1 ---
		self.subpage = btn.page

		self:showSub(btn.page, parent, true)

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 33-34, warpins: 3 ---
		--- END OF BLOCK #6 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #7 35-35, warpins: 1 ---
		return 
		--- END OF BLOCK #7 ---



	end

	--- END OF BLOCK #0 ---

	for i, v in ipairs(texts)


	LOOP BLOCK #1
	GO OUT TO BLOCK #3


	--- BLOCK #1 8-52, warpins: 1 ---
	tabs[i] = an.newBtn(res.gettex2("pic/common/btn60.png"), click, {
		support = "easy",
		sprite = res.gettex2("pic/panels/guild/" .. v .. "_n.png"),
		anchor = {
			0.5,
			0.5
		},
		select = {
			res.gettex2("pic/common/btn61.png"),
			manual = true
		}
	}):add2(parent):anchor(0, 0.5):pos(18, (i - 1)*54 - 370)
	tabs[i].page = v

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 53-54, warpins: 2 ---
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #3 55-68, warpins: 1 ---
	tabs[1]:select()

	self.subpage = texts[1]

	self.showSub(self, texts[1], parent, true)

	return 
	--- END OF BLOCK #3 ---



end
guild.showContentGuild = function (self, parent, ...)
	--- BLOCK #0 1-7, warpins: 1 ---
	local texts = {
		"guildmain",
		"mem",
		"claninfo",
		"clanrecruit",
		"diplomatic",
		"log"
	}
	local tabs = {}

	local function click(btn)
		--- BLOCK #0 1-8, warpins: 1 ---
		sound.playSound("103")
		--- END OF BLOCK #0 ---

		for i, v in ipairs(tabs)

		LOOP BLOCK #1
		GO OUT TO BLOCK #7


		--- BLOCK #1 9-10, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if v == btn then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 11-14, warpins: 1 ---
		v.select(v)
		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #3 15-17, warpins: 1 ---
		v.unselect(v)

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 18-22, warpins: 2 ---
		--- END OF BLOCK #4 ---

		if btn.page ~= self.subpage then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 23-32, warpins: 1 ---
		self.subpage = btn.page

		self:showSub(btn.page, parent, true)

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 33-34, warpins: 3 ---
		--- END OF BLOCK #6 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #7 35-35, warpins: 1 ---
		return 
		--- END OF BLOCK #7 ---



	end

	--- END OF BLOCK #0 ---

	for i, v in ipairs(texts)


	LOOP BLOCK #1
	GO OUT TO BLOCK #3


	--- BLOCK #1 8-52, warpins: 1 ---
	tabs[i] = an.newBtn(res.gettex2("pic/common/btn60.png"), click, {
		support = "easy",
		sprite = res.gettex2("pic/panels/guild/" .. v .. "_n.png"),
		anchor = {
			0.5,
			0.5
		},
		select = {
			res.gettex2("pic/common/btn61.png"),
			manual = true
		}
	}):add2(parent):anchor(0, 0.5):pos(18, (i - 1)*54 - 370)
	tabs[i].page = v
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 53-54, warpins: 2 ---
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #3 55-68, warpins: 1 ---
	self.subpage = texts[1]

	tabs[1]:select()
	self.showSub(self, texts[1], parent, true)

	return 
	--- END OF BLOCK #3 ---



end
guild.showSub = function (self, page, parent, sendcmd)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if not parent then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-3, warpins: 1 ---
	parent = self.content
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 4-8, warpins: 2 ---
	self.threeSub = 0

	--- END OF BLOCK #2 ---

	slot4 = if self.subContent then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 9-12, warpins: 1 ---
	self.subContent:removeSelf()

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 13-50, warpins: 2 ---
	self.pageNode = nil

	self.bg:setTex(res.gettex2("pic/common/black_0.png"))

	self.subContent = cc.Node:create()

	self.subContent:size(486, 344):anchor(0, 0):pos(138, 60):add2(parent)
	--- END OF BLOCK #4 ---

	if page == "clanmain" then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #5 51-52, warpins: 1 ---
	--- END OF BLOCK #5 ---

	slot3 = if sendcmd then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 53-64, warpins: 1 ---
	net.send({
		CM_CORPS_NOTICE,
		tag = 0
	})
	net.send({
		CM_REFRESH_CORPSINFO
	})
	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 65-69, warpins: 2 ---
	self.showSubClanmain(self, self.subContent)
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #42


	--- BLOCK #8 70-71, warpins: 1 ---
	--- END OF BLOCK #8 ---

	if page == "clanmem" then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #12
	end


	--- BLOCK #9 72-73, warpins: 1 ---
	--- END OF BLOCK #9 ---

	slot3 = if sendcmd then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #10 74-91, warpins: 1 ---
	net.send({
		CM_CORPS_MEMBER_LIST,
		tag = 30,
		recog = 0,
		series = 0
	}, nil, {
		{
			"ID",
			g_data.guild.clanInfo:get("corpsID")
		}
	})
	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 92-96, warpins: 2 ---
	self.showSubClanmem(self, self.subContent)
	--- END OF BLOCK #11 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #42


	--- BLOCK #12 97-98, warpins: 1 ---
	--- END OF BLOCK #12 ---

	if page == "clanjobs" then
	JUMP TO BLOCK #13
	else
	JUMP TO BLOCK #16
	end


	--- BLOCK #13 99-100, warpins: 1 ---
	--- END OF BLOCK #13 ---

	slot3 = if sendcmd then
	JUMP TO BLOCK #14
	else
	JUMP TO BLOCK #15
	end


	--- BLOCK #14 101-106, warpins: 1 ---
	net.send({
		CM_CORPS_QUERY_REQUESTS,
		tag = 30,
		series = 0
	})
	--- END OF BLOCK #14 ---

	FLOW; TARGET BLOCK #15


	--- BLOCK #15 107-111, warpins: 2 ---
	self.showSubClanjobs(self, self.subContent)
	--- END OF BLOCK #15 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #42


	--- BLOCK #16 112-113, warpins: 1 ---
	--- END OF BLOCK #16 ---

	if page == "clanlog" then
	JUMP TO BLOCK #17
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #17 114-115, warpins: 1 ---
	--- END OF BLOCK #17 ---

	slot3 = if sendcmd then
	JUMP TO BLOCK #18
	else
	JUMP TO BLOCK #19
	end


	--- BLOCK #18 116-121, warpins: 1 ---
	net.send({
		CM_CORPS_QUERY_LOG,
		param = 1,
		series = 30,
		tag = 0
	})
	--- END OF BLOCK #18 ---

	FLOW; TARGET BLOCK #19


	--- BLOCK #19 122-126, warpins: 2 ---
	self.showSubClanlog(self, self.subContent)
	--- END OF BLOCK #19 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #42


	--- BLOCK #20 127-128, warpins: 1 ---
	--- END OF BLOCK #20 ---

	if page == "guildmain" then
	JUMP TO BLOCK #21
	else
	JUMP TO BLOCK #24
	end


	--- BLOCK #21 129-130, warpins: 1 ---
	--- END OF BLOCK #21 ---

	slot3 = if sendcmd then
	JUMP TO BLOCK #22
	else
	JUMP TO BLOCK #23
	end


	--- BLOCK #22 131-142, warpins: 1 ---
	net.send({
		CM_GILD_NOTICE,
		tag = 0
	})
	net.send({
		CM_REFRESH_GILDINFO
	})
	--- END OF BLOCK #22 ---

	FLOW; TARGET BLOCK #23


	--- BLOCK #23 143-147, warpins: 2 ---
	self.showSubGuildmain(self, self.subContent)
	--- END OF BLOCK #23 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #42


	--- BLOCK #24 148-149, warpins: 1 ---
	--- END OF BLOCK #24 ---

	if page == "mem" then
	JUMP TO BLOCK #25
	else
	JUMP TO BLOCK #28
	end


	--- BLOCK #25 150-151, warpins: 1 ---
	--- END OF BLOCK #25 ---

	slot3 = if sendcmd then
	JUMP TO BLOCK #26
	else
	JUMP TO BLOCK #27
	end


	--- BLOCK #26 152-157, warpins: 1 ---
	net.send({
		CM_GILDMEMBER_LIST
	})
	--- END OF BLOCK #26 ---

	FLOW; TARGET BLOCK #27


	--- BLOCK #27 158-162, warpins: 2 ---
	self.showSubMem(self, self.subContent)
	--- END OF BLOCK #27 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #42


	--- BLOCK #28 163-164, warpins: 1 ---
	--- END OF BLOCK #28 ---

	if page == "claninfo" then
	JUMP TO BLOCK #29
	else
	JUMP TO BLOCK #32
	end


	--- BLOCK #29 165-166, warpins: 1 ---
	--- END OF BLOCK #29 ---

	slot3 = if sendcmd then
	JUMP TO BLOCK #30
	else
	JUMP TO BLOCK #31
	end


	--- BLOCK #30 167-172, warpins: 1 ---
	net.send({
		CM_GILD_QUERY_CORPS
	})
	--- END OF BLOCK #30 ---

	FLOW; TARGET BLOCK #31


	--- BLOCK #31 173-177, warpins: 2 ---
	self.showSubClaninfo(self, self.subContent)
	--- END OF BLOCK #31 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #42


	--- BLOCK #32 178-179, warpins: 1 ---
	--- END OF BLOCK #32 ---

	if page == "clanrecruit" then
	JUMP TO BLOCK #33
	else
	JUMP TO BLOCK #36
	end


	--- BLOCK #33 180-181, warpins: 1 ---
	--- END OF BLOCK #33 ---

	slot3 = if sendcmd then
	JUMP TO BLOCK #34
	else
	JUMP TO BLOCK #35
	end


	--- BLOCK #34 182-187, warpins: 1 ---
	net.send({
		CM_GILD_QUERY_REQUEST_JOIN_LIST,
		tag = 30,
		series = 0
	})
	--- END OF BLOCK #34 ---

	FLOW; TARGET BLOCK #35


	--- BLOCK #35 188-192, warpins: 2 ---
	self.showSubClanrecruit(self, self.subContent)
	--- END OF BLOCK #35 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #42


	--- BLOCK #36 193-194, warpins: 1 ---
	--- END OF BLOCK #36 ---

	if page == "diplomatic" then
	JUMP TO BLOCK #37
	else
	JUMP TO BLOCK #38
	end


	--- BLOCK #37 195-199, warpins: 1 ---
	self.showSubDiplomatic(self, self.subContent)
	--- END OF BLOCK #37 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #42


	--- BLOCK #38 200-201, warpins: 1 ---
	--- END OF BLOCK #38 ---

	if page == "log" then
	JUMP TO BLOCK #39
	else
	JUMP TO BLOCK #42
	end


	--- BLOCK #39 202-203, warpins: 1 ---
	--- END OF BLOCK #39 ---

	slot3 = if sendcmd then
	JUMP TO BLOCK #40
	else
	JUMP TO BLOCK #41
	end


	--- BLOCK #40 204-209, warpins: 1 ---
	net.send({
		CM_GILD_QUERY_LOG,
		param = 1,
		series = 30,
		tag = 0
	})
	--- END OF BLOCK #40 ---

	FLOW; TARGET BLOCK #41


	--- BLOCK #41 210-213, warpins: 2 ---
	self.showSubLog(self, self.subContent)

	--- END OF BLOCK #41 ---

	FLOW; TARGET BLOCK #42


	--- BLOCK #42 214-214, warpins: 11 ---
	return 
	--- END OF BLOCK #42 ---



end
guild.refush = function (self, page)
	--- BLOCK #0 1-3, warpins: 1 ---
	--- END OF BLOCK #0 ---

	if self.subpage ~= page then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 4-4, warpins: 1 ---
	return 

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 5-9, warpins: 2 ---
	self.showSub(self, page)

	return 
	--- END OF BLOCK #2 ---



end
guild.showSubClanmain = function (self, parent)
	--- BLOCK #0 1-58, warpins: 1 ---
	parent.size(parent, 486, 236)
	display.newScale9Sprite(res.getframe2("pic/common/black_5.png")):addto(parent):anchor(0, 0):pos(2, 238):size(parent.getw(parent), 106)
	res.get2("pic/panels/guild/signboard_bg.png"):anchor(0, 0):pos(4, 242):addto(parent)

	slot2 = an.newLabel

	--- END OF BLOCK #0 ---

	slot3 = if g_data.guild.clanInfo then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #1 59-67, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot3 = if not g_data.guild.clanInfo:get("corpsName")

	 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #2 68-69, warpins: 1 ---
	slot3 = ""
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #3 70-70, warpins: 1 ---
	slot3 = ""

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 71-130, warpins: 3 ---
	slot2(slot3, 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(parent.getw(parent)*0.5, 302):add2(parent)
	an.newLabel("¶ÓÔ±:", 20, 1, {
		color = def.colors.labelTitle
	}):anchor(1, 0.5):pos(parent.getw(parent)*0.5, 264):add2(parent)

	slot2 = an.newLabel

	--- END OF BLOCK #4 ---

	slot3 = if g_data.guild.clanInfo then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 131-148, warpins: 1 ---
	--- END OF BLOCK #5 ---

	slot3 = if not (g_data.guild.clanInfo:get("onlineCount")
	 .. "/" .. g_data.guild.clanInfo:get("memberCount")

	) then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 149-149, warpins: 2 ---
	slot3 = "1/30"

	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 150-191, warpins: 2 ---
	slot2(slot3, 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0, 0.5):pos(parent.getw(parent)*0.5 + 4, 264):add2(parent)

	local editInfo = nil
	local strs = {}
	strs[1] = g_data.guild.clanNotice
	local splitLabel = an.newLabel("", 18, 0)
	--- END OF BLOCK #7 ---

	for slot8=1, 5, 1
	LOOP BLOCK #8
	GO OUT TO BLOCK #9

	--- BLOCK #8 192-192, warpins: 2 ---
	--- END OF BLOCK #8 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #7


	--- BLOCK #9 193-240, warpins: 1 ---
	strs[#strs + 1] = "\r\n"

	function refush(canEdit)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot1 = if editInfo then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-8, warpins: 1 ---
		editInfo:removeSelf()

		editInfo = nil
		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-26, warpins: 2 ---
		editInfo = an.newScroll(8, 8, 470, 220):add2(parent)
		--- END OF BLOCK #2 ---

		if strs[#strs] ~= "\r\n" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 27-32, warpins: 1 ---
		strs[#strs + 1] = "\r\n"
		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 33-39, warpins: 2 ---
		local labels = {}
		local hMax = 0
		local valueInput, oldindex = nil

		--- END OF BLOCK #4 ---

		for i, v in ipairs(strs)


		LOOP BLOCK #5
		GO OUT TO BLOCK #9


		--- BLOCK #5 40-68, warpins: 1 ---
		local tmpLabel = cc.LabelTTF:create(v, "", 18, cc.size(470, 0), 0)

		tmpLabel.anchor(tmpLabel, 0, 1)

		labels[#labels + 1] = tmpLabel
		hMax = hMax + tmpLabel.getContentSize(tmpLabel).height

		--- END OF BLOCK #5 ---

		slot0 = if canEdit then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #6 69-82, warpins: 1 ---
		tmpLabel.setTouchEnabled(tmpLabel, true)
		tmpLabel.setTouchSwallowEnabled(tmpLabel, false)
		tmpLabel.addNodeEventListener(tmpLabel, cc.NODE_TOUCH_EVENT, function (event)
			--- BLOCK #0 1-3, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if event.name == "began" then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #3
			end


			--- BLOCK #1 4-8, warpins: 1 ---
			tmpLabel.offsetBeginY = event.y

			return true

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 9-9, warpins: 0 ---
			--- END OF BLOCK #2 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #8


			--- BLOCK #3 10-12, warpins: 1 ---
			--- END OF BLOCK #3 ---

			if event.name == "ended" then
			JUMP TO BLOCK #4
			else
			JUMP TO BLOCK #8
			end


			--- BLOCK #4 13-23, warpins: 1 ---
			local offsetY = event.y - tmpLabel.offsetBeginY

			--- END OF BLOCK #4 ---

			if math.abs(offsetY)

			 <= 5 then
			JUMP TO BLOCK #5
			else
			JUMP TO BLOCK #8
			end


			--- BLOCK #5 24-26, warpins: 1 ---
			--- END OF BLOCK #5 ---

			slot2 = if valueInput then
			JUMP TO BLOCK #6
			else
			JUMP TO BLOCK #7
			end


			--- BLOCK #6 27-53, warpins: 1 ---
			strs[oldindex] = valueInput:getText()

			labels[oldindex]:setString(valueInput:getText())
			valueInput:removeSelf()

			valueInput = nil
			oldindex = nil

			refush(true)

			return 

			--- END OF BLOCK #6 ---

			FLOW; TARGET BLOCK #7


			--- BLOCK #7 54-100, warpins: 1 ---
			oldindex = i
			valueInput = an.newInput(tmpLabel:getPositionX(), tmpLabel:getPositionY(), 470, 24, 500, {
				label = {
					string.gsub(v, "\r\n", ""),
					18,
					1
				},
				bg = {
					h = 24,
					tex = res.gettex2("pic/scale/edit1.png"),
					offset = {
						-3,
						4
					}
				},
				stop_call = function ()
					--- BLOCK #0 1-6, warpins: 1 ---
					local inputValue = valueInput:getText()
					--- END OF BLOCK #0 ---

					if inputValue == "" then
					JUMP TO BLOCK #1
					else
					JUMP TO BLOCK #2
					end


					--- BLOCK #1 7-8, warpins: 1 ---
					inputValue = "\r\n"
					--- END OF BLOCK #1 ---

					UNCONDITIONAL JUMP; TARGET BLOCK #2


					--- BLOCK #2 9-26, warpins: 2 ---
					strs[i] = inputValue

					tmpLabel:setString(inputValue)
					valueInput:removeSelf()

					valueInput = nil
					oldindex = nil

					refush(true)

					return 
					--- END OF BLOCK #2 ---



				end
			}):add2(editInfo):anchor(0, 1)

			--- END OF BLOCK #7 ---

			FLOW; TARGET BLOCK #8


			--- BLOCK #8 101-101, warpins: 4 ---
			return 
			--- END OF BLOCK #8 ---

			FLOW; TARGET BLOCK #9


			--- BLOCK #9 102-102, warpins: 2 ---
			--- END OF BLOCK #9 ---

			FLOW; TARGET BLOCK #10


			--- BLOCK #10 103-103, warpins: 2 ---
			--- END OF BLOCK #10 ---



		end)
		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 83-84, warpins: 2 ---
		--- END OF BLOCK #7 ---

		FLOW; TARGET BLOCK #8


		--- BLOCK #8 85-86, warpins: 2 ---
		--- END OF BLOCK #8 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #9 87-101, warpins: 1 ---
		editInfo:setScrollSize(470, math.max(220, hMax))

		hMax = 0

		--- END OF BLOCK #9 ---

		for i, v in ipairs(labels)

		LOOP BLOCK #10
		GO OUT TO BLOCK #12


		--- BLOCK #10 102-120, warpins: 1 ---
		v.pos(v, 0, editInfo:getScrollSize().height - hMax):add2(editInfo)

		hMax = hMax + v.getContentSize(v).height

		--- END OF BLOCK #10 ---

		FLOW; TARGET BLOCK #11


		--- BLOCK #11 121-122, warpins: 2 ---
		--- END OF BLOCK #11 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #9


		--- BLOCK #12 123-124, warpins: 1 ---
		return 
		--- END OF BLOCK #12 ---



	end

	refush()
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-11, warpins: 1 ---
		sound.playSound("103")
		--- END OF BLOCK #0 ---

		slot0 = if g_data.guild:isPresident()
		 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 12-18, warpins: 1 ---
		main_scene.ui:tip("ÐÐ»á»á³¤²»ÄÜÍË³öÕ½¶Ó")

		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 19-25, warpins: 1 ---
		--- END OF BLOCK #2 ---

		slot0 = if not g_data.guild:isVicePresident()
		 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 26-32, warpins: 1 ---
		--- END OF BLOCK #3 ---

		slot0 = if g_data.guild:isLeader()
		 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 33-39, warpins: 2 ---
		main_scene.ui:tip("Ðè×ªÈÃ¶Ó³¤Ö®ºó²ÅÄÜÍË³öÕ½¶Ó")

		return 

		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 40-46, warpins: 1 ---
		an.newMsgbox("ÄúÈ·¶¨ÍË³öÕ½¶ÓÂð£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-8, warpins: 1 ---
			net.send({
				CM_CORPS_EXIT
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 9-9, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})

		return 
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 47-47, warpins: 2 ---
		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 48-48, warpins: 2 ---
		--- END OF BLOCK #7 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/tczd.png")
	}):add2(parent):anchor(0.5, 0.5):pos(442, -22)
	--- END OF BLOCK #9 ---

	slot5 = if g_data.guild:isLeader()

	 then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #10 241-313, warpins: 1 ---
	local editbtn, savebtn = nil
	editbtn = an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-16, warpins: 1 ---
		sound.playSound("103")
		refush(true)
		editbtn:hide()
		savebtn:show()

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/bjgg.png")
	}):add2(parent):anchor(0.5, 0.5):pos(342, -22)
	savebtn = an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-20, warpins: 1 ---
		sound.playSound("103")
		refush(false)
		savebtn:hide()
		editbtn:show()

		local notice = ""

		--- END OF BLOCK #0 ---

		for i, v in ipairs(strs)


		LOOP BLOCK #1
		GO OUT TO BLOCK #3


		--- BLOCK #1 21-31, warpins: 1 ---
		local v = string.gsub(v, "\r\n", "")
		notice = notice .. v .. "\r\n"

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 32-33, warpins: 2 ---
		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #3 34-45, warpins: 1 ---
		print(notice)
		net.send({
			CM_CORPS_NOTICE,
			tag = 1
		}, {
			notice
		})

		return 
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/bcgg.png")
	}):add2(parent):anchor(0.5, 0.5):pos(342, -22)

	savebtn.hide(savebtn)

	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 314-315, warpins: 2 ---
	return 
	--- END OF BLOCK #11 ---



end
guild.showSubClanmem = function (self, parent)
	--- BLOCK #0 1-8, warpins: 1 ---
	local width = {
		140,
		60,
		60,
		60,
		60,
		100
	}
	local Titlelabel = {
		"½ÇÉ«Ãû",
		"µÈ¼¶",
		"Ö°Òµ",
		"ÐÔ±ð",
		"Ö°Îñ",
		"·âºÅ"
	}
	local posOffset = 6
	--- END OF BLOCK #0 ---

	slot5 = if not g_data.guild.corpsMem then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 9-9, warpins: 1 ---
	local dataList = {}
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 10-33, warpins: 2 ---
	local selectPic, selectData = nil
	local posTitle = {
		"",
		"¸±¶Ó³¤",
		"¶Ó³¤",
		"¸±»á³¤",
		"»á³¤"
	}
	local infoView = nil
	local h = 42

	local function creteOrder(dataList)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot1 = if infoView then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-7, warpins: 1 ---
		infoView:removeSelf()

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 8-35, warpins: 2 ---
		infoView = an.newScroll(7, 8, 480, 292):add2(parent)

		infoView:setScrollSize(480, math.max(292, #dataList*h))
		--- END OF BLOCK #2 ---

		for i, v in ipairs(dataList)


		LOOP BLOCK #3
		GO OUT TO BLOCK #20


		--- BLOCK #3 36-42, warpins: 1 ---
		local info = {}

		--- END OF BLOCK #3 ---

		if v.get(v, "status")
		 == 1 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 43-50, warpins: 1 ---
		--- END OF BLOCK #4 ---

		slot7 = if not cc.c3b(255, 255, 255)

		 then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 51-53, warpins: 2 ---
		local tmpColor = def.colors.cellOffline
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 54-89, warpins: 2 ---
		local cell = display.newNode():size(480, h):anchor(0, 0):pos(0, infoView:getScrollSize().height - i*h):add2(infoView)
		slot9 = display.newScale9Sprite
		slot10 = res.getframe2
		--- END OF BLOCK #6 ---

		if i%2 == 0 then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 90-91, warpins: 1 ---
		slot11 = "pic/scale/scale18.png"
		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #9


		--- BLOCK #8 92-92, warpins: 1 ---
		slot11 = "pic/scale/scale19.png"
		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 93-223, warpins: 2 ---
		cell.scale = slot9(slot10(slot11), 0, 0, cc.size(480, h)):anchor(0, 0):add2(cell)
		local label = g_data.player:fixStrLen(v.get(v, "name"), 8)
		info[#info + 1] = an.newLabel(label, 18, 1, {
			color = tmpColor
		}):add2(cell, 1):anchor(0.5, 0.5):pos(70, h*0.5)
		label = v.get(v, "level")
		info[#info + 1] = an.newLabel(label, 18, 1, {
			color = tmpColor
		}):add2(cell, 1):anchor(0.5, 0.5):pos(170, h*0.5)
		label = g_data.player:getOtherJobStr(v.get(v, "job"))
		info[#info + 1] = an.newLabel(label, 18, 1, {
			color = tmpColor
		}):add2(cell, 1):anchor(0.5, 0.5):pos(230, h*0.5)

		--- END OF BLOCK #9 ---

		if v.get(v, "six")

		 == 0 then
		JUMP TO BLOCK #10
		else
		JUMP TO BLOCK #11
		end


		--- BLOCK #10 224-225, warpins: 1 ---
		label = "ÄÐ"
		--- END OF BLOCK #10 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #12


		--- BLOCK #11 226-226, warpins: 1 ---
		label = "Å®"
		--- END OF BLOCK #11 ---

		FLOW; TARGET BLOCK #12


		--- BLOCK #12 227-262, warpins: 2 ---
		info[#info + 1] = an.newLabel(label, 18, 1, {
			color = tmpColor
		}):add2(cell, 1):anchor(0.5, 0.5):pos(290, h*0.5)

		--- END OF BLOCK #12 ---

		slot9 = if not posTitle[v.get(v, "position")

		 + 1] then
		JUMP TO BLOCK #13
		else
		JUMP TO BLOCK #14
		end


		--- BLOCK #13 263-263, warpins: 1 ---
		label = ""
		--- END OF BLOCK #13 ---

		FLOW; TARGET BLOCK #14


		--- BLOCK #14 264-338, warpins: 2 ---
		info[#info + 1] = an.newLabel(label, 18, 1, {
			color = tmpColor
		}):add2(cell, 1):anchor(0.5, 0.5):pos(350, h*0.5)
		label = v.get(v, "title")
		info[#info + 1] = an.newLabel(label, 18, 1, {
			color = tmpColor
		}):add2(cell, 1):anchor(0.5, 0.5):pos(425, h*0.5)

		cell.setTouchEnabled(cell, true)
		cell.setTouchSwallowEnabled(cell, false)
		cell.addNodeEventListener(cell, cc.NODE_TOUCH_EVENT, function (event)
			--- BLOCK #0 1-3, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if event.name == "began" then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 4-9, warpins: 1 ---
			cell.offsetBeginY = event.y

			return true

			--- END OF BLOCK #1 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #14


			--- BLOCK #2 10-12, warpins: 1 ---
			--- END OF BLOCK #2 ---

			if event.name == "ended" then
			JUMP TO BLOCK #3
			else
			JUMP TO BLOCK #14
			end


			--- BLOCK #3 13-23, warpins: 1 ---
			local offsetY = event.y - cell.offsetBeginY

			--- END OF BLOCK #3 ---

			if math.abs(offsetY)
			 <= 5 then
			JUMP TO BLOCK #4
			else
			JUMP TO BLOCK #14
			end


			--- BLOCK #4 24-26, warpins: 1 ---
			--- END OF BLOCK #4 ---

			slot2 = if selectPic then
			JUMP TO BLOCK #5
			else
			JUMP TO BLOCK #11
			end


			--- BLOCK #5 27-31, warpins: 1 ---
			--- END OF BLOCK #5 ---

			for i, v in ipairs(selectPic.info)


			LOOP BLOCK #6
			GO OUT TO BLOCK #10


			--- BLOCK #6 32-37, warpins: 1 ---
			slot8 = v
			slot7 = v.setColor
			--- END OF BLOCK #6 ---

			slot9 = if not selectPic.color then
			JUMP TO BLOCK #7
			else
			JUMP TO BLOCK #8
			end


			--- BLOCK #7 38-40, warpins: 1 ---
			slot9 = def.colors.cellOffline

			--- END OF BLOCK #7 ---

			FLOW; TARGET BLOCK #8


			--- BLOCK #8 41-41, warpins: 2 ---
			slot7(slot8, slot9)
			--- END OF BLOCK #8 ---

			FLOW; TARGET BLOCK #9


			--- BLOCK #9 42-43, warpins: 2 ---
			--- END OF BLOCK #9 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #5


			--- BLOCK #10 44-48, warpins: 1 ---
			selectPic:removeSelf()

			selectPic = nil
			--- END OF BLOCK #10 ---

			FLOW; TARGET BLOCK #11


			--- BLOCK #11 49-89, warpins: 2 ---
			selectData = v
			selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(480, h)):anchor(0, 0):pos(0, 0):add2(cell)
			selectPic.info = info
			selectPic.color = tmpColor

			--- END OF BLOCK #11 ---

			for i, v in ipairs(info)

			LOOP BLOCK #12
			GO OUT TO BLOCK #14


			--- BLOCK #12 90-95, warpins: 1 ---
			v.setColor(v, def.colors.cellSel)

			--- END OF BLOCK #12 ---

			FLOW; TARGET BLOCK #13


			--- BLOCK #13 96-97, warpins: 2 ---
			--- END OF BLOCK #13 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #11


			--- BLOCK #14 98-98, warpins: 4 ---
			return 
			--- END OF BLOCK #14 ---



		end)

		--- END OF BLOCK #14 ---

		if i == 1 then
		JUMP TO BLOCK #15
		else
		JUMP TO BLOCK #18
		end


		--- BLOCK #15 339-376, warpins: 1 ---
		selectData = v
		selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(480, h)):anchor(0, 0):pos(0, 0):add2(cell)
		selectPic.info = info
		selectPic.color = tmpColor

		--- END OF BLOCK #15 ---

		for i, v in ipairs(info)

		LOOP BLOCK #16
		GO OUT TO BLOCK #18


		--- BLOCK #16 377-382, warpins: 1 ---
		v.setColor(v, def.colors.cellSel)

		--- END OF BLOCK #16 ---

		FLOW; TARGET BLOCK #17


		--- BLOCK #17 383-384, warpins: 2 ---
		--- END OF BLOCK #17 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #15


		--- BLOCK #18 385-388, warpins: 2 ---
		v.info = info
		v.cell = cell

		--- END OF BLOCK #18 ---

		FLOW; TARGET BLOCK #19


		--- BLOCK #19 389-390, warpins: 2 ---
		--- END OF BLOCK #19 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #2


		--- BLOCK #20 391-391, warpins: 1 ---
		return 
		--- END OF BLOCK #20 ---



	end

	local func = {}
	func[1] = function (data, value)
		--- BLOCK #0 1-6, warpins: 1 ---
		return self:sortName(data, value)
		--- END OF BLOCK #0 ---



	end
	func[2] = function (data, value)
		--- BLOCK #0 1-6, warpins: 1 ---
		return self:sortLevel(data, value)
		--- END OF BLOCK #0 ---



	end
	func[3] = function (data, value)
		--- BLOCK #0 1-6, warpins: 1 ---
		return self:sortJob(data, value)
		--- END OF BLOCK #0 ---



	end
	func[4] = function (data, value)
		--- BLOCK #0 1-6, warpins: 1 ---
		return self:sortSex(data, value)
		--- END OF BLOCK #0 ---



	end
	func[5] = function (data, value)
		--- BLOCK #0 1-6, warpins: 1 ---
		return self:sortTitle(data, value)
		--- END OF BLOCK #0 ---



	end
	func[6] = function (data, value)
		--- BLOCK #0 1-6, warpins: 1 ---
		return self:sortString(data, value)
		--- END OF BLOCK #0 ---



	end
	local sortType = 1
	local sortCount = 0

	--- END OF BLOCK #2 ---

	for i, v in ipairs(width)


	LOOP BLOCK #3
	GO OUT TO BLOCK #5


	--- BLOCK #3 34-101, warpins: 1 ---
	local back = display.newScale9Sprite(res.getframe2("pic/scale/scale15.png"), 0, 0, cc.size(v + 2, 42)):anchor(0.5, 0.5):pos(posOffset + v*0.5, parent.geth(parent) - 23):add2(parent)
	Titlelabel[i] = an.newLabel(Titlelabel[i], 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(posOffset + v*0.5, parent.geth(parent) - 23):add2(parent)
	posOffset = posOffset + v

	back.enableClick(back, function ()
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if sortType == i then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #1 5-15, warpins: 1 ---
		sortCount = sortCount + 1
		slot0 = func[i]
		slot1 = dataList
		--- END OF BLOCK #1 ---

		if sortCount%2 ~= 0 then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 16-17, warpins: 1 ---
		slot2 = false
		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #3 18-18, warpins: 1 ---
		slot2 = true
		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 19-21, warpins: 2 ---
		dataList = slot0(slot1, slot2)
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #5 22-29, warpins: 1 ---
		sortCount = 0
		dataList = func[i](dataList, true)
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 30-41, warpins: 2 ---
		dataList = self:sortOnline(dataList)

		creteOrder(dataList)

		sortType = i

		return 
		--- END OF BLOCK #6 ---



	end)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 102-103, warpins: 2 ---
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #2


	--- BLOCK #5 104-125, warpins: 1 ---
	dataList = self.sortName(self, dataList, true)
	dataList = self.sortOnline(self, dataList)

	creteOrder(dataList)

	local posMux = 0

	--- END OF BLOCK #5 ---

	slot16 = if not g_data.guild:isLeader()
	 then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 126-132, warpins: 1 ---
	--- END OF BLOCK #6 ---

	slot16 = if g_data.guild:isViceLeader()
	 then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 133-199, warpins: 2 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-18, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if selectData:get("name")
		 == common.getPlayerName()
		 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 19-25, warpins: 1 ---
		main_scene.ui:tip("²»ÄÜ²Ù×÷×Ô¼º")

		return 

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 26-39, warpins: 1 ---
		an.newMsgbox("ÄúÈ·¶¨½« " .. selectData:get("name") .. " Öð³öÕ½¶ÓÂð£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-18, warpins: 1 ---
			net.send({
				CM_CORPS_DISMISS_MEMBER
			}, nil, {
				{
					"ID",
					selectData:get("ID")
				}
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 19-19, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})

		return 
		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 40-40, warpins: 2 ---
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 41-41, warpins: 2 ---
		--- END OF BLOCK #6 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/zczd.png")
	}):add2(parent):anchor(0.5, 0.5):pos(442, -22)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-73, warpins: 1 ---
		local msgbox = nil
		msgbox = an.newMsgbox("", function (idx)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if idx == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #4
			end


			--- BLOCK #1 3-9, warpins: 1 ---
			--- END OF BLOCK #1 ---

			if msgbox.nameInput:getString()

			 == "" then
			JUMP TO BLOCK #2
			else
			JUMP TO BLOCK #3
			end


			--- BLOCK #2 10-10, warpins: 1 ---
			return 

			--- END OF BLOCK #2 ---

			FLOW; TARGET BLOCK #3


			--- BLOCK #3 11-38, warpins: 2 ---
			net.send({
				CM_CORPS_SET_MEMBER_TITLE
			}, nil, {
				{
					"ID",
					selectData:get("ID")
				},
				{
					"string",
					def.wordfilter.run(msgbox.nameInput:getString()),
					15
				}
			})

			--- END OF BLOCK #3 ---

			FLOW; TARGET BLOCK #4


			--- BLOCK #4 39-39, warpins: 2 ---
			return 
			--- END OF BLOCK #4 ---



		end, {
			disableScroll = true,
			hasCancel = true
		})
		msgbox.nameInput = an.newInput(0, 0, msgbox.bg:getw() - 60, 40, 4, {
			label = {
				"",
				20,
				1
			},
			bg = {
				tex = res.gettex2("pic/scale/scale16.png"),
				offset = {
					-10,
					2
				}
			},
			tip = {
				"ÇëÊäÈë·âºÅ£¿",
				20,
				1,
				{
					color = cc.c3b(128, 128, 128)
				}
			}
		}):add2(msgbox.bg):pos(msgbox.bg:getw()*0.5 + 10, msgbox.bg:geth()*0.5 + 20)

		return 
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 74-74, warpins: 2 ---
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/szfh.png")
	}):add2(parent):anchor(0.5, 0.5):pos(342, -22)

	posMux = 2
	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 200-207, warpins: 2 ---
	local menuPos = posMux

	--- END OF BLOCK #8 ---

	slot17 = if not g_data.guild:isLeader()
	 then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #9 208-214, warpins: 1 ---
	--- END OF BLOCK #9 ---

	slot17 = if g_data.guild:isViceLeader()
	 then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #10 215-249, warpins: 2 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-19, warpins: 1 ---
		sound.playSound("103")
		self:showMenu(cc.p(menuPos*100 - 442 + 82, 58), "Ö°Îñ²Ù×÷", selectData)

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/zwcz.png")
	}):add2(parent):anchor(0.5, 0.5):pos(posMux*100 - 442, -22)

	posMux = posMux + 1
	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 250-286, warpins: 2 ---
	local menuPos1 = posMux

	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-23, warpins: 2 ---
		self:showMenu(cc.p(menuPos1*100 - 442 + 82, 58), "¸ü¶à²Ù×÷", selectData)

		return 
		--- END OF BLOCK #2 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/gdcz.png")
	}):add2(parent):anchor(0.5, 0.5):pos(posMux*100 - 442, -22)

	return 
	--- END OF BLOCK #11 ---



end
guild.showSubClanjobs = function (self, parent)
	--- BLOCK #0 1-7, warpins: 1 ---
	local width = {
		170,
		90,
		90,
		131
	}
	local Titlelabel = {
		"½ÇÉ«Ãû",
		"µÈ¼¶",
		"Ö°Òµ",
		"ÐÔ±ð"
	}
	local posOffset = 5

	--- END OF BLOCK #0 ---

	for i, v in ipairs(width)

	LOOP BLOCK #1
	GO OUT TO BLOCK #3


	--- BLOCK #1 8-70, warpins: 1 ---
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png"), 0, 0, cc.size(v + 2, 42)):anchor(0.5, 0.5):pos(posOffset + v*0.5, parent.geth(parent) - 23):add2(parent)

	Titlelabel[i] = an.newLabel(Titlelabel[i], 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(posOffset + v*0.5, parent.geth(parent) - 23):add2(parent)
	posOffset = posOffset + v
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 71-72, warpins: 2 ---
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #3 73-77, warpins: 1 ---
	--- END OF BLOCK #3 ---

	slot5 = if not g_data.guild.corpsQueryMem then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 78-78, warpins: 1 ---
	local dataList = {}
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 79-114, warpins: 2 ---
	local infoView = an.newScroll(7, 8, 480, 292):add2(parent)
	local h = 42

	infoView.setScrollSize(infoView, 472, math.max(288, #dataList*h))

	local maxMem = g_data.guild.clanInfo:get("memberCount") - 30
	local selectPic, selectData = nil
	local allSelect = false

	--- END OF BLOCK #5 ---

	for i, v in ipairs(dataList)


	LOOP BLOCK #6
	GO OUT TO BLOCK #18


	--- BLOCK #6 115-122, warpins: 1 ---
	local info = {}
	slot18 = display.newScale9Sprite
	slot19 = res.getframe2
	--- END OF BLOCK #6 ---

	if i%2 == 0 then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 123-124, warpins: 1 ---
	slot20 = "pic/scale/scale18.png"
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #9


	--- BLOCK #8 125-125, warpins: 1 ---
	slot20 = "pic/scale/scale19.png"
	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 126-268, warpins: 2 ---
	local cell = slot18(slot19(slot20), 0, 0, cc.size(480, h)):anchor(0, 0):pos(0, infoView.getScrollSize(infoView).height - i*h):add2(infoView)
	local label = g_data.player:fixStrLen(v.get(v, "name"), 8)
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(85, h*0.5)
	label = v.get(v, "level")
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(215, h*0.5)
	label = g_data.player:getOtherJobStr(v.get(v, "job"))
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(305, h*0.5)

	--- END OF BLOCK #9 ---

	if v.get(v, "six")

	 == 0 then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #10 269-270, warpins: 1 ---
	label = "ÄÐ"
	--- END OF BLOCK #10 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #12


	--- BLOCK #11 271-271, warpins: 1 ---
	label = "Å®"
	--- END OF BLOCK #11 ---

	FLOW; TARGET BLOCK #12


	--- BLOCK #12 272-315, warpins: 2 ---
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(410, h*0.5)

	cell.setTouchEnabled(cell, true)
	cell.setTouchSwallowEnabled(cell, false)
	cell.addNodeEventListener(cell, cc.NODE_TOUCH_EVENT, function (event)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if event.name == "began" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-9, warpins: 1 ---
		cell.offsetBeginY = event.y

		return true

		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #22


		--- BLOCK #2 10-12, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if event.name == "ended" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #22
		end


		--- BLOCK #3 13-23, warpins: 1 ---
		local offsetY = event.y - cell.offsetBeginY

		--- END OF BLOCK #3 ---

		if math.abs(offsetY)
		 <= 5 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #22
		end


		--- BLOCK #4 24-26, warpins: 1 ---
		--- END OF BLOCK #4 ---

		slot2 = if allSelect then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #14
		end


		--- BLOCK #5 27-30, warpins: 1 ---
		--- END OF BLOCK #5 ---

		slot2 = if v.selectPic then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #6 31-35, warpins: 1 ---
		--- END OF BLOCK #6 ---

		for i, obj in ipairs(v.info)

		LOOP BLOCK #7
		GO OUT TO BLOCK #9


		--- BLOCK #7 36-41, warpins: 1 ---
		obj.setColor(obj, def.colors.cellNor)
		--- END OF BLOCK #7 ---

		FLOW; TARGET BLOCK #8


		--- BLOCK #8 42-43, warpins: 2 ---
		--- END OF BLOCK #8 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #9 44-52, warpins: 1 ---
		v.selectPic:removeSelf()

		v.selectPic = nil
		--- END OF BLOCK #9 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #22


		--- BLOCK #10 53-88, warpins: 1 ---
		v.selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(480, h)):anchor(0, 0):pos(0, 0):add2(v.cell)

		--- END OF BLOCK #10 ---

		for i, obj in ipairs(v.info)

		LOOP BLOCK #11
		GO OUT TO BLOCK #13


		--- BLOCK #11 89-94, warpins: 1 ---
		obj.setColor(obj, def.colors.cellSel)
		--- END OF BLOCK #11 ---

		FLOW; TARGET BLOCK #12


		--- BLOCK #12 95-96, warpins: 2 ---
		--- END OF BLOCK #12 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #13 97-97, warpins: 1 ---
		--- END OF BLOCK #13 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #22


		--- BLOCK #14 98-100, warpins: 1 ---
		--- END OF BLOCK #14 ---

		slot2 = if selectPic then
		JUMP TO BLOCK #15
		else
		JUMP TO BLOCK #19
		end


		--- BLOCK #15 101-105, warpins: 1 ---
		--- END OF BLOCK #15 ---

		for i, v in ipairs(selectPic.info)

		LOOP BLOCK #16
		GO OUT TO BLOCK #18


		--- BLOCK #16 106-111, warpins: 1 ---
		v.setColor(v, def.colors.cellNor)
		--- END OF BLOCK #16 ---

		FLOW; TARGET BLOCK #17


		--- BLOCK #17 112-113, warpins: 2 ---
		--- END OF BLOCK #17 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #15


		--- BLOCK #18 114-118, warpins: 1 ---
		selectPic:removeSelf()

		selectPic = nil
		--- END OF BLOCK #18 ---

		FLOW; TARGET BLOCK #19


		--- BLOCK #19 119-156, warpins: 2 ---
		selectData = v
		selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(480, h)):anchor(0, 0):pos(0, 0):add2(cell)
		selectPic.info = info

		--- END OF BLOCK #19 ---

		for i, v in ipairs(info)

		LOOP BLOCK #20
		GO OUT TO BLOCK #22


		--- BLOCK #20 157-162, warpins: 1 ---
		v.setColor(v, def.colors.cellSel)

		--- END OF BLOCK #20 ---

		FLOW; TARGET BLOCK #21


		--- BLOCK #21 163-164, warpins: 2 ---
		--- END OF BLOCK #21 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #19


		--- BLOCK #22 165-165, warpins: 6 ---
		return 
		--- END OF BLOCK #22 ---



	end)

	--- END OF BLOCK #12 ---

	if i == 1 then
	JUMP TO BLOCK #13
	else
	JUMP TO BLOCK #16
	end


	--- BLOCK #13 316-350, warpins: 1 ---
	selectData = v
	selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(480, h)):anchor(0, 0):pos(0, 0):add2(cell)
	selectPic.info = info

	--- END OF BLOCK #13 ---

	for i, v in ipairs(info)

	LOOP BLOCK #14
	GO OUT TO BLOCK #16


	--- BLOCK #14 351-356, warpins: 1 ---
	v.setColor(v, def.colors.cellSel)

	--- END OF BLOCK #14 ---

	FLOW; TARGET BLOCK #15


	--- BLOCK #15 357-358, warpins: 2 ---
	--- END OF BLOCK #15 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #13


	--- BLOCK #16 359-362, warpins: 2 ---
	v.cell = cell
	v.info = info

	--- END OF BLOCK #16 ---

	FLOW; TARGET BLOCK #17


	--- BLOCK #17 363-364, warpins: 2 ---
	--- END OF BLOCK #17 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #5


	--- BLOCK #18 365-371, warpins: 1 ---
	--- END OF BLOCK #18 ---

	slot12 = if not g_data.guild:isLeader()
	 then
	JUMP TO BLOCK #19
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #19 372-378, warpins: 1 ---
	--- END OF BLOCK #19 ---

	slot12 = if g_data.guild:isViceLeader()

	 then
	JUMP TO BLOCK #20
	else
	JUMP TO BLOCK #21
	end


	--- BLOCK #20 379-546, warpins: 2 ---
	local allAllow = an.newToggle(res.gettex2("pic/common/toggle10.png"), res.gettex2("pic/common/toggle11.png"), function (b)
		--- BLOCK #0 1-4, warpins: 1 ---
		allSelect = b

		--- END OF BLOCK #0 ---

		slot1 = if allSelect then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #14
		end


		--- BLOCK #1 5-7, warpins: 1 ---
		--- END OF BLOCK #1 ---

		slot1 = if selectPic then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #2 8-12, warpins: 1 ---
		--- END OF BLOCK #2 ---

		for i, v in ipairs(selectPic.info)

		LOOP BLOCK #3
		GO OUT TO BLOCK #5


		--- BLOCK #3 13-18, warpins: 1 ---
		v.setColor(v, def.colors.cellNor)
		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 19-20, warpins: 2 ---
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #2


		--- BLOCK #5 21-26, warpins: 1 ---
		selectPic:removeSelf()

		selectPic = nil
		selectData = nil
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 27-39, warpins: 2 ---
		maxMem = g_data.guild.clanInfo:get("memberCount") - 30

		--- END OF BLOCK #6 ---

		for i, v in ipairs(dataList)


		LOOP BLOCK #7
		GO OUT TO BLOCK #13


		--- BLOCK #7 40-72, warpins: 1 ---
		v.selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(480, h)):anchor(0, 0):pos(0, 0):add2(v.cell)

		--- END OF BLOCK #7 ---

		for i, obj in ipairs(v.info)

		LOOP BLOCK #8
		GO OUT TO BLOCK #10


		--- BLOCK #8 73-78, warpins: 1 ---
		obj.setColor(obj, def.colors.cellSel)

		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 79-80, warpins: 2 ---
		--- END OF BLOCK #9 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #7


		--- BLOCK #10 81-87, warpins: 1 ---
		maxMem = maxMem - 1

		--- END OF BLOCK #10 ---

		if maxMem <= 0 then
		JUMP TO BLOCK #11
		else
		JUMP TO BLOCK #12
		end


		--- BLOCK #11 88-88, warpins: 1 ---
		--- END OF BLOCK #11 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #21


		--- BLOCK #12 89-90, warpins: 2 ---
		--- END OF BLOCK #12 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #13 91-91, warpins: 1 ---
		--- END OF BLOCK #13 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #21


		--- BLOCK #14 92-95, warpins: 1 ---
		--- END OF BLOCK #14 ---

		for i, v in ipairs(dataList)

		LOOP BLOCK #15
		GO OUT TO BLOCK #21


		--- BLOCK #15 96-98, warpins: 1 ---
		--- END OF BLOCK #15 ---

		slot6 = if v.selectPic then
		JUMP TO BLOCK #16
		else
		JUMP TO BLOCK #20
		end


		--- BLOCK #16 99-102, warpins: 1 ---
		--- END OF BLOCK #16 ---

		for i, obj in ipairs(v.info)

		LOOP BLOCK #17
		GO OUT TO BLOCK #19


		--- BLOCK #17 103-108, warpins: 1 ---
		obj.setColor(obj, def.colors.cellNor)
		--- END OF BLOCK #17 ---

		FLOW; TARGET BLOCK #18


		--- BLOCK #18 109-110, warpins: 2 ---
		--- END OF BLOCK #18 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #16


		--- BLOCK #19 111-116, warpins: 1 ---
		v.selectPic:removeSelf()

		v.selectPic = nil

		--- END OF BLOCK #19 ---

		FLOW; TARGET BLOCK #20


		--- BLOCK #20 117-118, warpins: 3 ---
		--- END OF BLOCK #20 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #14


		--- BLOCK #21 119-119, warpins: 3 ---
		return 
		--- END OF BLOCK #21 ---



	end, {
		easy = true,
		label = {
			"È«²¿Ñ¡ÖÐ",
			20,
			1,
			{
				color = def.colors.labelGray
			}
		}
	}):anchor(0, 0.5):pos(-110, -28):add2(parent, 2)

	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")
		--- END OF BLOCK #0 ---

		slot0 = if allSelect then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-14, warpins: 1 ---
		an.newMsgbox("ÄúÈ·¶¨¾Ü¾øËùÓÐ½øÈëÕ½¶ÓµÄÉêÇëÂð£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #6
			end


			--- BLOCK #1 3-7, warpins: 1 ---
			local data = {}

			--- END OF BLOCK #1 ---

			for i, v in ipairs(dataList)


			LOOP BLOCK #2
			GO OUT TO BLOCK #5


			--- BLOCK #2 8-10, warpins: 1 ---
			--- END OF BLOCK #2 ---

			slot7 = if v.selectPic then
			JUMP TO BLOCK #3
			else
			JUMP TO BLOCK #4
			end


			--- BLOCK #3 11-19, warpins: 1 ---
			data[#data + 1] = {
				"ID",
				v.get(v, "ID")
			}

			--- END OF BLOCK #3 ---

			FLOW; TARGET BLOCK #4


			--- BLOCK #4 20-21, warpins: 3 ---
			--- END OF BLOCK #4 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #1


			--- BLOCK #5 22-31, warpins: 1 ---
			net.send({
				CM_CORPS_REFUSE_REQUEST,
				param = #data
			}, nil, data)

			--- END OF BLOCK #5 ---

			FLOW; TARGET BLOCK #6


			--- BLOCK #6 32-32, warpins: 2 ---
			return 
			--- END OF BLOCK #6 ---



		end, {
			center = true,
			hasCancel = true
		})

		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #5


		--- BLOCK #2 15-17, warpins: 1 ---
		--- END OF BLOCK #2 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 18-19, warpins: 1 ---
		return 

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 20-32, warpins: 2 ---
		an.newMsgbox("ÄúÈ·¶¨¾Ü¾ø " .. selectData:get("name") .. "½øÈëÕ½¶ÓÂð£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-18, warpins: 1 ---
			net.send({
				CM_CORPS_REFUSE_REQUEST,
				param = 1
			}, nil, {
				{
					"ID",
					selectData:get("ID")
				}
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 19-19, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})

		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 33-33, warpins: 2 ---
		return 
		--- END OF BLOCK #5 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/jjzs.png")
	}):add2(parent):anchor(0.5, 0.5):pos(442, -22)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")
		--- END OF BLOCK #0 ---

		slot0 = if allSelect then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-14, warpins: 1 ---
		an.newMsgbox("ÄúÈ·¶¨ÔÊÐíËùÓÐ½øÈëÕ½¶ÓµÄÉêÇëÂð£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #6
			end


			--- BLOCK #1 3-7, warpins: 1 ---
			local data = {}

			--- END OF BLOCK #1 ---

			for i, v in ipairs(dataList)


			LOOP BLOCK #2
			GO OUT TO BLOCK #5


			--- BLOCK #2 8-10, warpins: 1 ---
			--- END OF BLOCK #2 ---

			slot7 = if v.selectPic then
			JUMP TO BLOCK #3
			else
			JUMP TO BLOCK #4
			end


			--- BLOCK #3 11-19, warpins: 1 ---
			data[#data + 1] = {
				"ID",
				v.get(v, "ID")
			}

			--- END OF BLOCK #3 ---

			FLOW; TARGET BLOCK #4


			--- BLOCK #4 20-21, warpins: 3 ---
			--- END OF BLOCK #4 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #1


			--- BLOCK #5 22-31, warpins: 1 ---
			net.send({
				CM_CORPS_ACCEPT_REQUEST,
				param = #data
			}, nil, data)

			--- END OF BLOCK #5 ---

			FLOW; TARGET BLOCK #6


			--- BLOCK #6 32-32, warpins: 2 ---
			return 
			--- END OF BLOCK #6 ---



		end, {
			center = true,
			hasCancel = true
		})

		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #5


		--- BLOCK #2 15-17, warpins: 1 ---
		--- END OF BLOCK #2 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 18-19, warpins: 1 ---
		return 

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 20-32, warpins: 2 ---
		an.newMsgbox("ÄúÈ·¶¨ÔÊÐí " .. selectData:get("name") .. "½øÈëÕ½¶ÓÂð£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-18, warpins: 1 ---
			net.send({
				CM_CORPS_ACCEPT_REQUEST,
				param = 1
			}, nil, {
				{
					"ID",
					selectData:get("ID")
				}
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 19-19, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})

		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 33-33, warpins: 2 ---
		return 
		--- END OF BLOCK #5 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/tyzs.png")
	}):add2(parent):anchor(0.5, 0.5):pos(342, -22)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-11, warpins: 1 ---
		sound.playSound("103")
		net.send({
			CM_CORPS_DIRECT_ADD_MEMBER
		})

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/mdmz.png")
	}):add2(parent):anchor(0.5, 0.5):pos(242, -22)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-23, warpins: 1 ---
		sound.playSound("103")
		net.send({
			CM_CORPS_GET_RECRUIT_CONDITION
		}, nil, {
			{
				"ID",
				g_data.guild.clanInfo:get("corpsID")
			}
		})

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/zxsz.png")
	}):add2(parent):anchor(0.5, 0.5):pos(142, -22)

	--- END OF BLOCK #20 ---

	FLOW; TARGET BLOCK #21


	--- BLOCK #21 547-548, warpins: 2 ---
	return 
	--- END OF BLOCK #21 ---



end
guild.showSubClanlog = function (self, parent)
	--- BLOCK #0 1-23, warpins: 1 ---
	local maxLine = 60
	local chatView = an.newScroll(8, 8, 472, 328, {
		labelM = {
			16,
			params = {
				maxLine = maxLine
			}
		}
	}):add2(parent)
	--- END OF BLOCK #0 ---

	slot4 = if not g_data.guild.corpsLog then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 24-24, warpins: 1 ---
	local msgs = {}

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 25-26, warpins: 2 ---
	--- END OF BLOCK #2 ---

	slot4 = if msgs then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #3 27-30, warpins: 1 ---
	--- END OF BLOCK #3 ---

	for i, v in ipairs(msgs)

	LOOP BLOCK #4
	GO OUT TO BLOCK #6


	--- BLOCK #4 31-44, warpins: 1 ---
	chatView.labelM:addLabel(v.get(v, "logInfo"), def.colors.labelGray):nextLine()
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 45-46, warpins: 2 ---
	--- END OF BLOCK #5 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #3


	--- BLOCK #6 47-114, warpins: 2 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-14, warpins: 1 ---
		sound.playSound("103")

		self.clanLogType = 1

		net.send({
			CM_CORPS_QUERY_LOG,
			param = 2,
			series = 30,
			tag = 0
		})

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/zzrz.png")
	}):add2(parent):anchor(0.5, 0.5):pos(442, -22)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-14, warpins: 1 ---
		sound.playSound("103")

		self.clanLogType = 0

		net.send({
			CM_CORPS_QUERY_LOG,
			param = 1,
			series = 30,
			tag = 0
		})

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/cyrz.png")
	}):add2(parent):anchor(0.5, 0.5):pos(342, -22)

	return 
	--- END OF BLOCK #6 ---



end
guild.showSubGuildmain = function (self, parent)
	--- BLOCK #0 1-58, warpins: 1 ---
	parent.size(parent, 486, 236)
	display.newScale9Sprite(res.getframe2("pic/common/black_5.png")):addto(parent):anchor(0, 0):pos(2, 238):size(parent.getw(parent), 106)
	res.get2("pic/panels/guild/signboard_bg.png"):anchor(0, 0):pos(4, 242):addto(parent)

	slot2 = an.newLabel

	--- END OF BLOCK #0 ---

	slot3 = if g_data.guild.guildInfo then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #1 59-67, warpins: 1 ---
	--- END OF BLOCK #1 ---

	slot3 = if not g_data.guild.guildInfo:get("gildName")

	 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #2 68-69, warpins: 1 ---
	slot3 = ""
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #3 70-70, warpins: 1 ---
	slot3 = ""

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 71-130, warpins: 3 ---
	slot2(slot3, 20, 1, {
		color = def.colors.labelGray
	}):anchor(0.5, 0.5):pos(parent.getw(parent)*0.5, 302):add2(parent)
	an.newLabel("Õ½¶ÓÊý:", 20, 1, {
		color = def.colors.labelGray
	}):anchor(1, 0.5):pos(parent.getw(parent)*0.45, 264):add2(parent)

	slot2 = an.newLabel

	--- END OF BLOCK #4 ---

	slot3 = if g_data.guild.guildInfo then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 131-141, warpins: 1 ---
	--- END OF BLOCK #5 ---

	slot3 = if not (g_data.guild.guildInfo:get("corpsCount")

	 .. "/8") then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 142-142, warpins: 2 ---
	slot3 = "1/8"

	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 143-222, warpins: 2 ---
	slot2(slot3, 20, 1, {
		color = def.colors.labelGray
	}):anchor(0, 0.5):pos(parent.getw(parent)*0.45 + 4, 264):add2(parent)
	an.newLabel("»áÔ±Êý:" .. g_data.guild.guildInfo:get("onlineCount") .. "/" .. g_data.guild.guildInfo:get("playerCount"), 20, 1, {
		color = def.colors.labelGray
	}):anchor(0, 0.5):pos(parent.getw(parent)*0.55, 264):add2(parent)

	local editInfo = nil
	local strs = {}
	strs[1] = g_data.guild.guildNotice
	--- END OF BLOCK #7 ---

	for slot7=1, 5, 1
	LOOP BLOCK #8
	GO OUT TO BLOCK #9

	--- BLOCK #8 223-223, warpins: 2 ---
	--- END OF BLOCK #8 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #7


	--- BLOCK #9 224-238, warpins: 1 ---
	strs[#strs + 1] = "\r\n"

	function refush(canEdit)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot1 = if editInfo then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-8, warpins: 1 ---
		editInfo:removeSelf()

		editInfo = nil
		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-26, warpins: 2 ---
		editInfo = an.newScroll(8, 8, 470, 220):add2(parent)
		--- END OF BLOCK #2 ---

		if strs[#strs] ~= "\r\n" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 27-32, warpins: 1 ---
		strs[#strs + 1] = "\r\n"
		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 33-39, warpins: 2 ---
		local labels = {}
		local hMax = 0
		local valueInput, oldindex = nil

		--- END OF BLOCK #4 ---

		for i, v in ipairs(strs)


		LOOP BLOCK #5
		GO OUT TO BLOCK #9


		--- BLOCK #5 40-68, warpins: 1 ---
		local tmpLabel = cc.LabelTTF:create(v, "", 18, cc.size(470, 0), 0)

		tmpLabel.anchor(tmpLabel, 0, 1)

		labels[#labels + 1] = tmpLabel
		hMax = hMax + tmpLabel.getContentSize(tmpLabel).height

		--- END OF BLOCK #5 ---

		slot0 = if canEdit then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #6 69-82, warpins: 1 ---
		tmpLabel.setTouchEnabled(tmpLabel, true)
		tmpLabel.setTouchSwallowEnabled(tmpLabel, false)
		tmpLabel.addNodeEventListener(tmpLabel, cc.NODE_TOUCH_EVENT, function (event)
			--- BLOCK #0 1-3, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if event.name == "began" then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #3
			end


			--- BLOCK #1 4-8, warpins: 1 ---
			tmpLabel.offsetBeginY = event.y

			return true

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 9-9, warpins: 0 ---
			--- END OF BLOCK #2 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #8


			--- BLOCK #3 10-12, warpins: 1 ---
			--- END OF BLOCK #3 ---

			if event.name == "ended" then
			JUMP TO BLOCK #4
			else
			JUMP TO BLOCK #8
			end


			--- BLOCK #4 13-23, warpins: 1 ---
			local offsetY = event.y - tmpLabel.offsetBeginY

			--- END OF BLOCK #4 ---

			if math.abs(offsetY)

			 <= 5 then
			JUMP TO BLOCK #5
			else
			JUMP TO BLOCK #8
			end


			--- BLOCK #5 24-26, warpins: 1 ---
			--- END OF BLOCK #5 ---

			slot2 = if valueInput then
			JUMP TO BLOCK #6
			else
			JUMP TO BLOCK #7
			end


			--- BLOCK #6 27-53, warpins: 1 ---
			strs[oldindex] = valueInput:getText()

			labels[oldindex]:setString(valueInput:getText())
			valueInput:removeSelf()

			valueInput = nil
			oldindex = nil

			refush(true)

			return 

			--- END OF BLOCK #6 ---

			FLOW; TARGET BLOCK #7


			--- BLOCK #7 54-100, warpins: 1 ---
			oldindex = i
			valueInput = an.newInput(tmpLabel:getPositionX(), tmpLabel:getPositionY(), 470, 24, 500, {
				label = {
					string.gsub(v, "\r\n", ""),
					18,
					1
				},
				bg = {
					h = 24,
					tex = res.gettex2("pic/scale/edit1.png"),
					offset = {
						-3,
						4
					}
				},
				stop_call = function ()
					--- BLOCK #0 1-6, warpins: 1 ---
					local inputValue = valueInput:getText()
					--- END OF BLOCK #0 ---

					if inputValue == "" then
					JUMP TO BLOCK #1
					else
					JUMP TO BLOCK #2
					end


					--- BLOCK #1 7-8, warpins: 1 ---
					inputValue = "\r\n"
					--- END OF BLOCK #1 ---

					UNCONDITIONAL JUMP; TARGET BLOCK #2


					--- BLOCK #2 9-26, warpins: 2 ---
					strs[i] = inputValue

					tmpLabel:setString(inputValue)
					valueInput:removeSelf()

					valueInput = nil
					oldindex = nil

					refush(true)

					return 
					--- END OF BLOCK #2 ---



				end
			}):add2(editInfo):anchor(0, 1)

			--- END OF BLOCK #7 ---

			FLOW; TARGET BLOCK #8


			--- BLOCK #8 101-101, warpins: 4 ---
			return 
			--- END OF BLOCK #8 ---

			FLOW; TARGET BLOCK #9


			--- BLOCK #9 102-102, warpins: 2 ---
			--- END OF BLOCK #9 ---

			FLOW; TARGET BLOCK #10


			--- BLOCK #10 103-103, warpins: 2 ---
			--- END OF BLOCK #10 ---



		end)
		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 83-84, warpins: 2 ---
		--- END OF BLOCK #7 ---

		FLOW; TARGET BLOCK #8


		--- BLOCK #8 85-86, warpins: 2 ---
		--- END OF BLOCK #8 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #9 87-101, warpins: 1 ---
		editInfo:setScrollSize(470, math.max(220, hMax))

		hMax = 0

		--- END OF BLOCK #9 ---

		for i, v in ipairs(labels)

		LOOP BLOCK #10
		GO OUT TO BLOCK #12


		--- BLOCK #10 102-120, warpins: 1 ---
		v.pos(v, 0, editInfo:getScrollSize().height - hMax):add2(editInfo)

		hMax = hMax + v.getContentSize(v).height

		--- END OF BLOCK #10 ---

		FLOW; TARGET BLOCK #11


		--- BLOCK #11 121-122, warpins: 2 ---
		--- END OF BLOCK #11 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #9


		--- BLOCK #12 123-124, warpins: 1 ---
		return 
		--- END OF BLOCK #12 ---



	end

	refush()
	--- END OF BLOCK #9 ---

	slot4 = if g_data.guild:isPresident()

	 then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #10 239-311, warpins: 1 ---
	local editbtn, savebtn = nil
	editbtn = an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-16, warpins: 1 ---
		sound.playSound("103")
		refush(true)
		editbtn:hide()
		savebtn:show()

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/bjgg.png")
	}):add2(parent):anchor(0.5, 0.5):pos(442, -22)
	savebtn = an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-20, warpins: 1 ---
		sound.playSound("103")
		refush(false)
		savebtn:hide()
		editbtn:show()

		local notice = ""

		--- END OF BLOCK #0 ---

		for i, v in ipairs(strs)


		LOOP BLOCK #1
		GO OUT TO BLOCK #3


		--- BLOCK #1 21-31, warpins: 1 ---
		local v = string.gsub(v, "\r\n", "")
		notice = notice .. v .. "\r\n"

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 32-33, warpins: 2 ---
		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #3 34-45, warpins: 1 ---
		print(notice)
		net.send({
			CM_GILD_NOTICE,
			tag = 1
		}, {
			notice
		})

		return 
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/bcgg.png")
	}):add2(parent):anchor(0.5, 0.5):pos(442, -22)

	savebtn.hide(savebtn)

	return 

	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 312-318, warpins: 1 ---
	--- END OF BLOCK #11 ---

	slot4 = if not g_data.guild:isVicePresident()
	 then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #13
	end


	--- BLOCK #12 319-325, warpins: 1 ---
	--- END OF BLOCK #12 ---

	slot4 = if g_data.guild:isLeader()
	 then
	JUMP TO BLOCK #13
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #13 326-358, warpins: 2 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-11, warpins: 1 ---
		sound.playSound("103")
		--- END OF BLOCK #0 ---

		slot0 = if g_data.guild:isPresident()
		 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 12-18, warpins: 1 ---
		main_scene.ui:tip("ÄãÊÇÐÐ»á»á³¤£¬²»¿ÉÍË³ö")

		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 19-25, warpins: 1 ---
		an.newMsgbox("ÄúÈ·¶¨ÒªÍË³öÐÐ»áÂð£¿\n¶Ó³¤ÍË³öÐÐ»á½«´øÁìÕ½¶ÓÖÐËùÓÐ³ÉÔ±ÍË³öÐÐ»á", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-8, warpins: 1 ---
			net.send({
				CM_GILD_EXIT
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 9-9, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			hasCancel = true
		})

		return 
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 26-26, warpins: 2 ---
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/tchh.png")
	}):add2(parent):anchor(0.5, 0.5):pos(442, -22)
	--- END OF BLOCK #13 ---

	FLOW; TARGET BLOCK #14


	--- BLOCK #14 359-360, warpins: 3 ---
	--- END OF BLOCK #14 ---



end
guild.sortOnline = function (self, list)
	--- BLOCK #0 1-7, warpins: 1 ---
	local tmpList = {}

	function insertTable(data)
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		for i, v in ipairs(tmpList)

		LOOP BLOCK #1
		GO OUT TO BLOCK #6


		--- BLOCK #1 5-14, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if v.get(v, "status")
		 < data.get(data, "status")
		 then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 15-22, warpins: 1 ---
		table.insert(tmpList, i, data)

		return 

		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #5


		--- BLOCK #3 23-26, warpins: 1 ---
		--- END OF BLOCK #3 ---

		if i == #tmpList then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 27-32, warpins: 1 ---
		tmpList[#tmpList + 1] = data

		return 
		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 33-34, warpins: 4 ---
		--- END OF BLOCK #5 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #6 35-35, warpins: 1 ---
		return 
		--- END OF BLOCK #6 ---



	end

	--- END OF BLOCK #0 ---

	for i, v in ipairs(list)


	LOOP BLOCK #1
	GO OUT TO BLOCK #5


	--- BLOCK #1 8-9, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if i == 1 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 10-11, warpins: 1 ---
	tmpList[1] = v

	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #3 12-14, warpins: 1 ---
	insertTable(v)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 15-16, warpins: 3 ---
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #5 17-18, warpins: 1 ---
	return tmpList
	--- END OF BLOCK #5 ---



end
guild.sortOnlineTwo = function (self, list)
	--- BLOCK #0 1-7, warpins: 1 ---
	local tmpList = {}

	function insertTable(data)
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		for i, v in ipairs(tmpList)

		LOOP BLOCK #1
		GO OUT TO BLOCK #6


		--- BLOCK #1 5-14, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if data.get(data, "status")
		 <= v.get(v, "status")
		 then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 15-22, warpins: 1 ---
		table.insert(tmpList, i, data)

		return 

		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #5


		--- BLOCK #3 23-26, warpins: 1 ---
		--- END OF BLOCK #3 ---

		if i == #tmpList then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 27-33, warpins: 1 ---
		table.insert(tmpList, 1, data)

		return 
		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 34-35, warpins: 4 ---
		--- END OF BLOCK #5 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #6 36-36, warpins: 1 ---
		return 
		--- END OF BLOCK #6 ---



	end

	--- END OF BLOCK #0 ---

	for i, v in ipairs(list)


	LOOP BLOCK #1
	GO OUT TO BLOCK #5


	--- BLOCK #1 8-9, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if i == 1 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 10-11, warpins: 1 ---
	tmpList[1] = v

	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #3 12-14, warpins: 1 ---
	insertTable(v)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 15-16, warpins: 3 ---
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #5 17-18, warpins: 1 ---
	return tmpList
	--- END OF BLOCK #5 ---



end
guild.sortString = function (self, list, order)
	--- BLOCK #0 1-8, warpins: 1 ---
	local tmpList = {}
	local value1, value2 = nil

	function insertTable(data)
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		for i, v in ipairs(tmpList)


		LOOP BLOCK #1
		GO OUT TO BLOCK #11


		--- BLOCK #1 5-23, warpins: 1 ---
		value1 = string.len(data.get(data, "title"))
		value2 = string.len(v.get(v, "title"))
		--- END OF BLOCK #1 ---

		slot6 = if order then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 24-27, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if value2 > value1 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #3 28-31, warpins: 2 ---
		--- END OF BLOCK #3 ---

		if value1 >= value2 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 32-33, warpins: 1 ---
		slot6 = false
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #5 34-34, warpins: 2 ---
		local ret = true

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 35-36, warpins: 2 ---
		--- END OF BLOCK #6 ---

		slot6 = if ret then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 37-44, warpins: 1 ---
		table.insert(tmpList, i, data)

		return 

		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #8 45-48, warpins: 1 ---
		--- END OF BLOCK #8 ---

		if i == #tmpList then
		JUMP TO BLOCK #9
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #9 49-54, warpins: 1 ---
		tmpList[#tmpList + 1] = data

		return 
		--- END OF BLOCK #9 ---

		FLOW; TARGET BLOCK #10


		--- BLOCK #10 55-56, warpins: 4 ---
		--- END OF BLOCK #10 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #11 57-57, warpins: 1 ---
		return 
		--- END OF BLOCK #11 ---



	end

	--- END OF BLOCK #0 ---

	for i, v in ipairs(list)


	LOOP BLOCK #1
	GO OUT TO BLOCK #5


	--- BLOCK #1 9-10, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if i == 1 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 11-12, warpins: 1 ---
	tmpList[1] = v

	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #3 13-15, warpins: 1 ---
	insertTable(v)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 16-17, warpins: 3 ---
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #5 18-19, warpins: 1 ---
	return tmpList
	--- END OF BLOCK #5 ---



end
guild.sortName = function (self, list, order)
	--- BLOCK #0 1-8, warpins: 1 ---
	local tmpList = {}
	local value1, value2 = nil

	function insertTable(data)
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		for i, v in ipairs(tmpList)


		LOOP BLOCK #1
		GO OUT TO BLOCK #11


		--- BLOCK #1 5-23, warpins: 1 ---
		value1 = string.len(data.get(data, "name"))
		value2 = string.len(v.get(v, "name"))
		--- END OF BLOCK #1 ---

		slot6 = if order then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 24-27, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if value2 > value1 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #3 28-31, warpins: 2 ---
		--- END OF BLOCK #3 ---

		if value1 >= value2 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 32-33, warpins: 1 ---
		slot6 = false
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #5 34-34, warpins: 2 ---
		local ret = true

		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 35-36, warpins: 2 ---
		--- END OF BLOCK #6 ---

		slot6 = if ret then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 37-44, warpins: 1 ---
		table.insert(tmpList, i, data)

		return 

		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #8 45-48, warpins: 1 ---
		--- END OF BLOCK #8 ---

		if i == #tmpList then
		JUMP TO BLOCK #9
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #9 49-54, warpins: 1 ---
		tmpList[#tmpList + 1] = data

		return 
		--- END OF BLOCK #9 ---

		FLOW; TARGET BLOCK #10


		--- BLOCK #10 55-56, warpins: 4 ---
		--- END OF BLOCK #10 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #11 57-57, warpins: 1 ---
		return 
		--- END OF BLOCK #11 ---



	end

	--- END OF BLOCK #0 ---

	for i, v in ipairs(list)


	LOOP BLOCK #1
	GO OUT TO BLOCK #5


	--- BLOCK #1 9-10, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if i == 1 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 11-12, warpins: 1 ---
	tmpList[1] = v

	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #3 13-15, warpins: 1 ---
	insertTable(v)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 16-17, warpins: 3 ---
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #5 18-19, warpins: 1 ---
	return tmpList
	--- END OF BLOCK #5 ---



end
guild.sortLevel = function (self, list, order)
	--- BLOCK #0 1-8, warpins: 1 ---
	local tmpList = {}
	local value1, value2 = nil

	function insertTable(data)
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		for i, v in ipairs(tmpList)


		LOOP BLOCK #1
		GO OUT TO BLOCK #11


		--- BLOCK #1 5-17, warpins: 1 ---
		value1 = data.get(data, "level")
		value2 = v.get(v, "level")

		--- END OF BLOCK #1 ---

		slot6 = if order then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #2 18-21, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if value2 <= value1 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 22-29, warpins: 1 ---
		table.insert(tmpList, i, data)

		return 

		--- END OF BLOCK #3 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #4 30-33, warpins: 1 ---
		--- END OF BLOCK #4 ---

		if i == #tmpList then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #5 34-40, warpins: 1 ---
		tmpList[#tmpList + 1] = data

		return 

		--- END OF BLOCK #5 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #6 41-44, warpins: 1 ---
		--- END OF BLOCK #6 ---

		if value1 < value2 then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 45-52, warpins: 1 ---
		table.insert(tmpList, i, data)

		return 

		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #8 53-56, warpins: 1 ---
		--- END OF BLOCK #8 ---

		if i == #tmpList then
		JUMP TO BLOCK #9
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #9 57-63, warpins: 1 ---
		table.insert(tmpList, 1, data)

		return 
		--- END OF BLOCK #9 ---

		FLOW; TARGET BLOCK #10


		--- BLOCK #10 64-65, warpins: 7 ---
		--- END OF BLOCK #10 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #11 66-66, warpins: 1 ---
		return 
		--- END OF BLOCK #11 ---



	end

	--- END OF BLOCK #0 ---

	for i, v in ipairs(list)


	LOOP BLOCK #1
	GO OUT TO BLOCK #5


	--- BLOCK #1 9-10, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if i == 1 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 11-12, warpins: 1 ---
	tmpList[1] = v

	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #3 13-15, warpins: 1 ---
	insertTable(v)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 16-17, warpins: 3 ---
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #5 18-19, warpins: 1 ---
	return tmpList
	--- END OF BLOCK #5 ---



end
guild.sortJob = function (self, list, order)
	--- BLOCK #0 1-8, warpins: 1 ---
	local tmpList = {}
	local value1, value2 = nil

	function insertTable(data)
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		for i, v in ipairs(tmpList)


		LOOP BLOCK #1
		GO OUT TO BLOCK #11


		--- BLOCK #1 5-17, warpins: 1 ---
		value1 = data.get(data, "job")
		value2 = v.get(v, "job")

		--- END OF BLOCK #1 ---

		slot6 = if order then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #2 18-21, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if value1 <= value2 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 22-29, warpins: 1 ---
		table.insert(tmpList, i, data)

		return 

		--- END OF BLOCK #3 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #4 30-33, warpins: 1 ---
		--- END OF BLOCK #4 ---

		if i == #tmpList then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #5 34-40, warpins: 1 ---
		tmpList[#tmpList + 1] = data

		return 

		--- END OF BLOCK #5 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #6 41-44, warpins: 1 ---
		--- END OF BLOCK #6 ---

		if value2 <= value1 then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 45-52, warpins: 1 ---
		table.insert(tmpList, i, data)

		return 

		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #8 53-56, warpins: 1 ---
		--- END OF BLOCK #8 ---

		if i == #tmpList then
		JUMP TO BLOCK #9
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #9 57-63, warpins: 1 ---
		table.insert(tmpList, 1, data)

		return 
		--- END OF BLOCK #9 ---

		FLOW; TARGET BLOCK #10


		--- BLOCK #10 64-65, warpins: 7 ---
		--- END OF BLOCK #10 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #11 66-66, warpins: 1 ---
		return 
		--- END OF BLOCK #11 ---



	end

	--- END OF BLOCK #0 ---

	for i, v in ipairs(list)


	LOOP BLOCK #1
	GO OUT TO BLOCK #5


	--- BLOCK #1 9-10, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if i == 1 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 11-12, warpins: 1 ---
	tmpList[1] = v

	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #3 13-15, warpins: 1 ---
	insertTable(v)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 16-17, warpins: 3 ---
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #5 18-19, warpins: 1 ---
	return tmpList
	--- END OF BLOCK #5 ---



end
guild.sortSex = function (self, list, order)
	--- BLOCK #0 1-8, warpins: 1 ---
	local tmpList = {}
	local value1, value2 = nil

	function insertTable(data)
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		for i, v in ipairs(tmpList)


		LOOP BLOCK #1
		GO OUT TO BLOCK #11


		--- BLOCK #1 5-17, warpins: 1 ---
		value1 = data.get(data, "six")
		value2 = v.get(v, "six")

		--- END OF BLOCK #1 ---

		slot6 = if order then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #2 18-21, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if value1 <= value2 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 22-29, warpins: 1 ---
		table.insert(tmpList, i, data)

		return 

		--- END OF BLOCK #3 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #4 30-33, warpins: 1 ---
		--- END OF BLOCK #4 ---

		if i == #tmpList then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #5 34-40, warpins: 1 ---
		tmpList[#tmpList + 1] = data

		return 

		--- END OF BLOCK #5 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #6 41-44, warpins: 1 ---
		--- END OF BLOCK #6 ---

		if value2 <= value1 then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 45-52, warpins: 1 ---
		table.insert(tmpList, i, data)

		return 

		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #8 53-56, warpins: 1 ---
		--- END OF BLOCK #8 ---

		if i == #tmpList then
		JUMP TO BLOCK #9
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #9 57-63, warpins: 1 ---
		table.insert(tmpList, 1, data)

		return 
		--- END OF BLOCK #9 ---

		FLOW; TARGET BLOCK #10


		--- BLOCK #10 64-65, warpins: 7 ---
		--- END OF BLOCK #10 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #11 66-66, warpins: 1 ---
		return 
		--- END OF BLOCK #11 ---



	end

	--- END OF BLOCK #0 ---

	for i, v in ipairs(list)


	LOOP BLOCK #1
	GO OUT TO BLOCK #5


	--- BLOCK #1 9-10, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if i == 1 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 11-12, warpins: 1 ---
	tmpList[1] = v

	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #3 13-15, warpins: 1 ---
	insertTable(v)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 16-17, warpins: 3 ---
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #5 18-19, warpins: 1 ---
	return tmpList
	--- END OF BLOCK #5 ---



end
guild.sortTitle = function (self, list, order)
	--- BLOCK #0 1-8, warpins: 1 ---
	local tmpList = {}
	local value1, value2 = nil

	function insertTable(data)
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		for i, v in ipairs(tmpList)


		LOOP BLOCK #1
		GO OUT TO BLOCK #11


		--- BLOCK #1 5-17, warpins: 1 ---
		value1 = data.get(data, "position")
		value2 = v.get(v, "position")

		--- END OF BLOCK #1 ---

		slot6 = if order then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #2 18-21, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if value2 <= value1 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 22-29, warpins: 1 ---
		table.insert(tmpList, i, data)

		return 

		--- END OF BLOCK #3 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #4 30-33, warpins: 1 ---
		--- END OF BLOCK #4 ---

		if i == #tmpList then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #5 34-40, warpins: 1 ---
		tmpList[#tmpList + 1] = data

		return 

		--- END OF BLOCK #5 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #6 41-44, warpins: 1 ---
		--- END OF BLOCK #6 ---

		if value1 < value2 then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 45-52, warpins: 1 ---
		table.insert(tmpList, i, data)

		return 

		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #10


		--- BLOCK #8 53-56, warpins: 1 ---
		--- END OF BLOCK #8 ---

		if i == #tmpList then
		JUMP TO BLOCK #9
		else
		JUMP TO BLOCK #10
		end


		--- BLOCK #9 57-63, warpins: 1 ---
		table.insert(tmpList, 1, data)

		return 
		--- END OF BLOCK #9 ---

		FLOW; TARGET BLOCK #10


		--- BLOCK #10 64-65, warpins: 7 ---
		--- END OF BLOCK #10 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #0


		--- BLOCK #11 66-66, warpins: 1 ---
		return 
		--- END OF BLOCK #11 ---



	end

	--- END OF BLOCK #0 ---

	for i, v in ipairs(list)


	LOOP BLOCK #1
	GO OUT TO BLOCK #5


	--- BLOCK #1 9-10, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if i == 1 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 11-12, warpins: 1 ---
	tmpList[1] = v

	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #3 13-15, warpins: 1 ---
	insertTable(v)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 16-17, warpins: 3 ---
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #5 18-19, warpins: 1 ---
	return tmpList
	--- END OF BLOCK #5 ---



end
guild.showSubMem = function (self, parent)
	--- BLOCK #0 1-8, warpins: 1 ---
	local width = {
		150,
		80,
		80,
		80,
		90
	}
	local h = 42
	local Titlelabel = {
		"½ÇÉ«Ãû",
		"µÈ¼¶",
		"Ö°Òµ",
		"ÐÔ±ð",
		"Ö°Îñ"
	}
	--- END OF BLOCK #0 ---

	slot5 = if not g_data.guild.guildMems then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 9-9, warpins: 1 ---
	local dataList = {}
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 10-29, warpins: 2 ---
	local selectPic, selectData, infoView = nil

	local function creteOrder(dataList)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot1 = if infoView then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-7, warpins: 1 ---
		infoView:removeSelf()

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 8-36, warpins: 2 ---
		infoView = an.newScroll(7, 8, 480, 292):add2(parent)

		infoView:setScrollSize(480, math.max(292, #dataList*h))

		local posTitle = {
			"",
			"¸±¶Ó³¤",
			"¶Ó³¤",
			"¸±»á³¤",
			"»á³¤"
		}

		--- END OF BLOCK #2 ---

		for i, v in ipairs(dataList)


		LOOP BLOCK #3
		GO OUT TO BLOCK #20


		--- BLOCK #3 37-73, warpins: 1 ---
		local info = {}
		local cell = display.newNode():size(480, h):anchor(0, 0):pos(0, infoView:getScrollSize().height - i*h):add2(infoView)
		slot9 = display.newScale9Sprite
		slot10 = res.getframe2
		--- END OF BLOCK #3 ---

		if i%2 == 0 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 74-75, warpins: 1 ---
		slot11 = "pic/scale/scale18.png"
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #5 76-76, warpins: 1 ---
		slot11 = "pic/scale/scale19.png"
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 77-101, warpins: 2 ---
		cell.scale = slot9(slot10(slot11), 0, 0, cc.size(480, h)):anchor(0, 0):add2(cell)

		--- END OF BLOCK #6 ---

		if v.get(v, "status")
		 == 1 then
		JUMP TO BLOCK #7
		else
		JUMP TO BLOCK #8
		end


		--- BLOCK #7 102-109, warpins: 1 ---
		--- END OF BLOCK #7 ---

		slot9 = if not cc.c3b(255, 255, 255)

		 then
		JUMP TO BLOCK #8
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #8 110-112, warpins: 2 ---
		local tmpColor = def.colors.cellOffline
		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 113-224, warpins: 2 ---
		local label = g_data.player:fixStrLen(v.get(v, "name"), 8)
		info[#info + 1] = an.newLabel(label, 18, 1, {
			color = tmpColor
		}):add2(cell, 1):anchor(0.5, 0.5):pos(75, h*0.5)
		label = v.get(v, "level")
		info[#info + 1] = an.newLabel(label, 18, 1, {
			color = tmpColor
		}):add2(cell, 1):anchor(0.5, 0.5):pos(190, h*0.5)
		label = g_data.player:getOtherJobStr(v.get(v, "job"))
		info[#info + 1] = an.newLabel(label, 18, 1, {
			color = tmpColor
		}):add2(cell, 1):anchor(0.5, 0.5):pos(270, h*0.5)

		--- END OF BLOCK #9 ---

		if v.get(v, "six")

		 == 0 then
		JUMP TO BLOCK #10
		else
		JUMP TO BLOCK #11
		end


		--- BLOCK #10 225-226, warpins: 1 ---
		label = "ÄÐ"
		--- END OF BLOCK #10 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #12


		--- BLOCK #11 227-227, warpins: 1 ---
		label = "Å®"
		--- END OF BLOCK #11 ---

		FLOW; TARGET BLOCK #12


		--- BLOCK #12 228-262, warpins: 2 ---
		info[#info + 1] = an.newLabel(label, 18, 1, {
			color = tmpColor
		}):add2(cell, 1):anchor(0.5, 0.5):pos(350, h*0.5)

		--- END OF BLOCK #12 ---

		slot10 = if not posTitle[v.get(v, "position")

		 + 1] then
		JUMP TO BLOCK #13
		else
		JUMP TO BLOCK #14
		end


		--- BLOCK #13 263-263, warpins: 1 ---
		label = ""
		--- END OF BLOCK #13 ---

		FLOW; TARGET BLOCK #14


		--- BLOCK #14 264-306, warpins: 2 ---
		info[#info + 1] = an.newLabel(label, 18, 1, {
			color = tmpColor
		}):add2(cell, 1):anchor(0.5, 0.5):pos(430, h*0.5)

		cell.setTouchEnabled(cell, true)
		cell.setTouchSwallowEnabled(cell, false)
		cell.addNodeEventListener(cell, cc.NODE_TOUCH_EVENT, function (event)
			--- BLOCK #0 1-3, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if event.name == "began" then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 4-9, warpins: 1 ---
			cell.offsetBeginY = event.y

			return true

			--- END OF BLOCK #1 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #14


			--- BLOCK #2 10-12, warpins: 1 ---
			--- END OF BLOCK #2 ---

			if event.name == "ended" then
			JUMP TO BLOCK #3
			else
			JUMP TO BLOCK #14
			end


			--- BLOCK #3 13-23, warpins: 1 ---
			local offsetY = event.y - cell.offsetBeginY

			--- END OF BLOCK #3 ---

			if math.abs(offsetY)
			 <= 5 then
			JUMP TO BLOCK #4
			else
			JUMP TO BLOCK #14
			end


			--- BLOCK #4 24-26, warpins: 1 ---
			--- END OF BLOCK #4 ---

			slot2 = if selectPic then
			JUMP TO BLOCK #5
			else
			JUMP TO BLOCK #11
			end


			--- BLOCK #5 27-31, warpins: 1 ---
			--- END OF BLOCK #5 ---

			for i, v in ipairs(selectPic.info)


			LOOP BLOCK #6
			GO OUT TO BLOCK #10


			--- BLOCK #6 32-37, warpins: 1 ---
			slot8 = v
			slot7 = v.setColor
			--- END OF BLOCK #6 ---

			slot9 = if not selectPic.color then
			JUMP TO BLOCK #7
			else
			JUMP TO BLOCK #8
			end


			--- BLOCK #7 38-40, warpins: 1 ---
			slot9 = def.colors.cellNor

			--- END OF BLOCK #7 ---

			FLOW; TARGET BLOCK #8


			--- BLOCK #8 41-41, warpins: 2 ---
			slot7(slot8, slot9)
			--- END OF BLOCK #8 ---

			FLOW; TARGET BLOCK #9


			--- BLOCK #9 42-43, warpins: 2 ---
			--- END OF BLOCK #9 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #5


			--- BLOCK #10 44-48, warpins: 1 ---
			selectPic:removeSelf()

			selectPic = nil
			--- END OF BLOCK #10 ---

			FLOW; TARGET BLOCK #11


			--- BLOCK #11 49-89, warpins: 2 ---
			selectData = v
			selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(478, h)):anchor(0, 0):pos(0, 0):add2(cell)
			selectPic.info = info
			selectPic.color = tmpColor

			--- END OF BLOCK #11 ---

			for i, v in ipairs(info)

			LOOP BLOCK #12
			GO OUT TO BLOCK #14


			--- BLOCK #12 90-95, warpins: 1 ---
			v.setColor(v, def.colors.cellSel)

			--- END OF BLOCK #12 ---

			FLOW; TARGET BLOCK #13


			--- BLOCK #13 96-97, warpins: 2 ---
			--- END OF BLOCK #13 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #11


			--- BLOCK #14 98-98, warpins: 4 ---
			return 
			--- END OF BLOCK #14 ---



		end)

		--- END OF BLOCK #14 ---

		if i == 1 then
		JUMP TO BLOCK #15
		else
		JUMP TO BLOCK #18
		end


		--- BLOCK #15 307-344, warpins: 1 ---
		selectData = v
		selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(478, h)):anchor(0, 0):pos(0, 0):add2(cell)
		selectPic.info = info
		selectPic.color = tmpColor

		--- END OF BLOCK #15 ---

		for i, v in ipairs(info)

		LOOP BLOCK #16
		GO OUT TO BLOCK #18


		--- BLOCK #16 345-350, warpins: 1 ---
		v.setColor(v, def.colors.cellSel)

		--- END OF BLOCK #16 ---

		FLOW; TARGET BLOCK #17


		--- BLOCK #17 351-352, warpins: 2 ---
		--- END OF BLOCK #17 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #15


		--- BLOCK #18 353-356, warpins: 2 ---
		v.info = info
		v.cell = cell

		--- END OF BLOCK #18 ---

		FLOW; TARGET BLOCK #19


		--- BLOCK #19 357-358, warpins: 2 ---
		--- END OF BLOCK #19 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #2


		--- BLOCK #20 359-359, warpins: 1 ---
		return 
		--- END OF BLOCK #20 ---



	end

	local func = {}
	func[1] = function (data, value)
		--- BLOCK #0 1-6, warpins: 1 ---
		return self:sortName(data, value)
		--- END OF BLOCK #0 ---



	end
	func[2] = function (data, value)
		--- BLOCK #0 1-6, warpins: 1 ---
		return self:sortLevel(data, value)
		--- END OF BLOCK #0 ---



	end
	func[3] = function (data, value)
		--- BLOCK #0 1-6, warpins: 1 ---
		return self:sortJob(data, value)
		--- END OF BLOCK #0 ---



	end
	func[4] = function (data, value)
		--- BLOCK #0 1-6, warpins: 1 ---
		return self:sortSex(data, value)
		--- END OF BLOCK #0 ---



	end
	func[5] = function (data, value)
		--- BLOCK #0 1-6, warpins: 1 ---
		return self:sortTitle(data, value)
		--- END OF BLOCK #0 ---



	end
	local posOffset = 5
	local sortType = 1
	local sortCount = 0

	--- END OF BLOCK #2 ---

	for i, v in ipairs(width)


	LOOP BLOCK #3
	GO OUT TO BLOCK #5


	--- BLOCK #3 30-97, warpins: 1 ---
	local back = display.newScale9Sprite(res.getframe2("pic/scale/scale15.png"), 0, 0, cc.size(v + 2, 42)):anchor(0.5, 0.5):pos(posOffset + v*0.5, parent.geth(parent) - 23):add2(parent)
	Titlelabel[i] = an.newLabel(Titlelabel[i], 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(posOffset + v*0.5, parent.geth(parent) - 23):add2(parent)
	posOffset = posOffset + v

	back.enableClick(back, function ()
		--- BLOCK #0 1-4, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if sortType == i then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #1 5-15, warpins: 1 ---
		sortCount = sortCount + 1
		slot0 = func[i]
		slot1 = dataList
		--- END OF BLOCK #1 ---

		if sortCount%2 ~= 0 then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 16-17, warpins: 1 ---
		slot2 = false
		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #3 18-18, warpins: 1 ---
		slot2 = true
		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 19-21, warpins: 2 ---
		dataList = slot0(slot1, slot2)
		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #6


		--- BLOCK #5 22-29, warpins: 1 ---
		sortCount = 0
		dataList = func[i](dataList, true)
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 30-41, warpins: 2 ---
		dataList = self:sortOnline(dataList)

		creteOrder(dataList)

		sortType = i

		return 
		--- END OF BLOCK #6 ---



	end)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 98-99, warpins: 2 ---
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #2


	--- BLOCK #5 100-121, warpins: 1 ---
	dataList = self.sortName(self, dataList, true)
	dataList = self.sortOnline(self, dataList)

	creteOrder(dataList)

	local posMux = 0

	--- END OF BLOCK #5 ---

	slot15 = if g_data.guild:isPresident()
	 then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 122-222, warpins: 1 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-15, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if selectData:get("position")
		 ~= 2 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 16-22, warpins: 1 ---
		main_scene.ui:tip("·Ç¶Ó³¤²»ÄÜÈÎÃüÎª¸±»á³¤")

		return 

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 23-36, warpins: 1 ---
		an.newMsgbox("ÄúÈ·¶¨Éè " .. selectData:get("name") .. " Îª¸±»á³¤Âð£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-18, warpins: 1 ---
			net.send({
				CM_GILD_APPOINT_VICE_PRESIDENT
			}, nil, {
				{
					"ID",
					selectData:get("ID")
				}
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 19-19, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})

		return 
		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 37-37, warpins: 2 ---
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 38-38, warpins: 2 ---
		--- END OF BLOCK #6 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/sfhz.png")
	}):add2(parent):anchor(0.5, 0.5):pos(442, -22)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-15, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if selectData:get("position")
		 ~= 2 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #3 16-22, warpins: 1 ---
		--- END OF BLOCK #3 ---

		if selectData:get("position")
		 ~= 3 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 23-29, warpins: 1 ---
		main_scene.ui:tip("Ö»ÄÜÈÎÃüÕ½¶Ó¶Ó³¤»òÐÐ»á¸±»á³¤Îª»á³¤")

		return 

		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 30-36, warpins: 2 ---
		an.newMsgbox("ÄúÈ·¶¨×ªÈÃ»á³¤Âð£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-18, warpins: 1 ---
			net.send({
				CM_GILD_TRANSFER_PRESIDENT
			}, nil, {
				{
					"ID",
					selectData:get("ID")
				}
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 19-19, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})

		return 
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 37-37, warpins: 2 ---
		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 38-38, warpins: 2 ---
		--- END OF BLOCK #7 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/zrhz.png")
	}):add2(parent):anchor(0.5, 0.5):pos(342, -22)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-15, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if selectData:get("position")
		 ~= 3 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #4
		end


		--- BLOCK #3 16-22, warpins: 1 ---
		main_scene.ui:tip("·Ç¸±»á³¤²»ÄÜÐ¶ÈÎ")

		return 

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 23-36, warpins: 1 ---
		an.newMsgbox("ÄúÈ·¶¨Ð¶ÈÎ " .. selectData:get("name") .. " ¸±»á³¤Ö°ÎñÂð£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-18, warpins: 1 ---
			net.send({
				CM_GILD_DISMISS_VICECAPTAIN
			}, nil, {
				{
					"ID",
					selectData:get("ID")
				}
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 19-19, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})

		return 
		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 37-37, warpins: 2 ---
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 38-38, warpins: 2 ---
		--- END OF BLOCK #6 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/xr.png")
	}):add2(parent):anchor(0.5, 0.5):pos(242, -22)

	posMux = 3

	--- END OF BLOCK #6 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #7 223-257, warpins: 1 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-11, warpins: 1 ---
		sound.playSound("103")
		an.newMsgbox("ÄúÈ·¶¨Ð¶ÈÎÂð£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-8, warpins: 1 ---
			net.send({
				CM_GILD_VICECAPTAIN_STEPDOWN
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 9-9, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/xr.png")
	}):add2(parent):anchor(0.5, 0.5):pos(posMux*100 - 442, -22)

	posMux = posMux + 1
	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 258-294, warpins: 2 ---
	local menuPos = posMux

	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-23, warpins: 2 ---
		self:showMenu(cc.p(menuPos*100 - 442 + 82, 58), "¸ü¶à²Ù×÷", selectData)

		return 
		--- END OF BLOCK #2 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/gdcz.png")
	}):add2(parent):anchor(0.5, 0.5):pos(posMux*100 - 442, -22)

	return 
	--- END OF BLOCK #8 ---



end
guild.showSubClaninfo = function (self, parent)
	--- BLOCK #0 1-7, warpins: 1 ---
	local width = {
		160,
		160,
		160
	}
	local Titlelabel = {
		"Õ½¶ÓÃû",
		"¶Ó³¤Ãû",
		"ÈËÊý"
	}
	local posOffset = 5

	--- END OF BLOCK #0 ---

	for i, v in ipairs(width)

	LOOP BLOCK #1
	GO OUT TO BLOCK #3


	--- BLOCK #1 8-70, warpins: 1 ---
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png"), 0, 0, cc.size(v + 2, 42)):anchor(0.5, 0.5):pos(posOffset + v*0.5, parent.geth(parent) - 23):add2(parent)

	Titlelabel[i] = an.newLabel(Titlelabel[i], 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(posOffset + v*0.5, parent.geth(parent) - 23):add2(parent)
	posOffset = posOffset + v
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 71-72, warpins: 2 ---
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #3 73-77, warpins: 1 ---
	--- END OF BLOCK #3 ---

	slot5 = if not g_data.guild.guildcorpsList then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 78-78, warpins: 1 ---
	local dataList = {}
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 79-105, warpins: 2 ---
	local infoView = an.newScroll(7, 8, 480, 292):add2(parent)
	local h = 42

	infoView.setScrollSize(infoView, 596, math.max(286, #dataList*h))

	local selectPic, selectData = nil

	--- END OF BLOCK #5 ---

	for i, v in ipairs(dataList)


	LOOP BLOCK #6
	GO OUT TO BLOCK #15


	--- BLOCK #6 106-113, warpins: 1 ---
	local info = {}
	slot16 = display.newScale9Sprite
	slot17 = res.getframe2
	--- END OF BLOCK #6 ---

	if i%2 == 0 then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 114-115, warpins: 1 ---
	slot18 = "pic/scale/scale18.png"
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #9


	--- BLOCK #8 116-116, warpins: 1 ---
	slot18 = "pic/scale/scale19.png"
	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 117-270, warpins: 2 ---
	local cell = slot16(slot17(slot18), 0, 0, cc.size(480, h)):anchor(0, 0):pos(0, infoView.getScrollSize(infoView).height - i*h):add2(infoView)
	local label = g_data.player:fixStrLen(v.get(v, "corpsName"), 8)
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(80, h*0.5)
	label = g_data.player:fixStrLen(v.get(v, "captainName"), 8)
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(240, h*0.5)
	label = v.get(v, "memberCount")
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(395, h*0.5)

	cell.setTouchEnabled(cell, true)
	cell.setTouchSwallowEnabled(cell, false)
	cell.addNodeEventListener(cell, cc.NODE_TOUCH_EVENT, function (event)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if event.name == "began" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-9, warpins: 1 ---
		cell.offsetBeginY = event.y

		return true

		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #12


		--- BLOCK #2 10-12, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if event.name == "ended" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #12
		end


		--- BLOCK #3 13-23, warpins: 1 ---
		local offsetY = event.y - cell.offsetBeginY

		--- END OF BLOCK #3 ---

		if math.abs(offsetY)
		 <= 5 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #12
		end


		--- BLOCK #4 24-26, warpins: 1 ---
		--- END OF BLOCK #4 ---

		slot2 = if selectPic then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #5 27-31, warpins: 1 ---
		--- END OF BLOCK #5 ---

		for i, v in ipairs(selectPic.info)

		LOOP BLOCK #6
		GO OUT TO BLOCK #8


		--- BLOCK #6 32-37, warpins: 1 ---
		v.setColor(v, def.colors.cellNor)
		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 38-39, warpins: 2 ---
		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #5


		--- BLOCK #8 40-44, warpins: 1 ---
		selectPic:removeSelf()

		selectPic = nil
		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 45-82, warpins: 2 ---
		selectData = v
		selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(478, h)):anchor(0, 0):pos(0, 0):add2(cell)
		selectPic.info = info

		--- END OF BLOCK #9 ---

		for i, v in ipairs(info)

		LOOP BLOCK #10
		GO OUT TO BLOCK #12


		--- BLOCK #10 83-88, warpins: 1 ---
		v.setColor(v, def.colors.cellSel)

		--- END OF BLOCK #10 ---

		FLOW; TARGET BLOCK #11


		--- BLOCK #11 89-90, warpins: 2 ---
		--- END OF BLOCK #11 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #9


		--- BLOCK #12 91-91, warpins: 4 ---
		return 
		--- END OF BLOCK #12 ---



	end)

	--- END OF BLOCK #9 ---

	if i == 1 then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #13
	end


	--- BLOCK #10 271-305, warpins: 1 ---
	selectData = v
	selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(478, h)):anchor(0, 0):pos(0, 0):add2(cell)
	selectPic.info = info

	--- END OF BLOCK #10 ---

	for i, v in ipairs(info)

	LOOP BLOCK #11
	GO OUT TO BLOCK #13


	--- BLOCK #11 306-311, warpins: 1 ---
	v.setColor(v, def.colors.cellSel)

	--- END OF BLOCK #11 ---

	FLOW; TARGET BLOCK #12


	--- BLOCK #12 312-313, warpins: 2 ---
	--- END OF BLOCK #12 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #13 314-315, warpins: 2 ---
	--- END OF BLOCK #13 ---

	FLOW; TARGET BLOCK #14


	--- BLOCK #14 316-317, warpins: 2 ---
	--- END OF BLOCK #14 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #5


	--- BLOCK #15 318-325, warpins: 1 ---
	local posMux = 0

	--- END OF BLOCK #15 ---

	slot11 = if not g_data.guild:isPresident()
	 then
	JUMP TO BLOCK #16
	else
	JUMP TO BLOCK #17
	end


	--- BLOCK #16 326-332, warpins: 1 ---
	--- END OF BLOCK #16 ---

	slot11 = if g_data.guild:isVicePresident()
	 then
	JUMP TO BLOCK #17
	else
	JUMP TO BLOCK #18
	end


	--- BLOCK #17 333-366, warpins: 2 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-18, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if selectData:get("captainName")
		 == common.getPlayerName()
		 then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #3 19-25, warpins: 1 ---
		--- END OF BLOCK #3 ---

		slot0 = if g_data.guild:isPresident()
		 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 26-32, warpins: 1 ---
		main_scene.ui:tip("ÄãÊÇÕ½¶ÓÎ¨Ò»»á³¤£¬²»¿ÉÍË³ö")

		return 

		--- END OF BLOCK #4 ---

		FLOW; TARGET BLOCK #5


		--- BLOCK #5 33-46, warpins: 2 ---
		an.newMsgbox("ÄúÈ·¶¨½«Õ½¶Ó " .. selectData:get("corpsName") .. " Öð³öÐÐ»áÂð£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-18, warpins: 1 ---
			net.send({
				CM_GILD_DISMISS_CORPS
			}, nil, {
				{
					"ID",
					selectData:get("corpsID")
				}
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 19-19, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})

		return 
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 47-47, warpins: 2 ---
		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 48-48, warpins: 2 ---
		--- END OF BLOCK #7 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/zchh.png")
	}):add2(parent):anchor(0.5, 0.5):pos(442, -22)

	posMux = 1

	--- END OF BLOCK #17 ---

	FLOW; TARGET BLOCK #18


	--- BLOCK #18 367-402, warpins: 2 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-40, warpins: 2 ---
		print("selectData:get(corpsID) ", selectData:get("corpsID"), g_data.guild.clanInfo:get("corpsID"))
		net.send({
			CM_CORPS_MEMBER_LIST,
			tag = 30,
			recog = 1,
			series = 0
		}, nil, {
			{
				"ID",
				selectData:get("corpsID")
			}
		})

		return 
		--- END OF BLOCK #2 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/ckxx.png")
	}):add2(parent):anchor(0.5, 0.5):pos(posMux*100 - 442, -22)

	return 
	--- END OF BLOCK #18 ---



end
guild.showSubClanrecruit = function (self, parent)
	--- BLOCK #0 1-7, warpins: 1 ---
	local width = {
		160,
		160,
		160
	}
	local Titlelabel = {
		"Õ½¶ÓÃû",
		"¶Ó³¤Ãû",
		"ÈËÊý"
	}
	local posOffset = 5

	--- END OF BLOCK #0 ---

	for i, v in ipairs(width)

	LOOP BLOCK #1
	GO OUT TO BLOCK #3


	--- BLOCK #1 8-70, warpins: 1 ---
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png"), 0, 0, cc.size(v + 2, 42)):anchor(0.5, 0.5):pos(posOffset + v*0.5, parent.geth(parent) - 23):add2(parent)

	Titlelabel[i] = an.newLabel(Titlelabel[i], 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(posOffset + v*0.5, parent.geth(parent) - 23):add2(parent)
	posOffset = posOffset + v
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 71-72, warpins: 2 ---
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #3 73-77, warpins: 1 ---
	--- END OF BLOCK #3 ---

	slot5 = if not g_data.guild.guildQueryMem then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 78-78, warpins: 1 ---
	local dataList = {}
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 79-105, warpins: 2 ---
	local infoView = an.newScroll(7, 8, 480, 292):add2(parent)
	local h = 42

	infoView.setScrollSize(infoView, 480, math.max(292, #dataList*h))

	local selectPic, selectData = nil

	--- END OF BLOCK #5 ---

	for i, v in ipairs(dataList)


	LOOP BLOCK #6
	GO OUT TO BLOCK #15


	--- BLOCK #6 106-113, warpins: 1 ---
	local info = {}
	slot16 = display.newScale9Sprite
	slot17 = res.getframe2
	--- END OF BLOCK #6 ---

	if i%2 == 0 then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 114-115, warpins: 1 ---
	slot18 = "pic/scale/scale18.png"
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #9


	--- BLOCK #8 116-116, warpins: 1 ---
	slot18 = "pic/scale/scale19.png"
	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 117-270, warpins: 2 ---
	local cell = slot16(slot17(slot18), 0, 0, cc.size(480, h)):anchor(0, 0):pos(0, infoView.getScrollSize(infoView).height - i*h):add2(infoView)
	local label = g_data.player:fixStrLen(v.get(v, "corpsName"), 8)
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(80, h*0.5)
	label = g_data.player:fixStrLen(v.get(v, "captainName"), 8)
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(240, h*0.5)
	label = v.get(v, "memberCount")
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(395, h*0.5)

	cell.setTouchEnabled(cell, true)
	cell.setTouchSwallowEnabled(cell, false)
	cell.addNodeEventListener(cell, cc.NODE_TOUCH_EVENT, function (event)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if event.name == "began" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-9, warpins: 1 ---
		cell.offsetBeginY = event.y

		return true

		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #12


		--- BLOCK #2 10-12, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if event.name == "ended" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #12
		end


		--- BLOCK #3 13-23, warpins: 1 ---
		local offsetY = event.y - cell.offsetBeginY

		--- END OF BLOCK #3 ---

		if math.abs(offsetY)
		 <= 5 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #12
		end


		--- BLOCK #4 24-26, warpins: 1 ---
		--- END OF BLOCK #4 ---

		slot2 = if selectPic then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #5 27-31, warpins: 1 ---
		--- END OF BLOCK #5 ---

		for i, v in ipairs(selectPic.info)

		LOOP BLOCK #6
		GO OUT TO BLOCK #8


		--- BLOCK #6 32-37, warpins: 1 ---
		v.setColor(v, def.colors.cellNor)
		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 38-39, warpins: 2 ---
		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #5


		--- BLOCK #8 40-44, warpins: 1 ---
		selectPic:removeSelf()

		selectPic = nil
		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 45-82, warpins: 2 ---
		selectData = v
		selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(478, h)):anchor(0, 0):pos(0, 0):add2(cell)
		selectPic.info = info

		--- END OF BLOCK #9 ---

		for i, v in ipairs(info)

		LOOP BLOCK #10
		GO OUT TO BLOCK #12


		--- BLOCK #10 83-88, warpins: 1 ---
		v.setColor(v, def.colors.cellSel)

		--- END OF BLOCK #10 ---

		FLOW; TARGET BLOCK #11


		--- BLOCK #11 89-90, warpins: 2 ---
		--- END OF BLOCK #11 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #9


		--- BLOCK #12 91-91, warpins: 4 ---
		return 
		--- END OF BLOCK #12 ---



	end)

	--- END OF BLOCK #9 ---

	if i == 1 then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #13
	end


	--- BLOCK #10 271-305, warpins: 1 ---
	selectData = v
	selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(478, h)):anchor(0, 0):pos(0, 0):add2(cell)
	selectPic.info = info

	--- END OF BLOCK #10 ---

	for i, v in ipairs(info)

	LOOP BLOCK #11
	GO OUT TO BLOCK #13


	--- BLOCK #11 306-311, warpins: 1 ---
	v.setColor(v, def.colors.cellSel)
	--- END OF BLOCK #11 ---

	FLOW; TARGET BLOCK #12


	--- BLOCK #12 312-313, warpins: 2 ---
	--- END OF BLOCK #12 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #13 314-315, warpins: 2 ---
	--- END OF BLOCK #13 ---

	FLOW; TARGET BLOCK #14


	--- BLOCK #14 316-317, warpins: 2 ---
	--- END OF BLOCK #14 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #5


	--- BLOCK #15 318-324, warpins: 1 ---
	--- END OF BLOCK #15 ---

	slot10 = if not g_data.guild:isPresident()
	 then
	JUMP TO BLOCK #16
	else
	JUMP TO BLOCK #17
	end


	--- BLOCK #16 325-331, warpins: 1 ---
	--- END OF BLOCK #16 ---

	slot10 = if g_data.guild:isVicePresident()
	 then
	JUMP TO BLOCK #17
	else
	JUMP TO BLOCK #18
	end


	--- BLOCK #17 332-430, warpins: 2 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-22, warpins: 1 ---
		an.newMsgbox("ÄúÈ·¶¨¾Ü¾øÕ½¶Ó " .. selectData:get("corpsName") .. " ¼ÓÈëÂð£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-18, warpins: 1 ---
			net.send({
				CM_GILD_REFUSE_REQUEST,
				recog = 1
			}, nil, {
				{
					"ID",
					selectData:get("ID")
				}
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 19-19, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})

		return 
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 23-23, warpins: 2 ---
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/jjjr.png")
	}):add2(parent):anchor(0.5, 0.5):pos(442, -22)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-22, warpins: 1 ---
		an.newMsgbox("ÄúÈ·¶¨ÔÊÐíÕ½¶Ó " .. selectData:get("corpsName") .. " ¼ÓÈëÂð£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-18, warpins: 1 ---
			net.send({
				CM_GILD_ACCEPT_REQUEST,
				recog = 1
			}, nil, {
				{
					"ID",
					selectData:get("ID")
				}
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 19-19, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})

		return 
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 23-23, warpins: 2 ---
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/yxjr.png")
	}):add2(parent):anchor(0.5, 0.5):pos(342, -22)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-25, warpins: 2 ---
		net.send({
			CM_CORPS_MEMBER_LIST,
			tag = 30,
			recog = 1,
			series = 0
		}, nil, {
			{
				"ID",
				selectData:get("corpsID")
			}
		})

		return 
		--- END OF BLOCK #2 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/ckxx.png")
	}):add2(parent):anchor(0.5, 0.5):pos(242, -22)

	--- END OF BLOCK #17 ---

	FLOW; TARGET BLOCK #18


	--- BLOCK #18 431-432, warpins: 2 ---
	return 
	--- END OF BLOCK #18 ---



end
guild.showSubDiplomatic = function (self, parent)
	--- BLOCK #0 1-24, warpins: 1 ---
	local width = {
		120,
		120,
		120,
		120
	}
	local Titlelabel = {
		"    ÕýÔÚÁªÃË",
		"    ÕýÔÚÐûÕ½",
		"    ÕýÔÚ¹Ø×¢",
		"    ÉêÇëÁªÃË"
	}
	local posOffset = 5
	local selectPic = res.get2("pic/common/button_click02.png"):anchor(0.5, 0.5):add2(parent, 2)
	local curSelect = nil

	function click(tar)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if curSelect ~= tar then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #11
		end


		--- BLOCK #1 4-8, warpins: 1 ---
		curSelect = tar

		--- END OF BLOCK #1 ---

		slot1 = if self.pageNode then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 9-16, warpins: 1 ---
		self.pageNode:removeSelf()

		self.pageNode = nil
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 17-43, warpins: 2 ---
		self.pageNode = display.newNode():size(482, 292):pos(4, 8):anchor(0, 0):add2(parent, 2)

		--- END OF BLOCK #3 ---

		if tar == 1 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 44-53, warpins: 1 ---
		net.send({
			CM_GILD_QUERY_UNION,
			tag = 30,
			series = 0
		})

		self.threeSub = 1

		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #11


		--- BLOCK #5 54-55, warpins: 1 ---
		--- END OF BLOCK #5 ---

		if tar == 2 then
		JUMP TO BLOCK #6
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #6 56-65, warpins: 1 ---
		net.send({
			CM_GILD_QUERY_HOSTILE,
			tag = 30,
			series = 0
		})

		self.threeSub = 2

		--- END OF BLOCK #6 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #11


		--- BLOCK #7 66-67, warpins: 1 ---
		--- END OF BLOCK #7 ---

		if tar == 3 then
		JUMP TO BLOCK #8
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #8 68-77, warpins: 1 ---
		net.send({
			CM_GILD_QUERY_CONCERN,
			tag = 30,
			series = 0
		})

		self.threeSub = 3

		--- END OF BLOCK #8 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #11


		--- BLOCK #9 78-79, warpins: 1 ---
		--- END OF BLOCK #9 ---

		if tar == 4 then
		JUMP TO BLOCK #10
		else
		JUMP TO BLOCK #11
		end


		--- BLOCK #10 80-88, warpins: 1 ---
		net.send({
			CM_GILD_QUERY_REQUEST_UNION_LIST,
			tag = 30,
			series = 0
		})

		self.threeSub = 4

		--- END OF BLOCK #10 ---

		FLOW; TARGET BLOCK #11


		--- BLOCK #11 89-89, warpins: 6 ---
		return 
		--- END OF BLOCK #11 ---



	end

	--- END OF BLOCK #0 ---

	for i, v in ipairs(width)


	LOOP BLOCK #1
	GO OUT TO BLOCK #5


	--- BLOCK #1 25-111, warpins: 1 ---
	local eventBack = display.newScale9Sprite(res.getframe2("pic/scale/scale15.png"), 0, 0, cc.size(v + 2, 42)):anchor(0.5, 0.5):pos(posOffset + v*0.5, parent.geth(parent) - 23):add2(parent)
	Titlelabel[i] = an.newLabel(Titlelabel[i], 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(posOffset + v*0.5, parent.geth(parent) - 23):add2(parent)

	res.get2("pic/common/button_click.png"):anchor(0.5, 0.5):pos((posOffset + v*0.5) - 40, parent.geth(parent) - 23):add2(parent)
	--- END OF BLOCK #1 ---

	if i == 1 then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #3
	end


	--- BLOCK #2 112-121, warpins: 1 ---
	selectPic.pos(selectPic, (posOffset + v*0.5) - 40, parent.geth(parent) - 23)

	--- END OF BLOCK #2 ---

	FLOW; TARGET BLOCK #3


	--- BLOCK #3 122-131, warpins: 2 ---
	local targetPox = (posOffset + v*0.5) - 40
	posOffset = posOffset + v

	eventBack.enableClick(eventBack, function ()
		--- BLOCK #0 1-18, warpins: 1 ---
		selectPic:pos(targetPox, parent:geth() - 23)
		sound.playSound("103")
		click(i)

		return 
		--- END OF BLOCK #0 ---



	end)
	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 132-133, warpins: 2 ---
	--- END OF BLOCK #4 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #5 134-143, warpins: 1 ---
	click(1)
	--- END OF BLOCK #5 ---

	slot7 = if not g_data.guild:isPresident()
	 then
	JUMP TO BLOCK #6
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #6 144-150, warpins: 1 ---
	--- END OF BLOCK #6 ---

	slot7 = if g_data.guild:isVicePresident()

	 then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #7 151-196, warpins: 2 ---
	self.guildBtn = an.newToggle(res.gettex2("pic/common/toggle10.png"), res.gettex2("pic/common/toggle11.png"), function (b)
		--- BLOCK #0 1-7, warpins: 1 ---
		slot1 = net.send
		slot2 = {
			CM_GILD_ENABLE_UNION
		}
		--- END OF BLOCK #0 ---

		slot0 = if b then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-9, warpins: 1 ---
		slot3 = 1
		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #3


		--- BLOCK #2 10-10, warpins: 1 ---
		slot3 = 0
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 11-13, warpins: 2 ---
		slot2.tag = slot3

		slot1(slot2)

		return 
		--- END OF BLOCK #3 ---



	end, {
		easy = true,
		label = {
			"ÔÊÐíÁªÃË",
			20,
			1,
			{
				color = def.colors.labelGray
			}
		}
	}):anchor(0, 0.5):pos(-110, -24):add2(parent, 2)

	--- END OF BLOCK #7 ---

	if g_data.guild.guildInfo:get("enableUnion")

	 ~= 1 then
	JUMP TO BLOCK #8
	else
	JUMP TO BLOCK #9
	end


	--- BLOCK #8 197-198, warpins: 1 ---
	slot7 = false
	--- END OF BLOCK #8 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #10


	--- BLOCK #9 199-199, warpins: 1 ---
	local value = true

	--- END OF BLOCK #9 ---

	FLOW; TARGET BLOCK #10


	--- BLOCK #10 200-205, warpins: 2 ---
	self.guildBtn.btn:setIsSelect(value)

	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 206-207, warpins: 2 ---
	return 
	--- END OF BLOCK #11 ---



end
guild.showSubDiplomatic1 = function (self, parent)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if not parent then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-3, warpins: 1 ---
	parent = self.pageNode

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 4-5, warpins: 2 ---
	--- END OF BLOCK #2 ---

	slot1 = if parent then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 6-9, warpins: 1 ---
	parent.removeAllChildren(parent, true)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 10-12, warpins: 2 ---
	--- END OF BLOCK #4 ---

	if self.threeSub ~= 1 then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 13-13, warpins: 1 ---
	return 

	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 14-82, warpins: 1 ---
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png"), 0, 0, cc.size(parent.getw(parent), 42)):anchor(0.5, 0.5):pos(parent.getw(parent)*0.5, parent.geth(parent) - 20):add2(parent)
	an.newLabel("ÐÐ»áÃû", 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(120, parent.geth(parent) - 20):add2(parent)

	--- END OF BLOCK #6 ---

	slot2 = if not g_data.guild.guildUnion then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 83-83, warpins: 1 ---
	local dataList = {}
	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 84-110, warpins: 2 ---
	local infoView = an.newScroll(0, 0, 480, 248):add2(parent)
	local h = 42

	infoView.setScrollSize(infoView, 480, math.max(248, #dataList*h))

	local selectPic, selectData = nil

	--- END OF BLOCK #8 ---

	for i, v in ipairs(dataList)


	LOOP BLOCK #9
	GO OUT TO BLOCK #14


	--- BLOCK #9 111-117, warpins: 1 ---
	slot12 = display.newScale9Sprite
	slot13 = res.getframe2
	--- END OF BLOCK #9 ---

	if i%2 == 0 then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #10 118-119, warpins: 1 ---
	slot14 = "pic/scale/scale18.png"
	--- END OF BLOCK #10 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #12


	--- BLOCK #11 120-120, warpins: 1 ---
	slot14 = "pic/scale/scale19.png"
	--- END OF BLOCK #11 ---

	FLOW; TARGET BLOCK #12


	--- BLOCK #12 121-228, warpins: 2 ---
	local cell = slot12(slot13(slot14), 0, 0, cc.size(480, h)):anchor(0, 0):pos(0, infoView.getScrollSize(infoView).height - i*h):add2(infoView)
	local label = g_data.player:fixStrLen(v.get(v, "name"), 8)

	an.newLabel(label, 18, 1, {
		color = def.colors.labelGray
	}):add2(cell):anchor(0.5, 0.5):pos(120, h*0.5)
	an.newBtn(res.gettex2("pic/common/remove_n.png"), function ()
		--- BLOCK #0 1-17, warpins: 1 ---
		net.send({
			CM_GILD_BREAK_UNION
		}, nil, {
			{
				"ID",
				v:get("ID")
			}
		})

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/remove_s.png")
	}):add2(cell, 2):anchor(0.5, 0.5):pos(300, h*0.5)
	cell.setTouchEnabled(cell, true)
	cell.setTouchSwallowEnabled(cell, false)
	cell.addNodeEventListener(cell, cc.NODE_TOUCH_EVENT, function (event)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if event.name == "began" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-9, warpins: 1 ---
		cell.offsetBeginY = event.y

		return true

		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #7


		--- BLOCK #2 10-12, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if event.name == "ended" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #3 13-23, warpins: 1 ---
		local offsetY = event.y - cell.offsetBeginY

		--- END OF BLOCK #3 ---

		if math.abs(offsetY)
		 <= 5 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #4 24-26, warpins: 1 ---
		--- END OF BLOCK #4 ---

		slot2 = if selectPic then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 27-31, warpins: 1 ---
		selectPic:removeSelf()

		selectPic = nil
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 32-60, warpins: 2 ---
		selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(478, h)):anchor(0, 0):pos(0, 0):add2(cell)

		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 61-61, warpins: 4 ---
		return 
		--- END OF BLOCK #7 ---



	end)
	--- END OF BLOCK #12 ---

	FLOW; TARGET BLOCK #13


	--- BLOCK #13 229-230, warpins: 2 ---
	--- END OF BLOCK #13 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #14 231-237, warpins: 1 ---
	--- END OF BLOCK #14 ---

	slot7 = if not g_data.guild:isPresident()
	 then
	JUMP TO BLOCK #15
	else
	JUMP TO BLOCK #16
	end


	--- BLOCK #15 238-244, warpins: 1 ---
	--- END OF BLOCK #15 ---

	slot7 = if g_data.guild:isVicePresident()
	 then
	JUMP TO BLOCK #16
	else
	JUMP TO BLOCK #17
	end


	--- BLOCK #16 245-277, warpins: 2 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-20, warpins: 1 ---
		sound.playSound("103")

		g_data.guild.guildList = {}

		net.send({
			CM_GILD_LIST,
			param = 0,
			tag = 7
		})
		self:showGuildList("Ôö¼ÓÁªÃË")

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/zjlm.png")
	}):add2(parent):anchor(0.5, 0.5):pos(434, -30)

	--- END OF BLOCK #16 ---

	FLOW; TARGET BLOCK #17


	--- BLOCK #17 278-279, warpins: 2 ---
	return 
	--- END OF BLOCK #17 ---

	FLOW; TARGET BLOCK #18


	--- BLOCK #18 280-280, warpins: 2 ---
	--- END OF BLOCK #18 ---



end
guild.cmdFunc = function (self, cmd, name)
	--- BLOCK #0 1-28, warpins: 1 ---
	local cmdData = {}
	cmdData.Ôö¼ÓÁªÃË = {
		"È·¶¨ÓëÐÐ»á %s ÉêÇëÁªÃË£¿",
		CM_GILD_REQUEST_UNION
	}
	cmdData.ÐÐ»áÐûÕ½ = {
		"È·¶¨¶ÔÐÐ»á %s ·¢ÆðÐûÕ½£¿",
		CM_GILD_DECLARE_WAR_NAME
	}
	cmdData.Ôö¼Ó¹Ø×¢ = {
		"È·¶¨¶ÔÐÐ»á %s ¹Ø×¢£¿",
		CM_GILD_CONCERN_GILD_NAME
	}
	local msgbox = nil
	msgbox = an.newMsgbox(string.format(cmdData[cmd][1], name), function (idx)
		--- BLOCK #0 1-2, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if idx == 1 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 3-17, warpins: 1 ---
		net.send({
			cmdData[cmd][2]
		}, nil, {
			{
				"string",
				name,
				15
			}
		})

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 18-18, warpins: 2 ---
		return 
		--- END OF BLOCK #2 ---



	end, {
		center = true,
		hasCancel = true
	})

	return 
	--- END OF BLOCK #0 ---



end
guild.showGuildList = function (self, cmd)
	--- BLOCK #0 1-9, warpins: 1 ---
	local tmpPic = {}
	tmpPic.Ôö¼ÓÁªÃË = "zjlm"
	tmpPic.ÐÐ»áÐûÕ½ = "hhxz"
	tmpPic.Ôö¼Ó¹Ø×¢ = "zjgz"
	--- END OF BLOCK #0 ---

	slot3 = if not cmd then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 10-10, warpins: 1 ---
	slot3 = self.guildListCmd
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 11-26, warpins: 2 ---
	self.guildListCmd = slot3

	self.content:hide()
	self.bg:setTex(res.gettex2("pic/common/black_2.png"))
	--- END OF BLOCK #2 ---

	slot3 = if self.showGuildListNode then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 27-32, warpins: 1 ---
	self.showGuildListNode:removeSelf()

	self.showGuildListNode = nil
	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 33-85, warpins: 2 ---
	self.showGuildListNode = display.newNode():addto(self)
	local parent = self.showGuildListNode

	parent.size(parent, self.getw(self), self.geth(self))

	local back1 = display.newScale9Sprite(res.getframe2("pic/scale/scale16.png"), 0, 0, cc.size(614, 336)):anchor(0, 0):pos(14, 64):add2(parent)
	local width = {
		200,
		200,
		124,
		82
	}
	local Titlelabel = {
		"ÐÐ»áÃû",
		"»á³¤Ãû",
		"Õ½¶ÓÊý",
		"×´Ì¬"
	}
	local posOffset = 4

	--- END OF BLOCK #4 ---

	for i, v in ipairs(width)

	LOOP BLOCK #5
	GO OUT TO BLOCK #7


	--- BLOCK #5 86-147, warpins: 1 ---
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png"), 0, 0, cc.size(v + 2, 42)):anchor(0.5, 0.5):pos(posOffset + v*0.5, back1.geth(back1) - 23):add2(back1)
	an.newLabel(Titlelabel[i], 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(posOffset + v*0.5, back1.geth(back1) - 23):add2(back1)

	posOffset = posOffset + v
	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 148-149, warpins: 2 ---
	--- END OF BLOCK #6 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #7 150-188, warpins: 1 ---
	local dataList = g_data.guild.guildList

	local function pageViewEvent(sender, eventType)
		--- BLOCK #0 1-5, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if eventType == ccui.PageViewEventType.turning then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 6-17, warpins: 1 ---
		local pageInfo = string.format("page %d", pageView:getCurPageIdx() + 1)

		print(pageInfo)

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 18-18, warpins: 2 ---
		return 
		--- END OF BLOCK #2 ---



	end

	local infoView = an.newScroll(4, 4, 608, 288):add2(back1)
	local h = 42

	infoView.setScrollSize(infoView, 608, math.max(288, #dataList*h))
	infoView.enableTouch(infoView, false)
	infoView.enableClick(infoView, function ()
		--- BLOCK #0 1-1, warpins: 1 ---
		return 
		--- END OF BLOCK #0 ---



	end)

	local selectPic, selectData = nil

	--- END OF BLOCK #7 ---

	for i, v in ipairs(dataList)


	LOOP BLOCK #8
	GO OUT TO BLOCK #21


	--- BLOCK #8 189-196, warpins: 1 ---
	local info = {}
	slot20 = display.newScale9Sprite
	slot21 = res.getframe2
	--- END OF BLOCK #8 ---

	if i%2 == 0 then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #9 197-198, warpins: 1 ---
	slot22 = "pic/scale/scale18.png"
	--- END OF BLOCK #9 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #11


	--- BLOCK #10 199-199, warpins: 1 ---
	slot22 = "pic/scale/scale19.png"
	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 200-342, warpins: 2 ---
	local cell = slot20(slot21(slot22), 0, 0, cc.size(608, h)):anchor(0, 0):pos(0, infoView.getScrollSize(infoView).height - i*h):add2(infoView)
	local label = g_data.player:fixStrLen(v.get(v, "gildName"), 8)
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(100, h*0.5)
	label = g_data.player:fixStrLen(v.get(v, "presidentName"), 8)
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(300, h*0.5)
	label = v.get(v, "corpsCount")
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(460, h*0.5)

	--- END OF BLOCK #11 ---

	slot22 = if g_data.guild.curApplyguild then
	JUMP TO BLOCK #12
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #12 343-351, warpins: 1 ---
	--- END OF BLOCK #12 ---

	if v.get(v, "guildID")

	 == g_data.guild.curApplyguild then
	JUMP TO BLOCK #13
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #13 352-353, warpins: 1 ---
	label = "ÉêÇëÖÐ"
	--- END OF BLOCK #13 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #15


	--- BLOCK #14 354-354, warpins: 2 ---
	label = ""
	--- END OF BLOCK #14 ---

	FLOW; TARGET BLOCK #15


	--- BLOCK #15 355-413, warpins: 2 ---
	info[#info + 1] = an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(556, h*0.5)

	cell.setTouchEnabled(cell, true)
	cell.setTouchSwallowEnabled(cell, false)
	cell.addNodeEventListener(cell, cc.NODE_TOUCH_EVENT, function (event)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if event.name == "began" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-9, warpins: 1 ---
		cell.offsetBeginY = event.y

		return true

		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #12


		--- BLOCK #2 10-12, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if event.name == "ended" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #12
		end


		--- BLOCK #3 13-23, warpins: 1 ---
		local offsetY = event.y - cell.offsetBeginY

		--- END OF BLOCK #3 ---

		if math.abs(offsetY)
		 <= 5 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #12
		end


		--- BLOCK #4 24-26, warpins: 1 ---
		--- END OF BLOCK #4 ---

		slot2 = if selectPic then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #9
		end


		--- BLOCK #5 27-31, warpins: 1 ---
		--- END OF BLOCK #5 ---

		for i, v in ipairs(selectPic.info)

		LOOP BLOCK #6
		GO OUT TO BLOCK #8


		--- BLOCK #6 32-37, warpins: 1 ---
		v.setColor(v, def.colors.cellNor)
		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 38-39, warpins: 2 ---
		--- END OF BLOCK #7 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #5


		--- BLOCK #8 40-44, warpins: 1 ---
		selectPic:removeSelf()

		selectPic = nil
		--- END OF BLOCK #8 ---

		FLOW; TARGET BLOCK #9


		--- BLOCK #9 45-82, warpins: 2 ---
		selectData = v
		selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(608, h)):anchor(0, 0):pos(0, 0):add2(cell)
		selectPic.info = info

		--- END OF BLOCK #9 ---

		for i, v in ipairs(info)

		LOOP BLOCK #10
		GO OUT TO BLOCK #12


		--- BLOCK #10 83-88, warpins: 1 ---
		v.setColor(v, def.colors.cellSel)

		--- END OF BLOCK #10 ---

		FLOW; TARGET BLOCK #11


		--- BLOCK #11 89-90, warpins: 2 ---
		--- END OF BLOCK #11 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #9


		--- BLOCK #12 91-91, warpins: 4 ---
		return 
		--- END OF BLOCK #12 ---



	end)

	local listener = cc.EventListenerCustom:create("UpdateNilGuildState", function ()
		--- BLOCK #0 1-5, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if g_data.guild.curApplyguild then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #1 6-15, warpins: 1 ---
		--- END OF BLOCK #1 ---

		if v:get("guildID")
		 == g_data.guild.curApplyguild then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 16-22, warpins: 1 ---
		info[4]:setString("ÉêÇëÖÐ")
		--- END OF BLOCK #2 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #4


		--- BLOCK #3 23-28, warpins: 2 ---
		info[4]:setString("")

		--- END OF BLOCK #3 ---

		FLOW; TARGET BLOCK #4


		--- BLOCK #4 29-29, warpins: 2 ---
		return 
		--- END OF BLOCK #4 ---



	end)

	cell.getEventDispatcher(cell):addEventListenerWithSceneGraphPriority(listener, cell)

	--- END OF BLOCK #15 ---

	if i == 1 then
	JUMP TO BLOCK #16
	else
	JUMP TO BLOCK #19
	end


	--- BLOCK #16 414-448, warpins: 1 ---
	selectData = v
	selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(608, h)):anchor(0, 0):pos(0, 0):add2(cell)
	selectPic.info = info

	--- END OF BLOCK #16 ---

	for i, v in ipairs(info)

	LOOP BLOCK #17
	GO OUT TO BLOCK #19


	--- BLOCK #17 449-454, warpins: 1 ---
	v.setColor(v, def.colors.cellSel)

	--- END OF BLOCK #17 ---

	FLOW; TARGET BLOCK #18


	--- BLOCK #18 455-456, warpins: 2 ---
	--- END OF BLOCK #18 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #16


	--- BLOCK #19 457-458, warpins: 2 ---
	--- END OF BLOCK #19 ---

	FLOW; TARGET BLOCK #20


	--- BLOCK #20 459-460, warpins: 2 ---
	--- END OF BLOCK #20 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #7


	--- BLOCK #21 461-473, warpins: 1 ---
	local filterInput = nil
	slot15 = an.newInput
	slot16 = 0
	slot17 = 0
	slot18 = 196
	slot19 = 40
	slot20 = 7
	slot21 = {}
	slot22 = {
		nil,
		20,
		1
	}
	--- END OF BLOCK #21 ---

	slot23 = if not self.filterString then
	JUMP TO BLOCK #22
	else
	JUMP TO BLOCK #23
	end


	--- BLOCK #22 474-474, warpins: 1 ---
	slot23 = ""
	--- END OF BLOCK #22 ---

	FLOW; TARGET BLOCK #23


	--- BLOCK #23 475-668, warpins: 2 ---
	slot22[1] = slot23
	slot21.label = slot22
	slot21.bg = {
		tex = res.gettex2("pic/scale/scale16.png"),
		offset = {
			-10,
			2
		}
	}
	slot21.tip = {
		"ÊäÈëÐÐ»á¹Ø¼ü×Ö      ",
		20,
		1,
		{
			color = cc.c3b(128, 128, 128)
		}
	}
	slot21.stop_call = function ()
		--- BLOCK #0 1-6, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if filterInput:getString()

		 == "" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 7-16, warpins: 1 ---
		self.filterString = nil

		net.send({
			CM_GILD_LIST,
			param = 0,
			tag = 7
		})

		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 17-35, warpins: 2 ---
		self.filterString = filterInput:getString()

		net.send({
			CM_FIND_GILD_BYNAME
		}, {
			filterInput:getString()
		})

		return 
		--- END OF BLOCK #2 ---



	end
	filterInput = slot15(slot16, slot17, slot18, slot19, slot20, slot21):add2(parent):anchor(0, 0):pos(25, 14):add(res.get2("pic/panels/voice/search.png"):pos(170, 20))

	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-22, warpins: 1 ---
		parent:removeSelf()

		self.showGuildListNode = nil

		self.bg:setTex(res.gettex2("pic/common/black_0.png"))
		self.content:show()

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/mail/return.png")
	}):add2(parent):anchor(0.5, 0.5):pos(580, 38)
	print(tmpPic[self.guildListCmd])
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-4, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 5-20, warpins: 2 ---
		print(self.guildListCmd)
		self:cmdFunc(self.guildListCmd, selectData:get("gildName"))

		return 
		--- END OF BLOCK #2 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/" .. tmpPic[self.guildListCmd] .. ".png")
	}):add2(parent):anchor(0.5, 0.5):pos(480, 38)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-12, warpins: 1 ---
		sound.playSound("103")

		slot0 = g_data.guild.page
		--- END OF BLOCK #0 ---

		slot1 = if g_data.guild.serach then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 13-14, warpins: 1 ---
		slot1 = 0
		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #3


		--- BLOCK #2 15-15, warpins: 1 ---
		slot1 = 1
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 16-24, warpins: 2 ---
		local page = slot0 + slot1

		net.send({
			CM_GILD_LIST,
			tag = 7,
			param = page
		})

		return 
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/xyy.png")
	}):add2(parent):anchor(0.5, 0.5):pos(380, 38)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-11, warpins: 1 ---
		sound.playSound("103")

		local page = g_data.guild.page - 1

		--- END OF BLOCK #0 ---

		if page < 0 then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #1 12-16, warpins: 1 ---
		--- END OF BLOCK #1 ---

		slot1 = if not g_data.guild.serach then
		JUMP TO BLOCK #2
		else
		JUMP TO BLOCK #3
		end


		--- BLOCK #2 17-22, warpins: 1 ---
		self:showError(30)

		return 

		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 23-25, warpins: 3 ---
		--- END OF BLOCK #3 ---

		if page < 0 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #5
		end


		--- BLOCK #4 26-27, warpins: 1 ---
		page = 0

		--- END OF BLOCK #4 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #5


		--- BLOCK #5 28-35, warpins: 2 ---
		net.send({
			CM_GILD_LIST,
			tag = 7,
			param = page
		})

		return 
		--- END OF BLOCK #5 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/syy.png")
	}):add2(parent):anchor(0.5, 0.5):pos(280, 38)

	return 
	--- END OF BLOCK #23 ---



end
guild.showSubDiplomatic2 = function (self, parent)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if not parent then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-3, warpins: 1 ---
	parent = self.pageNode

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 4-5, warpins: 2 ---
	--- END OF BLOCK #2 ---

	slot1 = if parent then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 6-9, warpins: 1 ---
	parent.removeAllChildren(parent, true)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 10-12, warpins: 2 ---
	--- END OF BLOCK #4 ---

	if self.threeSub ~= 2 then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 13-13, warpins: 1 ---
	return 

	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 14-85, warpins: 1 ---
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png"), 0, 0, cc.size(parent.getw(parent), 42)):anchor(0.5, 0.5):pos(parent.getw(parent)*0.5, parent.geth(parent) - 20):add2(parent)
	an.newLabel("ÐÐ»áÃû", 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(parent.getw(parent)*0.5, parent.geth(parent) - 20):add2(parent)

	--- END OF BLOCK #6 ---

	slot2 = if not g_data.guild.guildHostile then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 86-86, warpins: 1 ---
	local dataList = {}

	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 87-116, warpins: 2 ---
	dump(dataList)

	local infoView = an.newScroll(0, 0, 472, 252):add2(parent)
	local h = 42

	infoView.setScrollSize(infoView, 472, math.max(252, #dataList*h))

	local selectPic, selectData = nil

	--- END OF BLOCK #8 ---

	for i, v in ipairs(dataList)


	LOOP BLOCK #9
	GO OUT TO BLOCK #14


	--- BLOCK #9 117-123, warpins: 1 ---
	slot12 = display.newScale9Sprite
	slot13 = res.getframe2
	--- END OF BLOCK #9 ---

	if i%2 == 0 then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #10 124-125, warpins: 1 ---
	slot14 = "pic/scale/scale18.png"
	--- END OF BLOCK #10 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #12


	--- BLOCK #11 126-126, warpins: 1 ---
	slot14 = "pic/scale/scale19.png"
	--- END OF BLOCK #11 ---

	FLOW; TARGET BLOCK #12


	--- BLOCK #12 127-207, warpins: 2 ---
	local cell = slot12(slot13(slot14), 0, 0, cc.size(472, h)):anchor(0, 0):pos(0, infoView.getScrollSize(infoView).height - i*h):add2(infoView)
	local label = g_data.player:fixStrLen(v.get(v, "name"), 8)

	an.newLabel(label, 18, 1, {
		color = def.colors.labelGray
	}):add2(cell):anchor(0.5, 0.5):pos(parent.getw(parent)*0.5, h*0.5)
	cell.setTouchEnabled(cell, true)
	cell.setTouchSwallowEnabled(cell, false)
	cell.addNodeEventListener(cell, cc.NODE_TOUCH_EVENT, function (event)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if event.name == "began" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-9, warpins: 1 ---
		cell.offsetBeginY = event.y

		return true

		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #7


		--- BLOCK #2 10-12, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if event.name == "ended" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #3 13-23, warpins: 1 ---
		local offsetY = event.y - cell.offsetBeginY

		--- END OF BLOCK #3 ---

		if math.abs(offsetY)
		 <= 5 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #4 24-26, warpins: 1 ---
		--- END OF BLOCK #4 ---

		slot2 = if selectPic then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 27-31, warpins: 1 ---
		selectPic:removeSelf()

		selectPic = nil
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 32-60, warpins: 2 ---
		selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(472, h)):anchor(0, 0):pos(0, 0):add2(cell)

		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 61-61, warpins: 4 ---
		return 
		--- END OF BLOCK #7 ---



	end)
	--- END OF BLOCK #12 ---

	FLOW; TARGET BLOCK #13


	--- BLOCK #13 208-209, warpins: 2 ---
	--- END OF BLOCK #13 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #14 210-216, warpins: 1 ---
	--- END OF BLOCK #14 ---

	slot7 = if not g_data.guild:isPresident()
	 then
	JUMP TO BLOCK #15
	else
	JUMP TO BLOCK #16
	end


	--- BLOCK #15 217-223, warpins: 1 ---
	--- END OF BLOCK #15 ---

	slot7 = if g_data.guild:isVicePresident()
	 then
	JUMP TO BLOCK #16
	else
	JUMP TO BLOCK #17
	end


	--- BLOCK #16 224-256, warpins: 2 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-20, warpins: 1 ---
		sound.playSound("103")

		g_data.guild.guildList = {}

		net.send({
			CM_GILD_LIST,
			param = 0,
			tag = 7
		})
		self:showGuildList("ÐÐ»áÐûÕ½")

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/hhxz.png")
	}):add2(parent):anchor(0.5, 0.5):pos(434, -30)

	--- END OF BLOCK #16 ---

	FLOW; TARGET BLOCK #17


	--- BLOCK #17 257-258, warpins: 2 ---
	return 
	--- END OF BLOCK #17 ---

	FLOW; TARGET BLOCK #18


	--- BLOCK #18 259-259, warpins: 2 ---
	--- END OF BLOCK #18 ---



end
guild.showSubDiplomatic3 = function (self, parent)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if not parent then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-3, warpins: 1 ---
	parent = self.pageNode

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 4-5, warpins: 2 ---
	--- END OF BLOCK #2 ---

	slot1 = if parent then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 6-9, warpins: 1 ---
	parent.removeAllChildren(parent, true)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 10-12, warpins: 2 ---
	--- END OF BLOCK #4 ---

	if self.threeSub ~= 3 then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 13-13, warpins: 1 ---
	return 

	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 14-136, warpins: 1 ---
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png"), 0, 0, cc.size(242, 42)):anchor(0.5, 0.5):pos(121, parent.geth(parent) - 20):add2(parent)
	an.newLabel("ÐÐ»áÃû", 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(120, parent.geth(parent) - 20):add2(parent)
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png"), 0, 0, cc.size(242, 42)):anchor(0.5, 0.5):pos(361, parent.geth(parent) - 20):add2(parent)
	an.newLabel("×´Ì¬", 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(352, parent.geth(parent) - 20):add2(parent)

	--- END OF BLOCK #6 ---

	slot2 = if not g_data.guild.guildConcern then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 137-137, warpins: 1 ---
	local dataList = {}
	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 138-191, warpins: 2 ---
	local infoView = an.newScroll(0, 0, 472, 252):add2(parent)
	local h = 42

	infoView.setScrollSize(infoView, 472, math.max(252, #dataList*h))

	local state = {
		"",
		"ÁªÃËÖÐ",
		"ÐûÕ½ÖÐ",
		"ÉêÇëÁªÃËÖÐ"
	}
	local colorArray = {}
	colorArray[1] = cc.c3b(255, 255, 255)
	colorArray[2] = cc.c3b(0, 255, 0)
	colorArray[3] = cc.c3b(255, 0, 0)
	colorArray[4] = def.colors.labelGray
	local selectPic, selectData = nil

	--- END OF BLOCK #8 ---

	for i, v in ipairs(dataList)


	LOOP BLOCK #9
	GO OUT TO BLOCK #24


	--- BLOCK #9 192-198, warpins: 1 ---
	slot14 = display.newScale9Sprite
	slot15 = res.getframe2
	--- END OF BLOCK #9 ---

	if i%2 == 0 then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #10 199-200, warpins: 1 ---
	slot16 = "pic/scale/scale18.png"
	--- END OF BLOCK #10 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #12


	--- BLOCK #11 201-201, warpins: 1 ---
	slot16 = "pic/scale/scale19.png"
	--- END OF BLOCK #11 ---

	FLOW; TARGET BLOCK #12


	--- BLOCK #12 202-270, warpins: 2 ---
	local cell = slot14(slot15(slot16), 0, 0, cc.size(472, h)):anchor(0, 0):pos(0, infoView.getScrollSize(infoView).height - i*h):add2(infoView)
	local label = g_data.player:fixStrLen(v.get(v, "name"), 8)

	an.newLabel(label, 18, 1, {
		color = def.colors.labelGray
	}):add2(cell):anchor(0.5, 0.5):pos(120, h*0.5)
	--- END OF BLOCK #12 ---

	slot16 = if not v.get(v, "relation")

	 then
	JUMP TO BLOCK #13
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #13 271-271, warpins: 1 ---
	slot16 = 0
	--- END OF BLOCK #13 ---

	FLOW; TARGET BLOCK #14


	--- BLOCK #14 272-275, warpins: 2 ---
	--- END OF BLOCK #14 ---

	slot15 = if not state[slot16 + 1] then
	JUMP TO BLOCK #15
	else
	JUMP TO BLOCK #16
	end


	--- BLOCK #15 276-276, warpins: 1 ---
	label = ""
	--- END OF BLOCK #15 ---

	FLOW; TARGET BLOCK #16


	--- BLOCK #16 277-284, warpins: 2 ---
	slot16 = print
	slot17 = "relation= "

	--- END OF BLOCK #16 ---

	slot18 = if not v.get(v, "relation")

	 then
	JUMP TO BLOCK #17
	else
	JUMP TO BLOCK #18
	end


	--- BLOCK #17 285-285, warpins: 1 ---
	slot18 = " nil "

	--- END OF BLOCK #17 ---

	FLOW; TARGET BLOCK #18


	--- BLOCK #18 286-293, warpins: 2 ---
	slot16(slot17, slot18, label)
	--- END OF BLOCK #18 ---

	slot16 = if not v.get(v, "relation")

	 then
	JUMP TO BLOCK #19
	else
	JUMP TO BLOCK #20
	end


	--- BLOCK #19 294-294, warpins: 1 ---
	slot16 = 0
	--- END OF BLOCK #19 ---

	FLOW; TARGET BLOCK #20


	--- BLOCK #20 295-298, warpins: 2 ---
	--- END OF BLOCK #20 ---

	slot16 = if not colorArray[slot16 + 1] then
	JUMP TO BLOCK #21
	else
	JUMP TO BLOCK #22
	end


	--- BLOCK #21 299-304, warpins: 1 ---
	local tmpColor = cc.c3b(255, 255, 255)

	--- END OF BLOCK #21 ---

	FLOW; TARGET BLOCK #22


	--- BLOCK #22 305-342, warpins: 2 ---
	an.newLabel(label, 18, 1, {
		color = tmpColor
	}):add2(cell):anchor(0.5, 0.5):pos(352, h*0.5)
	cell.setTouchEnabled(cell, true)
	cell.setTouchSwallowEnabled(cell, false)
	cell.addNodeEventListener(cell, cc.NODE_TOUCH_EVENT, function (event)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if event.name == "began" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-9, warpins: 1 ---
		cell.offsetBeginY = event.y

		return true

		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #7


		--- BLOCK #2 10-12, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if event.name == "ended" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #3 13-23, warpins: 1 ---
		local offsetY = event.y - cell.offsetBeginY

		--- END OF BLOCK #3 ---

		if math.abs(offsetY)
		 <= 5 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #4 24-26, warpins: 1 ---
		--- END OF BLOCK #4 ---

		slot2 = if selectPic then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 27-31, warpins: 1 ---
		selectPic:removeSelf()

		selectPic = nil
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 32-62, warpins: 2 ---
		selectData = v
		selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(472, h)):anchor(0, 0):pos(0, 0):add2(cell)

		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 63-63, warpins: 4 ---
		return 
		--- END OF BLOCK #7 ---



	end)
	--- END OF BLOCK #22 ---

	FLOW; TARGET BLOCK #23


	--- BLOCK #23 343-344, warpins: 2 ---
	--- END OF BLOCK #23 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #24 345-351, warpins: 1 ---
	--- END OF BLOCK #24 ---

	slot9 = if not g_data.guild:isPresident()
	 then
	JUMP TO BLOCK #25
	else
	JUMP TO BLOCK #26
	end


	--- BLOCK #25 352-358, warpins: 1 ---
	--- END OF BLOCK #25 ---

	slot9 = if g_data.guild:isVicePresident()
	 then
	JUMP TO BLOCK #26
	else
	JUMP TO BLOCK #27
	end


	--- BLOCK #26 359-490, warpins: 2 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-24, warpins: 1 ---
		local msgbox = nil
		msgbox = an.newMsgbox("ÄúÈ·¶¨È¡Ïû¶ÔÐÐ»á " .. selectData:get("name") .. " µÄ¹Ø×¢£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-18, warpins: 1 ---
			net.send({
				CM_GILD_CANCLE_CONCERN
			}, nil, {
				{
					"ID",
					selectData:get("ID")
				}
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 19-19, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})

		return 
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 25-25, warpins: 2 ---
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/qxgz.png")
	}):add2(parent):anchor(0.5, 0.5):pos(434, -30)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-20, warpins: 1 ---
		sound.playSound("103")

		g_data.guild.guildList = {}

		net.send({
			CM_GILD_LIST,
			param = 0,
			tag = 7
		})
		self:showGuildList("Ôö¼Ó¹Ø×¢")

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/zjgz.png")
	}):add2(parent):anchor(0.5, 0.5):pos(334, -30)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-24, warpins: 1 ---
		local msgbox = nil
		msgbox = an.newMsgbox("ÄúÈ·¶¨¶ÔÐÐ»á " .. selectData:get("name") .. " ·¢ÆðÐûÕ½£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-18, warpins: 1 ---
			net.send({
				CM_GILD_DECLARE_WAR_NAME
			}, nil, {
				{
					"string",
					selectData:get("name"),
					15
				}
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 19-19, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})

		return 
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 25-25, warpins: 2 ---
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/fqxz.png")
	}):add2(parent):anchor(0.5, 0.5):pos(234, -30)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-7, warpins: 1 ---
		sound.playSound("103")

		--- END OF BLOCK #0 ---

		slot0 = if not selectData then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 8-8, warpins: 1 ---
		return 

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 9-24, warpins: 1 ---
		local msgbox = nil
		msgbox = an.newMsgbox("ÄúÈ·¶¨ÉêÇëÓëÐÐ»á " .. selectData:get("name") .. " ÁªÃË£¿", function (isOk)
			--- BLOCK #0 1-2, warpins: 1 ---
			--- END OF BLOCK #0 ---

			if isOk == 1 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 3-18, warpins: 1 ---
			net.send({
				CM_GILD_REQUEST_UNION
			}, nil, {
				{
					"string",
					selectData:get("name"),
					15
				}
			})

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 19-19, warpins: 2 ---
			return 
			--- END OF BLOCK #2 ---



		end, {
			center = true,
			hasCancel = true
		})

		return 
		--- END OF BLOCK #2 ---

		FLOW; TARGET BLOCK #3


		--- BLOCK #3 25-25, warpins: 2 ---
		--- END OF BLOCK #3 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/sqlm.png")
	}):add2(parent):anchor(0.5, 0.5):pos(134, -30)

	--- END OF BLOCK #26 ---

	FLOW; TARGET BLOCK #27


	--- BLOCK #27 491-492, warpins: 2 ---
	return 
	--- END OF BLOCK #27 ---

	FLOW; TARGET BLOCK #28


	--- BLOCK #28 493-493, warpins: 2 ---
	--- END OF BLOCK #28 ---



end
guild.showSubDiplomatic4 = function (self, parent)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if not parent then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-3, warpins: 1 ---
	parent = self.pageNode

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 4-5, warpins: 2 ---
	--- END OF BLOCK #2 ---

	slot1 = if parent then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 6-9, warpins: 1 ---
	parent.removeAllChildren(parent, true)

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 10-12, warpins: 2 ---
	--- END OF BLOCK #4 ---

	if self.threeSub ~= 4 then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 13-13, warpins: 1 ---
	return 

	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 14-82, warpins: 1 ---
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png"), 0, 0, cc.size(parent.getw(parent), 42)):anchor(0.5, 0.5):pos(parent.getw(parent)*0.5, parent.geth(parent) - 20):add2(parent)
	an.newLabel("ÐÐ»áÃû", 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(120, parent.geth(parent) - 20):add2(parent)

	--- END OF BLOCK #6 ---

	slot2 = if not g_data.guild.guildRequestUnion then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 83-83, warpins: 1 ---
	local dataList = {}
	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 84-110, warpins: 2 ---
	local infoView = an.newScroll(0, 0, 472, 252):add2(parent)
	local h = 42

	infoView.setScrollSize(infoView, 472, math.max(252, #dataList*h))

	local selectPic, selectData = nil

	--- END OF BLOCK #8 ---

	for i, v in ipairs(dataList)


	LOOP BLOCK #9
	GO OUT TO BLOCK #17


	--- BLOCK #9 111-117, warpins: 1 ---
	slot12 = display.newScale9Sprite
	slot13 = res.getframe2
	--- END OF BLOCK #9 ---

	if i%2 == 0 then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #10 118-119, warpins: 1 ---
	slot14 = "pic/scale/scale18.png"
	--- END OF BLOCK #10 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #12


	--- BLOCK #11 120-120, warpins: 1 ---
	slot14 = "pic/scale/scale19.png"
	--- END OF BLOCK #11 ---

	FLOW; TARGET BLOCK #12


	--- BLOCK #12 121-190, warpins: 2 ---
	local cell = slot12(slot13(slot14), 0, 0, cc.size(472, h)):anchor(0, 0):pos(0, infoView.getScrollSize(infoView).height - i*h):add2(infoView)
	local label = g_data.player:fixStrLen(v.get(v, "corpsName"), 8)

	an.newLabel(label, 18, 1, {
		color = def.colors.labelGray
	}):add2(cell):anchor(0.5, 0.5):pos(120, h*0.5)
	--- END OF BLOCK #12 ---

	slot14 = if not g_data.guild:isPresident()
	 then
	JUMP TO BLOCK #13
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #13 191-197, warpins: 1 ---
	--- END OF BLOCK #13 ---

	slot14 = if g_data.guild:isVicePresident()
	 then
	JUMP TO BLOCK #14
	else
	JUMP TO BLOCK #15
	end


	--- BLOCK #14 198-255, warpins: 2 ---
	an.newBtn(res.gettex2("pic/common/accept_n.png"), function ()
		--- BLOCK #0 1-17, warpins: 1 ---
		net.send({
			CM_GILD_ACCEPT_REQUEST,
			recog = 2
		}, nil, {
			{
				"ID",
				v:get("ID")
			}
		})

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/accept_s.png")
	}):add2(cell, 2):anchor(0.5, 0.5):pos(260, h*0.5)
	an.newBtn(res.gettex2("pic/common/refuse_n.png"), function ()
		--- BLOCK #0 1-17, warpins: 1 ---
		net.send({
			CM_GILD_REFUSE_REQUEST,
			recog = 2
		}, nil, {
			{
				"ID",
				v:get("ID")
			}
		})

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/refuse_s.png")
	}):add2(cell, 2):anchor(0.5, 0.5):pos(360, h*0.5)
	--- END OF BLOCK #14 ---

	FLOW; TARGET BLOCK #15


	--- BLOCK #15 256-271, warpins: 2 ---
	cell.setTouchEnabled(cell, true)
	cell.setTouchSwallowEnabled(cell, false)
	cell.addNodeEventListener(cell, cc.NODE_TOUCH_EVENT, function (event)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if event.name == "began" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-9, warpins: 1 ---
		cell.offsetBeginY = event.y

		return true

		--- END OF BLOCK #1 ---

		UNCONDITIONAL JUMP; TARGET BLOCK #7


		--- BLOCK #2 10-12, warpins: 1 ---
		--- END OF BLOCK #2 ---

		if event.name == "ended" then
		JUMP TO BLOCK #3
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #3 13-23, warpins: 1 ---
		local offsetY = event.y - cell.offsetBeginY

		--- END OF BLOCK #3 ---

		if math.abs(offsetY)
		 <= 5 then
		JUMP TO BLOCK #4
		else
		JUMP TO BLOCK #7
		end


		--- BLOCK #4 24-26, warpins: 1 ---
		--- END OF BLOCK #4 ---

		slot2 = if selectPic then
		JUMP TO BLOCK #5
		else
		JUMP TO BLOCK #6
		end


		--- BLOCK #5 27-31, warpins: 1 ---
		selectPic:removeSelf()

		selectPic = nil
		--- END OF BLOCK #5 ---

		FLOW; TARGET BLOCK #6


		--- BLOCK #6 32-60, warpins: 2 ---
		selectPic = display.newScale9Sprite(res.getframe2("pic/scale/scale17.png"), 0, 0, cc.size(472, h)):anchor(0, 0):pos(0, 0):add2(cell)

		--- END OF BLOCK #6 ---

		FLOW; TARGET BLOCK #7


		--- BLOCK #7 61-61, warpins: 4 ---
		return 
		--- END OF BLOCK #7 ---



	end)

	--- END OF BLOCK #15 ---

	FLOW; TARGET BLOCK #16


	--- BLOCK #16 272-273, warpins: 2 ---
	--- END OF BLOCK #16 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #8


	--- BLOCK #17 274-275, warpins: 1 ---
	return 
	--- END OF BLOCK #17 ---

	FLOW; TARGET BLOCK #18


	--- BLOCK #18 276-276, warpins: 2 ---
	--- END OF BLOCK #18 ---



end
guild.showSubLog = function (self, parent)
	--- BLOCK #0 1-23, warpins: 1 ---
	local maxLine = 60
	local chatView = an.newScroll(8, 8, 472, 328, {
		labelM = {
			16,
			params = {
				maxLine = maxLine
			}
		}
	}):add2(parent)
	--- END OF BLOCK #0 ---

	slot4 = if not g_data.guild.guildLog then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 24-24, warpins: 1 ---
	local msgs = {}

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 25-26, warpins: 2 ---
	--- END OF BLOCK #2 ---

	slot4 = if msgs then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #3 27-30, warpins: 1 ---
	--- END OF BLOCK #3 ---

	for i, v in ipairs(msgs)

	LOOP BLOCK #4
	GO OUT TO BLOCK #6


	--- BLOCK #4 31-44, warpins: 1 ---
	chatView.labelM:addLabel(v.get(v, "logInfo"), def.colors.labelGray):nextLine()
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 45-46, warpins: 2 ---
	--- END OF BLOCK #5 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #3


	--- BLOCK #6 47-114, warpins: 2 ---
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-14, warpins: 1 ---
		sound.playSound("103")
		net.send({
			CM_GILD_QUERY_LOG,
			param = 2,
			series = 30,
			tag = 0
		})

		self.guildLogType = 1

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/zzrz.png")
	}):add2(parent):anchor(0.5, 0.5):pos(442, -22)
	an.newBtn(res.gettex2("pic/common/btn20.png"), function ()
		--- BLOCK #0 1-14, warpins: 1 ---
		sound.playSound("103")
		net.send({
			CM_GILD_QUERY_LOG,
			param = 1,
			series = 30,
			tag = 0
		})

		self.guildLogType = 0

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/btn21.png"),
		sprite = res.gettex2("pic/panels/guild/cyrz.png")
	}):add2(parent):anchor(0.5, 0.5):pos(342, -22)

	return 
	--- END OF BLOCK #6 ---



end
guild.showOtherClanMem = function (self)
	--- BLOCK #0 1-101, warpins: 1 ---
	local back = display.newNode()

	back.size(back, display.width, display.height):addto(display.getRunningScene(), an.z.msgbox)
	back.setTouchEnabled(back, true)
	back.addNodeEventListener(back, cc.NODE_TOUCH_EVENT, function ()
		--- BLOCK #0 1-1, warpins: 1 ---
		return 
		--- END OF BLOCK #0 ---



	end)

	local bg = res.get2("pic/common/black_4.png"):addto(back):pos(display.cx, display.cy):anchor(0.5, 0.5)

	bg.size(bg, 400, 400)
	an.newBtn(res.gettex2("pic/common/close10.png"), function ()
		--- BLOCK #0 1-9, warpins: 1 ---
		sound.playSound("103")
		back:removeSelf()

		return 
		--- END OF BLOCK #0 ---



	end, {
		pressImage = res.gettex2("pic/common/close11.png"),
		size = cc.size(64, 64)
	}):addTo(bg):pos(bg.getw(bg) - 5, bg.geth(bg) - 5):anchor(1, 1)

	local width = {
		130,
		80,
		80,
		78
	}
	local Titlelabel = {
		"½ÇÉ«Ãû",
		"µÈ¼¶",
		"Ö°Òµ",
		"Ö°Îñ"
	}
	local posOffset = 16

	--- END OF BLOCK #0 ---

	for i, v in ipairs(width)

	LOOP BLOCK #1
	GO OUT TO BLOCK #3


	--- BLOCK #1 102-163, warpins: 1 ---
	display.newScale9Sprite(res.getframe2("pic/scale/scale15.png"), 0, 0, cc.size(v + 2, 42)):anchor(0.5, 0.5):pos(posOffset + v*0.5, bg.geth(bg) - 64):add2(bg)
	an.newLabel(Titlelabel[i], 20, 1, {
		color = def.colors.labelTitle
	}):anchor(0.5, 0.5):pos(posOffset + v*0.5, bg.geth(bg) - 64):add2(bg)

	posOffset = posOffset + v
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 164-165, warpins: 2 ---
	--- END OF BLOCK #2 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #3 166-182, warpins: 1 ---
	local infoView = an.newScroll(14, 16, 372, 300):add2(bg)
	local h = 42
	--- END OF BLOCK #3 ---

	slot8 = if not g_data.guild.guildcorpsMem then
	JUMP TO BLOCK #4
	else
	JUMP TO BLOCK #5
	end


	--- BLOCK #4 183-183, warpins: 1 ---
	local dataList = {}
	--- END OF BLOCK #4 ---

	FLOW; TARGET BLOCK #5


	--- BLOCK #5 184-198, warpins: 2 ---
	local posTitle = {
		"",
		"¸±¶Ó³¤",
		"¶Ó³¤",
		"¶Ó³¤",
		"¶Ó³¤"
	}

	infoView.setScrollSize(infoView, 372, math.max(300, #dataList*h))
	--- END OF BLOCK #5 ---

	for i, v in ipairs(dataList)


	LOOP BLOCK #6
	GO OUT TO BLOCK #13


	--- BLOCK #6 199-205, warpins: 1 ---
	slot15 = display.newScale9Sprite
	slot16 = res.getframe2
	--- END OF BLOCK #6 ---

	if i%2 == 0 then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 206-207, warpins: 1 ---
	slot17 = "pic/scale/scale18.png"
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #9


	--- BLOCK #8 208-208, warpins: 1 ---
	slot17 = "pic/scale/scale19.png"
	--- END OF BLOCK #8 ---

	FLOW; TARGET BLOCK #9


	--- BLOCK #9 209-344, warpins: 2 ---
	local cell = slot15(slot16(slot17), 0, 0, cc.size(372, h)):anchor(0, 0):pos(0, infoView.getScrollSize(infoView).height - i*h):add2(infoView)
	local label = g_data.player:fixStrLen(v.get(v, "name"), 8)

	an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(62, h*0.5)

	label = v.get(v, "level")

	an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(172, h*0.5)

	label = g_data.player:getOtherJobStr(v.get(v, "job"))

	an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(252, h*0.5)
	--- END OF BLOCK #9 ---

	slot16 = if not posTitle[v.get(v, "position")

	 + 1] then
	JUMP TO BLOCK #10
	else
	JUMP TO BLOCK #11
	end


	--- BLOCK #10 345-345, warpins: 1 ---
	label = ""

	--- END OF BLOCK #10 ---

	FLOW; TARGET BLOCK #11


	--- BLOCK #11 346-370, warpins: 2 ---
	an.newLabel(label, 18, 1, {
		color = def.colors.cellNor
	}):add2(cell):anchor(0.5, 0.5):pos(330, h*0.5)

	--- END OF BLOCK #11 ---

	FLOW; TARGET BLOCK #12


	--- BLOCK #12 371-372, warpins: 2 ---
	--- END OF BLOCK #12 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #5


	--- BLOCK #13 373-374, warpins: 1 ---
	return 
	--- END OF BLOCK #13 ---



end
guild.showMenu = function (self, pos, btn, data)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot3 = if not data then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-3, warpins: 1 ---
	return 

	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 4-8, warpins: 1 ---
	local cellCfg = {}
	local interval = 5
	local operation = {}

	--- END OF BLOCK #2 ---

	if btn == "Ö°Îñ²Ù×÷" then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 9-30, warpins: 1 ---
	table.insert(operation, {
		title = "Ð¶ÈÎ",
		op = function ()
			--- BLOCK #0 1-7, warpins: 1 ---
			--- END OF BLOCK #0 ---

			slot0 = if g_data.guild:isLeader()
			 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #4
			end


			--- BLOCK #1 8-14, warpins: 1 ---
			--- END OF BLOCK #1 ---

			if data:get("position")
			 ~= 1 then
			JUMP TO BLOCK #2
			else
			JUMP TO BLOCK #3
			end


			--- BLOCK #2 15-21, warpins: 1 ---
			main_scene.ui:tip("·Ç¸±¶Ó³¤²»ÄÜÐ¶ÈÎ")

			return 

			--- END OF BLOCK #2 ---

			FLOW; TARGET BLOCK #3


			--- BLOCK #3 22-35, warpins: 1 ---
			an.newMsgbox("ÄúÈ·¶¨Ð¶ÈÎ " .. data:get("name") .. " ¸±¶Ó³¤Ö°ÎñÂð£¿", function (isOk)
				--- BLOCK #0 1-2, warpins: 1 ---
				--- END OF BLOCK #0 ---

				if isOk == 1 then
				JUMP TO BLOCK #1
				else
				JUMP TO BLOCK #2
				end


				--- BLOCK #1 3-18, warpins: 1 ---
				net.send({
					CM_CORPS_DISMISS_VICE_CAPTAIN
				}, nil, {
					{
						"ID",
						data:get("ID")
					}
				})

				--- END OF BLOCK #1 ---

				FLOW; TARGET BLOCK #2


				--- BLOCK #2 19-19, warpins: 2 ---
				return 
				--- END OF BLOCK #2 ---



			end, {
				center = true,
				hasCancel = true
			})
			--- END OF BLOCK #3 ---

			UNCONDITIONAL JUMP; TARGET BLOCK #6


			--- BLOCK #4 36-42, warpins: 1 ---
			--- END OF BLOCK #4 ---

			slot0 = if g_data.guild:isViceLeader()
			 then
			JUMP TO BLOCK #5
			else
			JUMP TO BLOCK #6
			end


			--- BLOCK #5 43-48, warpins: 1 ---
			an.newMsgbox("ÄúÈ·¶¨Ð¶ÈÎ¸±¶Ó³¤Ö°ÎñÂð£¿", function (isOk)
				--- BLOCK #0 1-2, warpins: 1 ---
				--- END OF BLOCK #0 ---

				if isOk == 1 then
				JUMP TO BLOCK #1
				else
				JUMP TO BLOCK #2
				end


				--- BLOCK #1 3-18, warpins: 1 ---
				net.send({
					CM_CORPS_STEPDOWN
				}, nil, {
					{
						"ID",
						data:get("ID")
					}
				})

				--- END OF BLOCK #1 ---

				FLOW; TARGET BLOCK #2


				--- BLOCK #2 19-19, warpins: 2 ---
				return 
				--- END OF BLOCK #2 ---



			end, {
				center = true,
				hasCancel = true
			})

			--- END OF BLOCK #5 ---

			FLOW; TARGET BLOCK #6


			--- BLOCK #6 49-49, warpins: 3 ---
			return 
			--- END OF BLOCK #6 ---

			FLOW; TARGET BLOCK #7


			--- BLOCK #7 50-50, warpins: 2 ---
			--- END OF BLOCK #7 ---



		end
	})
	table.insert(operation, {
		title = "Éè¸±¶Ó³¤",
		op = function ()
			--- BLOCK #0 1-14, warpins: 1 ---
			an.newMsgbox("ÄúÈ·¶¨ÈÎÃü " .. data:get("name") .. " Îª¸±¶Ó³¤Âð£¿", function (isOk)
				--- BLOCK #0 1-2, warpins: 1 ---
				--- END OF BLOCK #0 ---

				if isOk == 1 then
				JUMP TO BLOCK #1
				else
				JUMP TO BLOCK #2
				end


				--- BLOCK #1 3-18, warpins: 1 ---
				net.send({
					CM_CORPS_APPOINT_VICE_CAPTAIN
				}, nil, {
					{
						"ID",
						data:get("ID")
					}
				})

				--- END OF BLOCK #1 ---

				FLOW; TARGET BLOCK #2


				--- BLOCK #2 19-19, warpins: 2 ---
				return 
				--- END OF BLOCK #2 ---



			end, {
				center = true,
				hasCancel = true
			})

			return 
			--- END OF BLOCK #0 ---



		end
	})
	table.insert(operation, {
		title = "×ªÈÃ¶Ó³¤",
		op = function ()
			--- BLOCK #0 1-14, warpins: 1 ---
			an.newMsgbox("ÄúÈ·¶¨×ªÈÃ¶Ó³¤Ö°Îñ¸ø " .. data:get("name") .. " Âð£¿", function (isOk)
				--- BLOCK #0 1-2, warpins: 1 ---
				--- END OF BLOCK #0 ---

				if isOk == 1 then
				JUMP TO BLOCK #1
				else
				JUMP TO BLOCK #4
				end


				--- BLOCK #1 3-12, warpins: 1 ---
				--- END OF BLOCK #1 ---

				if data:get("name")
				 == common.getPlayerName()
				 then
				JUMP TO BLOCK #2
				else
				JUMP TO BLOCK #3
				end


				--- BLOCK #2 13-19, warpins: 1 ---
				main_scene.ui:tip("²»ÄÜ×ªÈÃ¶Ó³¤¸ø×Ô¼º")

				return 

				--- END OF BLOCK #2 ---

				FLOW; TARGET BLOCK #3


				--- BLOCK #3 20-35, warpins: 2 ---
				net.send({
					CM_CORPS_TRANSFER_CAPTAIN
				}, nil, {
					{
						"ID",
						data:get("ID")
					}
				})

				--- END OF BLOCK #3 ---

				FLOW; TARGET BLOCK #4


				--- BLOCK #4 36-36, warpins: 2 ---
				return 
				--- END OF BLOCK #4 ---



			end, {
				center = true,
				hasCancel = true
			})

			return 
			--- END OF BLOCK #0 ---



		end
	})
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #6


	--- BLOCK #4 31-32, warpins: 1 ---
	--- END OF BLOCK #4 ---

	if btn == "¸ü¶à²Ù×÷" then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 33-74, warpins: 1 ---
	table.insert(operation, {
		title = "Ë½ÁÄ",
		op = function ()
			--- BLOCK #0 1-15, warpins: 1 ---
			common.changeChatStyle({
				{
					"target",
					data:get("name")
				},
				{
					"channel",
					"Ë½ÁÄ"
				}
			})

			return 
			--- END OF BLOCK #0 ---



		end
	})
	table.insert(operation, {
		title = "²é¿´ÐÅÏ¢",
		op = function ()
			--- BLOCK #0 1-14, warpins: 1 ---
			net.send({
				CM_QUERYUSERSTATE
			}, {
				data:get("name")
			})

			return 
			--- END OF BLOCK #0 ---



		end
	})
	table.insert(operation, {
		title = "Ìí¼ÓºÃÓÑ",
		op = function ()
			--- BLOCK #0 1-14, warpins: 1 ---
			net.send({
				CM_ADD_RELATION_FRIEND
			}, {
				data:get("name")
			})

			return 
			--- END OF BLOCK #0 ---



		end
	})
	table.insert(operation, {
		title = "ÑûÇë×é¶Ó",
		op = function ()
			--- BLOCK #0 1-9, warpins: 1 ---
			slot0 = net.send
			slot1 = {}
			--- END OF BLOCK #0 ---

			if #g_data.player.groupMembers == 0 then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 10-12, warpins: 1 ---
			--- END OF BLOCK #1 ---

			slot2 = if not CM_CREATEGROUP then
			JUMP TO BLOCK #2
			else
			JUMP TO BLOCK #3
			end


			--- BLOCK #2 13-13, warpins: 2 ---
			slot2 = CM_ADDGROUPMEMBER
			--- END OF BLOCK #2 ---

			FLOW; TARGET BLOCK #3


			--- BLOCK #3 14-23, warpins: 2 ---
			slot1[1] = slot2

			slot0(slot1, {
				data:get("name")
			})

			return 
			--- END OF BLOCK #3 ---



		end
	})
	table.insert(operation, {
		title = "Ìí¼Ó¹Ø×¢",
		op = function ()
			--- BLOCK #0 1-14, warpins: 1 ---
			net.send({
				CM_ADD_RELATION_ATTENTION
			}, {
				data:get("name")
			})

			return 
			--- END OF BLOCK #0 ---



		end
	})
	table.insert(operation, {
		title = "À­ºÚÃûµ¥",
		op = function ()
			--- BLOCK #0 1-14, warpins: 1 ---
			net.send({
				CM_ADD_RELATION_NORMBLACKLIST
			}, {
				data:get("name")
			})

			return 
			--- END OF BLOCK #0 ---



		end
	})

	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 75-79, warpins: 3 ---
	local panel = nil

	--- END OF BLOCK #6 ---

	for k, v in ipairs(operation)


	LOOP BLOCK #7
	GO OUT TO BLOCK #9


	--- BLOCK #7 80-91, warpins: 1 ---
	local c = {}
	c.w = 94
	c.h = 41
	c.idx = k - 1
	c.op = v
	c.cellCls = function ()
		--- BLOCK #0 1-32, warpins: 1 ---
		return an.newBtn(res.gettex2("pic/common/btn10.png"), function ()
			--- BLOCK #0 1-9, warpins: 1 ---
			sound.playSound("103")

			--- END OF BLOCK #0 ---

			slot0 = if c.op.op then
			JUMP TO BLOCK #1
			else
			JUMP TO BLOCK #2
			end


			--- BLOCK #1 10-13, warpins: 1 ---
			local _ = c.op.op()

			--- END OF BLOCK #1 ---

			FLOW; TARGET BLOCK #2


			--- BLOCK #2 14-18, warpins: 2 ---
			panel:removeSelf()

			return 
			--- END OF BLOCK #2 ---



		end, {
			pressImage = res.gettex2("pic/common/btn11.png"),
			label = {
				c.op.title,
				18,
				1,
				{
					color = def.colors.btn140
				}
			}
		}):anchor(0, 0)
		--- END OF BLOCK #0 ---



	end
	cellCfg[k] = c
	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 92-93, warpins: 2 ---
	--- END OF BLOCK #8 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #6


	--- BLOCK #9 94-113, warpins: 1 ---
	panel = common.createOperationMenu(cellCfg, interval, function (panel, cfg)
		--- BLOCK #0 1-4, warpins: 1 ---
		panel.removeSelf(panel)

		return 
		--- END OF BLOCK #0 ---



	end):add2(self, 10):pos(pos.x + 6, pos.y)

	return 
	--- END OF BLOCK #9 ---

	FLOW; TARGET BLOCK #10


	--- BLOCK #10 114-114, warpins: 2 ---
	--- END OF BLOCK #10 ---



end
guild.showError = function (self, errorCode)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot1 = if not errorCode then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-3, warpins: 1 ---
	errorCode = 1000
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 4-97, warpins: 2 ---
	local errorMsg = {}
	errorMsg[1] = "Ãû×Ö²»ºÏ·¨"
	errorMsg[2] = "Ãû×ÖÖØ¸´"
	errorMsg[3] = "ÒÑÓÐÕ½¶Ó"
	errorMsg[4] = "Íæ¼Ò²»ÔÚÏß"
	errorMsg[5] = "Íæ¼ÒÃ»ÓÐÕ½¶Ó"
	errorMsg[6] = "ÒÑÓÐÐÐ»á"
	errorMsg[7] = "Ä¿±ê²»´æÔÚ"
	errorMsg[8] = "ÇëÇóÒÑ¾­´æÔÚ"
	errorMsg[9] = "²»·ûºÏÉêÇëÌõ¼þ"
	errorMsg[10] = "ÇëÇó²»´æÔÚ"
	errorMsg[11] = "ÇëÇóµÄÀàÐÍ´íÎó"
	errorMsg[12] = "ÐÐ»á²»´æÔÚ"
	errorMsg[13] = "ÐÐ»á³ÉÔ±ÒÑÂú"
	errorMsg[14] = "¹ØÏµÀàÐÍ´íÎó"
	errorMsg[15] = "¹ØÏµÒÑ´æÔÚ"
	errorMsg[16] = "Õ½¶ÓÈËÊýÒÑÂú"
	errorMsg[17] = "Êý¾Ý´óÐ¡²»¶Ô"
	errorMsg[18] = "³ÉÔ±²»´æÔÚ"
	errorMsg[19] = "²»ÄÜ²Ù×÷±¾Õ½¶Ó³ÉÔ±"
	errorMsg[20] = "³¢ÊÔÉ¾³ý¶Ó³¤(Õ½¶Ó¶Ó³¤²»ÄÜ±»É¾³ý)"
	errorMsg[21] = "Ö°Î»ÒÑÂú"
	errorMsg[22] = "ÎÞÐ§µÄÄ¿±ê"
	errorMsg[23] = "ÀàÐÍ²»Æ¥Åä"
	errorMsg[24] = "ÐÅÏ¢³¤¶ÈÌ«³¤"
	errorMsg[25] = "Ã»ÓÐÕÒµ½Ä¿±ê"
	errorMsg[26] = "³ÉÔ±ÒÑ¾­´æÔÚ"
	errorMsg[27] = "¹ØÏµ²»´æÔÚ"
	errorMsg[28] = "ÔÚÐÐ»áÕ½ÇøÓò(ÎÞ·¨ÍË³öÐÐ»á)"
	errorMsg[29] = "ÔÚ¹¥³ÇÇøÓò(ÎÞ·¨ÍË³öÐÐ»á)"
	errorMsg[30] = "Ã»ÓÐ¸ü¶àÄÚÈÝ"
	errorMsg[31] = "¸Ã³ÉÔ±ÒÑÓÐÖ°Îñ"
	errorMsg[32] = "ÒÑÁªÃË²»¿ÉÐûÕ½"
	errorMsg[33] = "ÒÑÐûÕ½²»¿ÉÁªÃË"
	errorMsg[34] = "¶Ô·½¾Ü¾øÁªÃË"
	errorMsg[35] = "Íæ¼Ò²»ÔÊÐíÃæ¶ÔÃæ¼ÓÈË"
	errorMsg[36] = "Íæ¼ÒÃ»ÓÐ×ã¹»µÄ½ð±Ò"
	errorMsg[37] = "Ö»ÓÐÔÚ°²È«Çø²ÅÄÜÍË³öÕ½¶Ó"
	errorMsg[38] = "Ö»ÓÐÔÚ°²È«Çø²ÅÄÜÍË³öÐÐ»á"
	errorMsg[39] = "Ðè×ªÈÃ¶Ó³¤ºó²ÅÄÜ²Ù×÷ (ÍË³ö)"
	errorMsg[40] = "²»¿É×ªÈÃ¶Ó³¤¸ø×Ô¼º"
	errorMsg[555] = "ÎÞ²Ù×÷È¨ÏÞ"
	errorMsg[1000] = "Î´Öª´íÎó"
	slot4 = main_scene.ui
	slot3 = main_scene.ui.tip
	--- END OF BLOCK #2 ---

	slot5 = if not errorMsg[errorCode] then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 98-98, warpins: 1 ---
	slot5 = "Î´Öª´íÎó"

	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 99-100, warpins: 2 ---
	slot3(slot4, slot5)

	return 
	--- END OF BLOCK #4 ---



end

return guild
--- END OF BLOCK #0 ---



