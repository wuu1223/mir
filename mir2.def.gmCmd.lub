--- BLOCK #0 1-12, warpins: 1 ---
local gmCmd = {}
gmCmd.common = {}
gmCmd.sort = {}

scheduler.performWithDelayGlobal(function ()
	--- BLOCK #0 1-13, warpins: 1 ---
	local file = res.getfile("config/cmd.txt")
	local datas = string.split(file, "\r\n")

	--- END OF BLOCK #0 ---

	for i, v in ipairs(datas)


	LOOP BLOCK #1
	GO OUT TO BLOCK #8


	--- BLOCK #1 14-15, warpins: 1 ---
	--- END OF BLOCK #1 ---

	if v ~= "" then
	JUMP TO BLOCK #2
	else
	JUMP TO BLOCK #7
	end


	--- BLOCK #2 16-23, warpins: 1 ---
	local data = string.split(v, ";")
	--- END OF BLOCK #2 ---

	if data[6] == "common" then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 24-31, warpins: 1 ---
	gmCmd.common[#gmCmd.common + 1] = data
	--- END OF BLOCK #3 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #7


	--- BLOCK #4 32-37, warpins: 1 ---
	--- END OF BLOCK #4 ---

	slot8 = if not gmCmd.sort[data[6]] then
	JUMP TO BLOCK #5
	else
	JUMP TO BLOCK #6
	end


	--- BLOCK #5 38-42, warpins: 1 ---
	gmCmd.sort[data[6]] = {}
	--- END OF BLOCK #5 ---

	FLOW; TARGET BLOCK #6


	--- BLOCK #6 43-53, warpins: 2 ---
	gmCmd.sort[data[6]][#gmCmd.sort[data[6]] + 1] = data

	--- END OF BLOCK #6 ---

	FLOW; TARGET BLOCK #7


	--- BLOCK #7 54-55, warpins: 4 ---
	--- END OF BLOCK #7 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #0


	--- BLOCK #8 56-56, warpins: 1 ---
	return 
	--- END OF BLOCK #8 ---



end, 0)

return gmCmd
--- END OF BLOCK #0 ---



