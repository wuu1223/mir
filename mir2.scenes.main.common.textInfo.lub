--- BLOCK #0 1-5, warpins: 1 ---
local info = {}
info.show = function (labels, scenePos, params)
	--- BLOCK #0 1-2, warpins: 1 ---
	--- END OF BLOCK #0 ---

	slot2 = if not params then
	JUMP TO BLOCK #1
	else
	JUMP TO BLOCK #2
	end


	--- BLOCK #1 3-3, warpins: 1 ---
	params = {}
	--- END OF BLOCK #1 ---

	FLOW; TARGET BLOCK #2


	--- BLOCK #2 4-57, warpins: 2 ---
	local node = display.newNode():size(display.width, display.height):addto(main_scene.ui, main_scene.ui.z.textInfo)

	node.setTouchEnabled(node, true)
	node.setTouchSwallowEnabled(node, false)
	node.addNodeEventListener(node, cc.NODE_TOUCH_EVENT, function (event)
		--- BLOCK #0 1-3, warpins: 1 ---
		--- END OF BLOCK #0 ---

		if event.name == "ended" then
		JUMP TO BLOCK #1
		else
		JUMP TO BLOCK #2
		end


		--- BLOCK #1 4-7, warpins: 1 ---
		node:removeSelf()

		--- END OF BLOCK #1 ---

		FLOW; TARGET BLOCK #2


		--- BLOCK #2 8-9, warpins: 2 ---
		return true
		--- END OF BLOCK #2 ---



	end)

	local bg = display.newScale9Sprite(res.getframe2("pic/scale/scale4.png")):addto(node):anchor(0, 1)
	local w = 0
	local h = 7
	--- END OF BLOCK #2 ---

	slot7 = if not params.space then
	JUMP TO BLOCK #3
	else
	JUMP TO BLOCK #4
	end


	--- BLOCK #3 58-58, warpins: 1 ---
	local space = -2
	--- END OF BLOCK #3 ---

	FLOW; TARGET BLOCK #4


	--- BLOCK #4 59-62, warpins: 2 ---
	--- END OF BLOCK #4 ---

	for i=#labels, 1, -1
	LOOP BLOCK #5
	GO OUT TO BLOCK #6

	--- BLOCK #5 63-92, warpins: 2 ---
	local v = labels[i]:addto(bg, 99):anchor(0, 0):pos(10, h)
	w = math.max(w, v.getw(v))
	h = h + v.geth(v) + space
	--- END OF BLOCK #5 ---

	UNCONDITIONAL JUMP; TARGET BLOCK #4


	--- BLOCK #6 93-99, warpins: 1 ---
	w = w + 20
	h = h + 10
	local p = scenePos
	--- END OF BLOCK #6 ---

	if p.x < 0 then
	JUMP TO BLOCK #7
	else
	JUMP TO BLOCK #8
	end


	--- BLOCK #7 100-101, warpins: 1 ---
	p.x = 0
	--- END OF BLOCK #7 ---

	FLOW; TARGET BLOCK #8


	--- BLOCK #8 102-107, warpins: 2 ---
	--- END OF BLOCK #8 ---

	if display.width < p.x + w then
	JUMP TO BLOCK #9
	else
	JUMP TO BLOCK #10
	end


	--- BLOCK #9 108-111, warpins: 1 ---
	p.x = display.width - w
	--- END OF BLOCK #9 ---

	FLOW; TARGET BLOCK #10


	--- BLOCK #10 112-116, warpins: 2 ---
	--- END OF BLOCK #10 ---

	if display.height < p.y then
	JUMP TO BLOCK #11
	else
	JUMP TO BLOCK #12
	end


	--- BLOCK #11 117-119, warpins: 1 ---
	p.y = display.height
	--- END OF BLOCK #11 ---

	FLOW; TARGET BLOCK #12


	--- BLOCK #12 120-124, warpins: 2 ---
	--- END OF BLOCK #12 ---

	if p.y - h < 0 then
	JUMP TO BLOCK #13
	else
	JUMP TO BLOCK #14
	end


	--- BLOCK #13 125-125, warpins: 1 ---
	p.y = h

	--- END OF BLOCK #13 ---

	FLOW; TARGET BLOCK #14


	--- BLOCK #14 126-137, warpins: 2 ---
	bg.size(bg, w, h):pos(p.x, p.y)

	return node
	--- END OF BLOCK #14 ---



end

return info
--- END OF BLOCK #0 ---



